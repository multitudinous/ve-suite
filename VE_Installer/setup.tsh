#!/bin/csh
# sets up environment to build and/or run VE-Xplorer

#this is typically defined in your .cshrc file
#setenv VE_SUITE_HOME /home/vr/Applications/TSVEG/VE_Suite

if ( -e /etc/redhat-release ) then
   set firstWord=`cat /etc/redhat-release | awk -F" " '{print $1}'`
   #echo "firstWord is" ${firstWord}
   if ( ${firstWord} == "Red" ) then
      # extract some words from file to create something like RedHat_8.0 or RedHat_9
      setenv CFDHOSTTYPE `cat /etc/redhat-release | awk -F" " '{print $1 $2 "_" $5}'`
   else if ( ${firstWord} == "Fedora" ) then
      # extract some words from file to create something like Fedora_1
      setenv CFDHOSTTYPE `cat /etc/redhat-release | awk -F" " '{print $1 "_" $4}'`
   endif
else if ( -e /etc/SuSE-release ) then
   # extract first and third words from file to create something like SuSE_9.1
   setenv CFDHOSTTYPE `head -1 /etc/SuSE-release | awk -F" " '{print $1 "_" $3}'`
else
   #echo "uname is" `uname`
   setenv CFDHOSTTYPE `uname`
endif

#if creation of CFDHOSTTYPE caused parenthesis to be inserted, then remove...
setenv CFDHOSTTYPE `echo \"$CFDHOSTTYPE\" | sed -e 's/(//g' | sed -e 's/)//g' | sed -e 's/"//g'`

# Some like to hardcode the following variables for custom setups.
# The checked in version of this file should have the settings commented out
# to allow developers to set them from outside this script (see below).
#setenv TAO_BUILD FALSE
#setenv CLUSTER_APP FALSE

# TAO_BUILD can be set outside this script to override the default of FALSE
# Make sure that TAO_BUILD is set to either TRUE or FALSE...
if ( ! $?TAO_BUILD ) then
   setenv TAO_BUILD FALSE
   echo "   Because it was undefined, setting TAO_BUILD to" ${TAO_BUILD}
   echo "   If you want otherwise, open new shell, define TAO_BUILD, and run script again"
   echo ""
else if ( $TAO_BUILD != "TRUE" && $TAO_BUILD != "FALSE" ) then
   setenv TAO_BUILD FALSE
   echo "   Because it was not defined properly, setting TAO_BUILD to" ${TAO_BUILD}
   echo "   If you want otherwise, open new shell, define TAO_BUILD, and run script again"
   echo ""
endif

# CLUSTER_APP can be set outside this script to override the default of FALSE
# Make sure that CLUSTER_APP is set to either TRUE or FALSE...
if ( ! $?CLUSTER_APP ) then
   setenv CLUSTER_APP FALSE
   echo "   Because it was undefined, setting CLUSTER_APP to" ${CLUSTER_APP}
   echo "   If you want otherwise, redefine CLUSTER_APP"
else if ( $CLUSTER_APP != "TRUE" && $CLUSTER_APP != "FALSE" ) then
   setenv CLUSTER_APP FALSE
   echo "   Because it was not defined properly, setting CLUSTER_APP to" ${CLUSTER_APP}
   echo "   If you want otherwise, redefine CLUSTER_APP"
endif

#echo "TAO_BUILD =" ${TAO_BUILD}
#echo "CLUSTER_APP =" ${CLUSTER_APP}

setenv PFNFYLEVEL 2
setenv VPR_DEBUG_NFY_LEVEL 0
setenv VPR_DEBUG_ENABLE 1
setenv PFSHAREDSIZE 534773700
setenv OMNIORB_CONFIG ${VE_SUITE_HOME}/VE_Installer/omniORB4.cfg
setenv OMNINAMES_LOGDIR ${VE_SUITE_HOME}/VE_Installer

#echo "specifying libraries for" ${CFDHOSTTYPE}
if ( ${CFDHOSTTYPE} == "IRIX64" ) then
   setenv JDK_HOME /usr/java2
   setenv VTK_BASE_DIR /home/vr/Applications/TSVEG/Libraries/VTK4.4/IRIX32
   setenv WX_HOME /home/vr/Applications/TSVEG/Libraries/wxGTK-2.4.2/IRIX32
   setenv XERCESCROOT /home/vr/Applications/TSVEG/Libraries/xerces-2.5/IRIX32
   setenv VJ_BASE_DIR /home/vr/Applications/TSVEG/Libraries/vrjuggler-2.0a4/IRIX32-pthread
   setenv VJ_DEPS_DIR /home/vr/Applications/TSVEG/Libraries/vrj-deps/IRIX32
#/home/vr/Applications/TSVEG/Libraries/vrjuggler-2.0a4/IRIX32
   setenv LD_LIBRARYN32_PATH ${VJ_BASE_DIR}/lib32:${VTK_BASE_DIR}/lib/vtk:${VJ_DEPS_DIR}/lib32
   setenv LD_LIBRARYN32_PATH ${LD_LIBRARYN32_PATH}:/home/users/jhynek/Pigs/Oinks/OpenAL/openal/linux/bin/lib
   setenv LD_LIBRARYN32_PATH ${LD_LIBRARYN32_PATH}:${XERCESCROOT}/lib
   setenv LD_LIBRARYN32_PATH ${LD_LIBRARYN32_PATH}:${WX_HOME}/lib


   if ( ${TAO_BUILD} == "TRUE" ) then
      #setenv ACE_ROOT /home/vr/Applications/TSVEG/Libraries/ACE-5.4
      #setenv TAO_ROOT /home/vr/Applications/TSVEG/Libraries/TAO-1.4
      setenv ACE_ROOT /home/users/mccdo/ACE_TAO/Irix-vrac/ACE_wrappers
      setenv TAO_ROOT ${ACE_ROOT}/TAO
      #setenv LD_LIBRARYN32_PATH ${LD_LIBRARYN32_PATH}:${ACE_ROOT}/IRIX32/lib
      #setenv LD_LIBRARYN32_PATH ${LD_LIBRARYN32_PATH}:${TAO_ROOT}/IRIX32/lib:${WX_HOME}/lib
      setenv LD_LIBRARYN32_PATH ${LD_LIBRARYN32_PATH}:${ACE_ROOT}/ace:${ACE_ROOT}/lib
      setenv LD_LIBRARYN32_PATH ${LD_LIBRARYN32_PATH}:${TAO_ROOT}/TAO_IDL:${WX_HOME}/lib
      setenv PATH ${ACE_ROOT}/bin:${ACE_ROOT}/IRIX32/bin:${TAO_ROOT}/IRIX32/bin:${PATH}
   else
      setenv OMNI_HOME /home/vr/Applications/TSVEG/Libraries/omniORB-4.0.3/IRIX32
      setenv PYTHONPATH ${OMNI_HOME}/lib32/python2.3/site-packages
      setenv LD_LIBRARYN32_PATH ${LD_LIBRARYN32_PATH}:${OMNI_HOME}/lib32
      setenv PATH ${OMNI_HOME}/bin:${PATH}
   endif
      
else if ( ${CFDHOSTTYPE} =~ RedHat_* || ${CFDHOSTTYPE} =~ Fedora_* ) then
   setenv JDK_HOME /usr/java/j2sdk1.4.2_03
   setenv VTK_BASE_DIR /home/vr/Applications/TSVEG/Libraries/VTK4.4/Linux-RH80
   #setenv VTK_BASE_DIR /home/users/sjk60/vtk/VTK-4.4/RedHat_8.0
   setenv WX_HOME /home/vr/Applications/TSVEG/Libraries/wxGTK-2.4.2/Linux-RH80
   setenv XERCESCROOT /home/vr/Applications/TSVEG/Libraries/xerces-2.5/Linux-RH80
   setenv VJ_BASE_DIR /home/vr/Applications/TSVEG/Libraries/vrjuggler-2.0a4/Linux_rh8
   setenv VJ_DEPS_DIR /home/vr/Applications/TSVEG/Libraries/vrj-deps/Linux_rh8

   setenv LD_LIBRARY_PATH ${VJ_BASE_DIR}/lib:${VTK_BASE_DIR}/lib/vtk:${VJ_DEPS_DIR}/lib:${XERCESCROOT}/lib
   setenv LD_LIBRARY_PATH ${LD_LIBRARY_PATH}:${WX_HOME}/lib

   if ( ${TAO_BUILD} == "TRUE" ) then
      #setenv ACE_ROOT /home/vr/Applications/TSVEG/Libraries/ACE-5.4
      #setenv TAO_ROOT /home/vr/Applications/TSVEG/Libraries/TAO-1.4
      #setenv ACE_ROOT /home/users/mccdo/ACE_TAO/Irix-vrac/ACE_wrappers
      #setenv TAO_ROOT ${ACE_ROOT}/TAO
      #setenv LD_LIBRARYN32_PATH ${LD_LIBRARYN32_PATH}:${ACE_ROOT}/Linux/lib
      #setenv LD_LIBRARYN32_PATH ${LD_LIBRARYN32_PATH}:${TAO_ROOT}/Linux/lib:${WX_HOME}/lib

      setenv ACE_ROOT /home/users/mccdo/ACE_TAO/Suse-9-vrac/ACE_wrappers
      setenv TAO_ROOT ${ACE_ROOT}/TAO
      setenv LD_LIBRARY_PATH ${LD_LIBRARY_PATH}:${ACE_ROOT}/ace:${ACE_ROOT}/lib
      setenv LD_LIBRARY_PATH ${LD_LIBRARY_PATH}:${TAO_ROOT}/TAO_IDL
      setenv PATH ${ACE_ROOT}/bin:${ACE_ROOT}/Linux/bin:${TAO_ROOT}/Linux/bin:${PATH}
   else
      setenv OMNI_HOME /home/vr/Applications/TSVEG/Libraries/omniORB-4.0.5/Linux_rh8
      setenv PYTHONPATH ${OMNI_HOME}/lib/python2.2/site-packages
      setenv LD_LIBRARY_PATH ${LD_LIBRARY_PATH}:${OMNI_HOME}/lib
      setenv PATH ${OMNI_HOME}/bin:${PATH}
   endif

else if ( ${CFDHOSTTYPE} == "SuSE_9.1" ) then
   setenv JDK_HOME /usr/lib/java2
   setenv VTK_BASE_DIR /home/vr/Applications/TSVEG/Libraries/VTK4.4/Linux-SuSE91
   setenv WX_HOME /home/vr/Applications/TSVEG/Libraries/wxGTK-2.4.2/Linux-SuSE91
   setenv XERCESCROOT /home/vr/Applications/TSVEG/Libraries/xerces-2.5/Linux-SuSE91
   setenv VJ_BASE_DIR /home/vr/Juggler/2.0/vrjuggler-2.0-alpha4.linux-suse91
   setenv VJ_DEPS_DIR /home/vr/Juggler/2.0/vrjuggler-2.0-alpha4.linux-suse91-deps
   #setenv VJ_DEPS_DIR /home/users/mccdo/cppdom-0.3.2/Suse-9.1

   setenv LD_LIBRARY_PATH ${VJ_BASE_DIR}/lib:${VTK_BASE_DIR}/lib/vtk:${VJ_DEPS_DIR}/lib:${XERCESCROOT}/lib
   setenv LD_LIBRARY_PATH ${LD_LIBRARY_PATH}:${WX_HOME}/lib

   if ( ${TAO_BUILD} == "TRUE" ) then
      setenv MY_ACEDIR /home/users/mccdo/ACE_TAO
      setenv ACE_ROOT /home/users/mccdo/ACE_TAO/Suse-9-vrac/ACE_wrappers
      setenv TAO_ROOT ${ACE_ROOT}/TAO
      #setenv ACE_ROOT /home/vr/Applications/TSVEG/Libraries/ACE-5.4
      #setenv TAO_ROOT /home/vr/Applications/TSVEG/Libraries/TAO-1.4
      #setenv ACE_ROOT /home/users/mccdo/ACE_TAO/Irix-vrac/ACE_wrappers
      #setenv TAO_ROOT ${ACE_ROOT}/TAO
      #setenv LD_LIBRARYN32_PATH ${LD_LIBRARYN32_PATH}:${ACE_ROOT}/Linux/lib
      #setenv LD_LIBRARYN32_PATH ${LD_LIBRARYN32_PATH}:${TAO_ROOT}/Linux/lib:${WX_HOME}/lib
      setenv LD_LIBRARY_PATH ${LD_LIBRARY_PATH}:${ACE_ROOT}/ace:${ACE_ROOT}/lib
      setenv LD_LIBRARY_PATH ${LD_LIBRARY_PATH}:${TAO_ROOT}/TAO_IDL
   else
      setenv OMNI_HOME /home/vr/Applications/TSVEG/Libraries/omniORB-4.0.5/Linux-SuSE91
      setenv PYTHONPATH ${OMNI_HOME}/lib/python2.2/site-packages
      setenv LD_LIBRARY_PATH ${LD_LIBRARY_PATH}:${OMNI_HOME}/lib
      setenv PATH ${OMNI_HOME}/bin:${PATH}
   endif

else if ( ${CFDHOSTTYPE} == "SunOS" ) then
   setenv JDK_HOME /usr/java
   setenv VTK_BASE_DIR /home/vr/Applications/TSVEG/Libraries/VTK4.4/Solaris
   setenv WX_HOME /home/vr/Applications/TSVEG/Libraries/wxGTK-2.4.2/Solaris
   setenv XERCESCROOT /home/vr/Applications/TSVEG/Libraries/xerces-2.5/Solaris
   #setenv VJ_BASE_DIR ??
   #setenv VJ_DEPS_DIR ??

   setenv LD_LIBRARY_PATH ${VJ_BASE_DIR}/lib:${VTK_BASE_DIR}/lib/vtk:${VJ_DEPS_DIR}/lib:${XERCESCROOT}/lib
   setenv LD_LIBRARY_PATH ${LD_LIBRARY_PATH}:${WX_HOME}/lib

   if ( ${TAO_BUILD} == "TRUE" ) then
      setenv ACE_ROOT /home/users/mccdo/ACE_TAO/Suse-9-vrac/ACE_wrappers
      #setenv ACE_ROOT /home/users/mccdo/ACE_TAO/Linux-rh80-vrac/ACE_wrappers
      setenv TAO_ROOT ${ACE_ROOT}/TAO
      setenv LD_LIBRARY_PATH ${LD_LIBRARY_PATH}:${ACE_ROOT}/ace:${ACE_ROOT}/lib
      setenv LD_LIBRARY_PATH ${LD_LIBRARY_PATH}:${TAO_ROOT}/TAO_IDL
   else
      setenv OMNI_HOME /home/vr/Applications/TSVEG/Libraries/omniORB-4.0.3/Solaris
      setenv PYTHONPATH ${OMNI_HOME}/lib/python2.2/site-packages
      setenv LD_LIBRARY_PATH ${LD_LIBRARY_PATH}:${OMNI_HOME}/lib
      setenv PATH ${OMNI_HOME}/bin:${PATH}
   endif

else
   echo "ERROR: Unsupported operating system"
   echo "       OMNI_HOME, etc. are undefined"
endif

setenv TWEEK_BASE_DIR ${VJ_BASE_DIR}
setenv DZR_BASE_DIR   ${VJ_BASE_DIR}/share/Doozer
setenv SNX_BASE_DIR   ${VJ_BASE_DIR}
setenv PATH ${PATH}:${VJ_BASE_DIR}/bin:${VE_SUITE_HOME}/bin:${VE_SUITE_HOME}/bin/${CFDHOSTTYPE}:${VJ_DEPS_DIR}/bin
setenv PATH ${WX_HOME}/bin:${PATH}
setenv PATH ${JDK_HOME}/bin:${PATH}

#echo ""
#echo "Now you may type 'gmake' to build the application"
#echo "              or 'gmake clean'
#echo "              or 'gmake cleandepend'
#echo "              or 'run' to start the application in sim mode"
#echo "              or 'runc6' to start the application on the c6"
#echo "              or 'runc4.closed' or 'runc4.open' to start the application on the c4"
#echo ""
