#/bin/csh -f
#copies the appropriate libs/dlls from ve-suite for installs 
#in the future cmd line args will specify VE-Suite home 

setenv VE_VERSION _1.0 
#set vesuitedir $1
#if(vesuitedir)
#   setenv VE_SUITE_HOME $1
#else
#this is the release directory
if ( $?VE_SUITE_HOME ) then
   echo $VE_SUITE_HOME
else
   setenv VE_SUITE_HOME /home/vr/Applications/TSVEG/VE_Suite_current_dev/VE_Suite
endif

#determine the hosttype
if ( -e /etc/redhat-release ) then
   set firstWord=`cat /etc/redhat-release | awk -F" " '{print $1}'`
   #echo "firstWord is" ${firstWord}
   if ( ${firstWord} == "Red" ) then
      set thirdWord=`cat /etc/redhat-release | awk -F" " '{print $3}'`
      if ( ${thirdWord} == "Enterprise" ) then
         # extract some words from file to create something like RHEL_3
         setenv CFDHOSTTYPE `cat /etc/redhat-release | awk -F" " '{print "RHEL_" $7}'`
      else
         # extract some words from file to create something like RedHat_8.0 or RedHat_9
         setenv CFDHOSTTYPE `cat /etc/redhat-release | awk -F" " '{print $1 $2 "_" $5}'`
      endif
   else if ( ${firstWord} == "Fedora" ) then
      # extract some words from file to create something like Fedora_1
      setenv CFDHOSTTYPE `cat /etc/redhat-release | awk -F" " '{print $1 "_" $4}'`
   endif
else if ( -e /etc/SuSE-release ) then
   # extract some words from file to create something like SuSE_9.2_x86-64
   setenv CFDHOSTTYPE `head -1 /etc/SuSE-release | awk -F" " '{print $1 "_" $3 "_" $4}'`
else
   #echo "uname is" `uname`
   setenv CFDHOSTTYPE `uname`
endif

#if creation of CFDHOSTTYPE caused parenthesis to be inserted, then remove...
setenv CFDHOSTTYPE `echo \"$CFDHOSTTYPE\" | sed -e 's/(//g' | sed -e 's/)//g' | sed -e 's/"//g'`

#echo "specifying libraries for" ${CFDHOSTTYPE}
if ( ${CFDHOSTTYPE} == "IRIX64" ) then
   setenv JDK_HOME /usr/java2
   setenv VTK_BASE_DIR /home/vr/Applications/TSVEG/Libraries/VTK4.4/IRIX32
   setenv WX_HOME /home/vr/Applications/TSVEG/Libraries/Release/Debug/wxGTK-2.6.0/IRIX32
   setenv VJ_BASE_DIR /home/vr/Applications/TSVEG/Libraries/Release/Opt/vrjuggler-2.0.1/vrjuggler-2.0.1-irix-n32-posix
   setenv VJ_DEPS_DIR /home/vr/Applications/TSVEG/Libraries/Release/Opt/vrjuggler-2.0.1-deps/vrjuggler-2.0.1-irix-n32-posix-deps
   setenv OSG_HOME /home/vr/Applications/TSVEG/Libraries/Release/Opt/OSG/IRIX32
   setenv CORONA_HOME /home/vr/Applications/TSVEG/Libraries/Release/Opt/corona-1.0.2/Linux-SuSE92
   setenv ACE_HOME /home/vr/Applications/TSVEG/Libraries/ACE-5.4
   setenv TAO_HOME /home/vr/Applications/TSVEG/Libraries/TAO-1.4
   setenv XERCESCROOT /home/vr/Applications/TSVEG/Libraries/xerces-2.5/IRIX32
else 
   source ${VE_SUITE_HOME}/VE_Installer/setup.tsh
endif

#copy the appropriate dll's to the install directory

setenv VE_TEMP_DEPS_INST_DIR ${VE_SUITE_HOME}/VE_Installer/unixLinuxDepsInstalls
setenv VE_DEPS_PLAT_INSTALL_DIR ${VE_SUITE_HOME}/VE_Installer/unixLinuxDepsInstalls/${CFDHOSTTYPE}
setenv VE_INSTALLER_DIR ${VE_SUITE_HOME}/VE_Installer

echo "Copying dependency libs/dlls..." 
echo "To: " ${VE_TEMP_DEPS_INST_DIR}

#vrJuggler is 2.b.2 on IRIX
#if ( ${CFDHOSTTYPE} == "IRIX64" ) then
#   mkdir -p ${VE_DEPS_PLAT_INSTALL_DIR}/vrJuggler-2.b2
#else
   mkdir -p ${VE_DEPS_PLAT_INSTALL_DIR}/vrJuggler2.0.1
#endif

#need to check somehow to see if the directory already exists
mkdir -p ${VE_DEPS_PLAT_INSTALL_DIR}/bin
mkdir -p ${VE_DEPS_PLAT_INSTALL_DIR}/osg-fonts

echo "Removing old dlls and exes files..."
rm -rf ${VE_DEPS_PLAT_INSTALL_DIR}/bin/*

echo "Removing old vrJuggler files..."
rm -rf ${VE_DEPS_PLAT_INSTALL_DIR}/vrJuggler*/*

#go into the directory
cd ${VE_DEPS_PLAT_INSTALL_DIR}

#copy the libs into the install dir
#echo "Now copy all the deps to a new dir to create deps tar ball"
if ( ${CFDHOSTTYPE} == "IRIX64" ) then
   echo "Copying Juggler from:" ${VJ_BASE_DIR}
   cp -RD ${VJ_BASE_DIR}/lib32 ./vrJuggler2.0.1
   cp -RD ${VJ_BASE_DIR}/share/vrjuggler/data/configFiles ./vrJuggler2.0.1
   cp -RD ${VJ_BASE_DIR}/share/vrjuggler/data/definitions ./vrJuggler2.0.1
   echo "Copying Juggler dependencies from:" ${VJ_DEPS_DIR}
   cp -RD ${VJ_DEPS_DIR}/lib32/* ./vrJuggler2.0.1/lib32/.
   cp -RD ${VJ_DEPS_DIR}/bin ./vrJuggler2.0.1
else if ( ${CFDHOSTTYPE} =~ SUSE_10.*_*64 ) then
   echo "Copying Juggler from:" ${VJ_BASE_DIR}
   cp -Rd ${VJ_BASE_DIR}/lib64 ./vrJuggler2.0.1/lib64
   cp -Rd ${VJ_BASE_DIR}/share/vrjuggler/data/configFiles ./vrJuggler2.0.1
   cp -Rd ${VJ_BASE_DIR}/share/vrjuggler/data/definitions ./vrJuggler2.0.1
   echo "Copying Juggler dependencies from:" ${VJ_DEPS_DIR}
   cp -Rd ${VJ_DEPS_DIR}/lib ./vrJuggler2.0.1
   cp -Rd ${VJ_DEPS_DIR}/bin ./vrJuggler2.0.1
else
   echo "Copying Juggler from:" ${VJ_BASE_DIR}
   cp -Rd ${VJ_BASE_DIR}/lib ./vrJuggler2.0.1
   cp -Rd ${VJ_BASE_DIR}/share/vrjuggler/data/configFiles ./vrJuggler2.0.1
   cp -Rd ${VJ_BASE_DIR}/share/vrjuggler/data/definitions ./vrJuggler2.0.1
   echo "Copying Juggler dependencies from:" ${VJ_DEPS_DIR}
   cp -Rd ${VJ_DEPS_DIR}/lib ./vrJuggler2.0.1
   cp -Rd ${VJ_DEPS_DIR}/bin ./vrJuggler2.0.1
endif

echo "Copying wxWidgets from:" ${WX_HOME}
if ( ${CFDHOSTTYPE} == "IRIX64" ) then
   cp -RD ${WX_HOME}/lib/* ./bin
else
   cp -Rd ${WX_HOME}/lib/* ./bin
endif

echo "Copying xerces-c from:" ${XERCESCROOT}
if ( ${CFDHOSTTYPE} == "IRIX64" ) then
   cp -RD ${XERCESCROOT}/lib/* ./bin
else
   cp -Rd ${XERCESCROOT}/lib/* ./bin
endif

echo "Copying VTK from:" ${VTK_BASE_DIR}
if ( ${CFDHOSTTYPE} == "IRIX64" ) then
   cp -RD ${VTK_BASE_DIR}/lib/*.so ./bin
else
   cp -Rd ${VTK_BASE_DIR}/lib/* ./bin
endif

echo "Copying ACE from:" ${TAO_HOME}
if ( ${CFDHOSTTYPE} == "IRIX64" ) then
   cp -RD ${ACE_HOME}/IRIX32/lib/* ./bin
else if ( ${CFDHOSTTYPE} =~ SuSE_9.*_*64 ) then
   #cp -Rd ${ACE_HOME}/Linux64/lib/* ./bin
else 
   #cp -Rd ${TAO_HOME}/lib/* ./bin
endif

echo "Copying TAO from:" ${TAO_HOME}

if ( ${CFDHOSTTYPE} == "IRIX64" ) then
   cp -RD ${TAO_HOME}/IRIX32/lib/* ./bin
   cp -RD ${TAO_HOME}/IRIX32/bin/Naming_Service ./bin
else if ( ${CFDHOSTTYPE} =~ SuSE_9.*_*64 ) then
   cp -Rd ${TAO_HOME}/Linux64/lib/* ./bin
   cp -Rd ${TAO_HOME}/bin/Naming_Service ./bin
   cp -Rd ${ACE_HOME}/lib/* ./bin
else 
   cp -Rd ${TAO_HOME}/lib/* ./bin
   cp -Rd ${TAO_HOME}/bin/Naming_Service ./bin
endif

echo "Copying OSG from: " ${OSG_HOME}
if ( ${CFDHOSTTYPE} == "IRIX64" ) then
   cp ${OSG_HOME}/lib32/*.so ./bin
   cp ${OSG_HOME}/lib32/osgPlugins/*.so ./bin
   cp ${OSG_HOME}/share/OpenSceneGraph-Data/fonts/* ./osg-fonts
else if ( ${CFDHOSTTYPE} =~ S*SE_*.*_*64 ) then
   cp ${OSG_HOME}/lib64/*.so ./bin
   cp ${OSG_HOME}/lib64/osgPlugins/*.so ./bin
   cp ${OSG_HOME}/lib/*.so ./bin
else 
   cp ${OSG_HOME}/lib/*.so ./bin
   cp ${OSG_HOME}/lib/osgPlugins/*.so ./bin
endif

echo "Creating tar.gz file..."
#write the tar file in the install directory
cd ${VE_TEMP_DEPS_INST_DIR}
pwd

mkdir ./VE_Suite_deps${VE_VERSION}
setenv VE_INSTALL_TAR_DIR ./VE_Suite_deps${VE_VERSION}
mv ./${CFDHOSTTYPE} ${VE_INSTALL_TAR_DIR}

# on irix /usr/freeware/bin
if ( ${CFDHOSTTYPE} == "IRIX64" ) then
   /usr/freeware/bin/tar -zcvf ./vesuite_deps${VE_VERSION}_${CFDHOSTTYPE}.tar.gz ${VE_INSTALL_TAR_DIR}
else
   tar -zcvf ./vesuite_deps${VE_VERSION}_${CFDHOSTTYPE}.tar.gz ${VE_INSTALL_TAR_DIR}
endif

echo "Moving the tar.gz file to: "${VE_INSTALLER_DIR}
mv ./vesuite_deps${VE_VERSION}_${CFDHOSTTYPE}.tar.gz ${VE_INSTALLER_DIR}

echo "Removing temp install dir: " ${VE_TEMP_DEPS_INST_DIR}
cd ${VE_INSTALLER_DIR}
rm -rf ${VE_TEMP_DEPS_INST_DIR}
echo "Finished."
