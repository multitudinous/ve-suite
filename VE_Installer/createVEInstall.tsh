#/bin/csh -f
#copies the appropriate libs/dlls from ve-suite for installs 
#in the future cmd line args will specify VE-Suite home 

setenv VE_VERSION 1.0.2
#set vesuitedir $1
#if(vesuitedir)
#   setenv VE_SUITE_HOME $1
#else
#this is the release directory
if ( $?VE_SUITE_HOME ) then
   echo $VE_SUITE_HOME
else 
   setenv VE_SUITE_HOME /home/vr/Applications/TSVEG/VE_Suite_current_dev/VE_Suite
endif

#determine the platform
if ( -e /etc/redhat-release ) then
   set firstWord=`cat /etc/redhat-release | awk -F" " '{print $1}'`
   #echo "firstWord is" ${firstWord}
   if ( ${firstWord} == "Red" ) then
      set thirdWord=`cat /etc/redhat-release | awk -F" " '{print $3}'`
      if ( ${thirdWord} == "Enterprise" ) then
         # extract some words from file to create something like RHEL_3
         setenv CFDHOSTTYPE `cat /etc/redhat-release | awk -F" " '{print "RHEL_" $7}'`
      else
         # extract some words from file to create something like RedHat_8.0 or RedHat_9
         setenv CFDHOSTTYPE `cat /etc/redhat-release | awk -F" " '{print $1 $2 "_" $5}'`
      endif
   else if ( ${firstWord} == "Fedora" ) then
      # extract some words from file to create something like Fedora_1
      setenv CFDHOSTTYPE `cat /etc/redhat-release | awk -F" " '{print $1 "_" $4}'`
   endif
else if ( -e /etc/SuSE-release ) then
   # extract some words from file to create something like SuSE_9.2_x86-64
   setenv CFDHOSTTYPE `head -1 /etc/SuSE-release | awk -F" " '{print $1 "_" $3 "_" $4}'`
else
   #echo "uname is" `uname`
   setenv CFDHOSTTYPE `uname`
endif

#if creation of CFDHOSTTYPE caused parenthesis to be inserted, then remove...
setenv CFDHOSTTYPE `echo \"$CFDHOSTTYPE\" | sed -e 's/(//g' | sed -e 's/)//g' | sed -e 's/"//g'`

#copy the appropriate dll's to the install directory

setenv VE_TEMP_INST_DIR ${VE_SUITE_HOME}/VE_Installer/unixLinuxInstalls
setenv VE_PLAT_INSTALL_DIR ${VE_SUITE_HOME}/VE_Installer/unixLinuxInstalls/${CFDHOSTTYPE}
setenv VE_INSTALLER_DIR ${VE_SUITE_HOME}/VE_Installer

echo "Copying libs/dlls for:" ${CFDHOSTTYPE}
echo "from:" ${VE_SUITE_HOME}
echo "to: " ${VE_PLAT_INSTALL_DIR}

#need to check somehow to see if the directory already exists
mkdir -p ${VE_PLAT_INSTALL_DIR}/bin
mkdir -p ${VE_PLAT_INSTALL_DIR}/bin/Plugins
mkdir -p ${VE_PLAT_INSTALL_DIR}/bin/Plugins/GE
mkdir -p ${VE_PLAT_INSTALL_DIR}/bin/Plugins/GE/${CFDHOSTTYPE}
mkdir -p ${VE_PLAT_INSTALL_DIR}/bin/Plugins/UI
mkdir -p ${VE_PLAT_INSTALL_DIR}/bin/Plugins/UI/${CFDHOSTTYPE}
mkdir -p ${VE_PLAT_INSTALL_DIR}/include
mkdir -p ${VE_PLAT_INSTALL_DIR}/include/VE_Xplorer
mkdir -p ${VE_PLAT_INSTALL_DIR}/include/VE_Xplorer/SceneGraph
mkdir -p ${VE_PLAT_INSTALL_DIR}/include/VE_Xplorer/SceneGraph/NURBS
mkdir -p ${VE_PLAT_INSTALL_DIR}/include/VE_Xplorer/SceneGraph/Utilities
mkdir -p ${VE_PLAT_INSTALL_DIR}/include/VE_Xplorer/TextureBased
mkdir -p ${VE_PLAT_INSTALL_DIR}/include/VE_Xplorer/Utilities
mkdir -p ${VE_PLAT_INSTALL_DIR}/include/VE_Xplorer/DefaultGraphicalPlugin
mkdir -p ${VE_PLAT_INSTALL_DIR}/include/VE_Xplorer/GraphicalPlugin
mkdir -p ${VE_PLAT_INSTALL_DIR}/include/VE_Xplorer/GE
mkdir -p ${VE_PLAT_INSTALL_DIR}/include/VE_Xplorer/XplorerNetwork
mkdir -p ${VE_PLAT_INSTALL_DIR}/include/VE_Xplorer/XplorerHandlers
mkdir -p ${VE_PLAT_INSTALL_DIR}/include/VE_Xplorer/VoiceCommand

mkdir -p ${VE_PLAT_INSTALL_DIR}/include/VE_Conductor
mkdir -p ${VE_PLAT_INSTALL_DIR}/include/VE_Conductor/DefaultPlugin
mkdir -p ${VE_PLAT_INSTALL_DIR}/include/VE_Conductor/Framework
mkdir -p ${VE_PLAT_INSTALL_DIR}/include/VE_Conductor/GUIPlugin
mkdir -p ${VE_PLAT_INSTALL_DIR}/include/VE_Conductor/Network
mkdir -p ${VE_PLAT_INSTALL_DIR}/include/VE_Conductor/UIWizard
mkdir -p ${VE_PLAT_INSTALL_DIR}/include/VE_Conductor/Utilities
mkdir -p ${VE_PLAT_INSTALL_DIR}/include/VE_Conductor/xpm

mkdir -p ${VE_PLAT_INSTALL_DIR}/include/VE_Open
mkdir -p ${VE_PLAT_INSTALL_DIR}/include/VE_Open/idl
mkdir -p ${VE_PLAT_INSTALL_DIR}/include/VE_Open/skel
mkdir -p ${VE_PLAT_INSTALL_DIR}/include/VE_Open/XML
mkdir -p ${VE_PLAT_INSTALL_DIR}/include/VE_Open/XML/CAD
mkdir -p ${VE_PLAT_INSTALL_DIR}/include/VE_Open/XML/Shader
mkdir -p ${VE_PLAT_INSTALL_DIR}/include/VE_Open/XML/Model

mkdir -p ${VE_PLAT_INSTALL_DIR}/include/VE_CE
mkdir -p ${VE_PLAT_INSTALL_DIR}/include/VE_CE/UnitWrapper
mkdir -p ${VE_PLAT_INSTALL_DIR}/include/VE_CE/Utilities

mkdir -p ${VE_PLAT_INSTALL_DIR}/lib
mkdir -p ${VE_PLAT_INSTALL_DIR}/shaders
mkdir -p ${VE_PLAT_INSTALL_DIR}/installerImages
mkdir -p ${VE_PLAT_INSTALL_DIR}/exampleDatasets
mkdir -p ${VE_PLAT_INSTALL_DIR}/exampleDatasets/simple
mkdir -p ${VE_PLAT_INSTALL_DIR}/exampleDatasets/PrISUm


#go into the directory
cd ${VE_PLAT_INSTALL_DIR}

#copy the libs into the install dir

echo "Copying new exes..."
cp ${VE_SUITE_HOME}/bin/${CFDHOSTTYPE}/* ./bin

echo "Copying Default Plugin..."
cp -rf ${VE_SUITE_HOME}/bin/Plugins/GE/${CFDHOSTTYPE}/*.so ./bin/Plugins/GE/${CFDHOSTTYPE}
cp -rf ${VE_SUITE_HOME}/bin/Plugins/UI/${CFDHOSTTYPE}/*.so ./bin/Plugins/UI/${CFDHOSTTYPE}

echo "Copying new dlls..."
cp ${VE_SUITE_HOME}/lib/${CFDHOSTTYPE}/*.so ./bin

echo "Copying includes..."
echo "===Xplorer includes==="
echo "      XplorerHandlers"
cp -r ${VE_SUITE_HOME}/VE_Xplorer/XplorerHandlers/*.h ./include/VE_Xplorer/XplorerHandlers/.
echo "      Utilities"
cp -r ${VE_SUITE_HOME}/VE_Xplorer/Utilities/*.h ./include/VE_Xplorer/Utilities/.
echo "      SceneGraph"
cp -r ${VE_SUITE_HOME}/VE_Xplorer/SceneGraph/*.h ./include/VE_Xplorer/SceneGraph/.
echo "      NURBS"
cp -r ${VE_SUITE_HOME}/VE_Xplorer/SceneGraph/NURBS/*.h ./include/VE_Xplorer/SceneGraph/NURBS/.
echo "      SceneGraph Utilities"
cp -r ${VE_SUITE_HOME}/VE_Xplorer/SceneGraph/*.h ./include/VE_Xplorer/SceneGraph/Utilities/.
echo "      TextureBased"
cp -r ${VE_SUITE_HOME}/VE_Xplorer/TextureBased/*.h ./include/VE_Xplorer/TextureBased/.
echo "      GraphicalPlugin"
cp -r ${VE_SUITE_HOME}/VE_Xplorer/GraphicalPlugin/*.h ./include/VE_Xplorer/GraphicalPlugin/.
echo "      XplorerNetwork"
cp -r ${VE_SUITE_HOME}/VE_Xplorer/XplorerNetwork/*.h ./include/VE_Xplorer/XplorerNetwork/.
echo "      DefaultGraphicalPlugin"
cp -r ${VE_SUITE_HOME}/VE_Xplorer/DefaultGraphicalPlugin/*.h ./include/VE_Xplorer/DefaultGraphicalPlugin/.
echo "      GE"
cp -r ${VE_SUITE_HOME}/VE_Xplorer/GE/*.h ./include/VE_Xplorer/GE/.

echo "===Conductor includes==="
echo "      GUIPlugin"
cp -r ${VE_SUITE_HOME}/VE_Conductor/GUIPlugin/*.h ./include/VE_Conductor/GUIPlugin/.
echo "      Network"
cp -r ${VE_SUITE_HOME}/VE_Conductor/Network/*.h ./include/VE_Conductor/Network/.
echo "      Utilities"
cp -r ${VE_SUITE_HOME}/VE_Conductor/Utilities/*.h ./include/VE_Conductor/Utilities/.
echo "      Framework"
cp -r ${VE_SUITE_HOME}/VE_Conductor/Framework/*.h ./include/VE_Conductor/Framework/.
echo "      UIWizard"
cp -r ${VE_SUITE_HOME}/VE_Conductor/UIWizard/*.h ./include/VE_Conductor/UIWizard/.
echo "      DefaultPlugin"
cp -r ${VE_SUITE_HOME}/VE_Conductor/DefaultPlugin/*.h ./include/VE_Conductor/DefaultPlugin/.
echo "      xpm"
cp -r ${VE_SUITE_HOME}/VE_Conductor/xpm/*.xpm ./include/VE_Conductor/xpm/.

echo "===CE includes==="
echo "      CE"
cp -r ${VE_SUITE_HOME}/VE_CE/*.h ./include/VE_CE/.
echo "      UnitWrapper"
cp -r ${VE_SUITE_HOME}/VE_CE/UnitWrapper/*.h ./include/VE_CE/UnitWrapper/.
echo "      Utilities"
cp -r ${VE_SUITE_HOME}/VE_CE/Utilities/*.h ./include/VE_CE/Utilities/.

echo "===Open includes==="
echo "      idl"
cp -r ${VE_SUITE_HOME}/VE_Open/idl/* ./include/VE_Open/idl/.
echo "      skel"
cp -r ${VE_SUITE_HOME}/VE_Open/skel/*.h ./include/VE_Open/skel/.
echo "      XML"
cp -r ${VE_SUITE_HOME}/VE_Open/XML/*.h ./include/VE_Open/XML/.
echo "      CAD"
cp -r ${VE_SUITE_HOME}/VE_Open/XML/CAD/*.h ./include/VE_Open/XML/CAD/.
echo "      Shader"
cp -r ${VE_SUITE_HOME}/VE_Open/XML/Shader/*.h ./include/VE_Open/XML/Shader/.
echo "      Model"
cp -r ${VE_SUITE_HOME}/VE_Open/XML/Model/*.h ./include/VE_Open/XML/Model/.

#echo "Copying libraries..."
#cp ${VE_SUITE_HOME}/${CFDHOSTTYPE}/lib*.lib ./lib

echo "Copying Sample shader files..."
cp ${VE_SUITE_HOME}/VE_TestSuite/brick.vea ./shaders/brick.vea
cp ${VE_SUITE_HOME}/VE_TestSuite/gooch.vea ./shaders/gooch.vea
cp ${VE_SUITE_HOME}/VE_TestSuite/phong_GL_Default.vea ./shaders/phong_GL_Default.vea
cp ${VE_SUITE_HOME}/VE_TestSuite/phong.vea ./shaders/phong.vea
cp ${VE_SUITE_HOME}/VE_TestSuite/toon.vea ./shaders/toon.vea
cp ${VE_SUITE_HOME}/VE_TestSuite/x-ray.vea ./shaders/x-ray.vea

echo "======Copying simple example model files======"
cp ${VE_SUITE_HOME}/VE_Installer/installer/simple.ves ./exampleDatasets/simple/.
echo "   simple VTK files..."
cp ${VE_SUITE_HOME}/VE_TestSuite/2scl.vtu ./exampleDatasets/simple/.
cp ${VE_SUITE_HOME}/VE_TestSuite/3scl2vec.vtu ./exampleDatasets/simple/.
cp ${VE_SUITE_HOME}/VE_TestSuite/3scl.vtu ./exampleDatasets/simple/. 
cp ${VE_SUITE_HOME}/VE_TestSuite/vtkPolyData.vtp ./exampleDatasets/simple/. 

echo "   simple geometery files..."
cp ${VE_SUITE_HOME}/VE_TestSuite/eightCorners.stl ./exampleDatasets/simple/.
cp ${VE_SUITE_HOME}/VE_TestSuite/Surface0.75.stl ./exampleDatasets/simple/.

echo "   Sample simple texture data..."
cp -R ${VE_SUITE_HOME}/VE_TestSuite/simpleScalars/* ./exampleDatasets/simple/.
echo "======Done creating simple example data directory======"
echo""
echo""
echo""
echo "======Copying PrISUm example model files======"
echo "   PrISUm VTK files..."
cp /home/vr/Applications/TSVEG/Test_Pit/PrISUm/outFile3.vtk ./exampleDatasets/PrISUm/.
echo "   PrISUm geometery files..."
cp /home/vr/Applications/TSVEG/Test_Pit/PrISUm/PrISUmblend.obj ./exampleDatasets/PrISUm/.
cp /home/vr/Applications/TSVEG/Test_Pit/PrISUm/PrISUmblend.mtl ./exampleDatasets/PrISUm/.
cp /home/vr/Applications/TSVEG/Test_Pit/PrISUm/utext.JPG ./exampleDatasets/PrISUm/.

echo "======Done creating PrISUm example data directory======"

#remove the subversion directories
rm -rf ./exampleDatasets/simple/scalars/.svn
rm -rf ./exampleDatasets/simple/scalars/fourth_param_is_a_scalar/.svn
rm -rf ./exampleDatasets/simple/scalars/200_to_1000/.svn
rm -rf ./exampleDatasets/simple/scalars/first-scalar/.svn

rm -rf ./exampleDatasets/simple/vectors/.svn
rm -rf ./exampleDatasets/simple/vectors/secondvector/.svn
rm -rf ./exampleDatasets/simple/vectors/sample_vector/.svn

rm -rf ./bin/Plugins/.svn
rm -rf ./bin/Plugins/UI/.svn
rm -rf ./bin/Plugins/GE/.svn

#echo "Copying setup file..."
cp -f ${VE_SUITE_HOME}/VE_Installer/installer/setupUL.tsh ./setup.tsh

#echo "Copying VES script file..."
cp -f ${VE_SUITE_HOME}/VE_Installer/installer/VES.run ./bin/VES

echo "Copying VE-Launcher script..."
cp -f ${VE_SUITE_HOME}/VE_Installer/installer/vel*.py ./.
cp -f ${VE_SUITE_HOME}/VE_Installer/installer/installerImages/ve_logo.xpm ./installerImages/.
cp -f ${VE_SUITE_HOME}/VE_Installer/installer/installerImages/velaunher_banner.bmp ./installerImages/.

echo "Copying Desktop configuration file..."
mkdir ./stereo_desktop
mkdir ./dualhead_configs
cp -rf ${VE_SUITE_HOME}/VE_Xplorer/stereo_desktop/* ./stereo_desktop
cp -rf ${VE_SUITE_HOME}/VE_Xplorer/dualhead_configs/* ./dualhead_configs

echo "Creating tar.gz file..."
#write the tar file in the install directory
cd ${VE_TEMP_INST_DIR}
pwd

mkdir ./VE_Suite${VE_VERSION}
setenv VE_INSTALL_TAR_DIR ./VE_Suite${VE_VERSION}
mv ./${CFDHOSTTYPE} ${VE_INSTALL_TAR_DIR}

# on irix /usr/freeware/bin
if ( ${CFDHOSTTYPE} == "IRIX64" ) then
   /usr/freeware/bin/tar -zcvf ./vesuite_${VE_VERSION}_${CFDHOSTTYPE}.tar.gz ${VE_INSTALL_TAR_DIR}
else
   tar -zcvf ./vesuite_${VE_VERSION}_${CFDHOSTTYPE}.tar.gz ${VE_INSTALL_TAR_DIR}
endif

echo "Moving the tar.gz file to: "${VE_INSTALLER_DIR}
mv ./vesuite_${VE_VERSION}_${CFDHOSTTYPE}.tar.gz ${VE_INSTALLER_DIR}

echo "Removing temp install dir: " ${VE_TEMP_INST_DIR}
cd ${VE_INSTALLER_DIR}
pwd
rm -rf ${VE_TEMP_INST_DIR}

echo "Finished."
