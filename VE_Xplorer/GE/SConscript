##Builds VE_Xplorer<tag>
import os, sys, string
pj = os.path.join

Import('baseEnv ves_pkg LIBDIR GetPlatform execOsgPatTag buildDir osg_options vtk_options xerces_options')

srcs = Split("""
   cfdApp.cxx
   cfdAppWrapper.cxx
   cfdVEXplorer.cxx
   cfdVjObsWrapper.cxx
   VjObs_i.cxx 
""")

env = ves_pkg.getEnv().Copy()
env.Append(
            LIBS = ['VE_XML', 
                   'VE_SceneGraph%s' %(execOsgPatTag),
                   'VE_UtilLib',
                   'VE_TextureBasedLib%s' %(execOsgPatTag),
                   'VE_OpenModuleLib',
                   'VE_XplorerLib%s' %(execOsgPatTag),
                   'VE_XplorerNetworkLib%s' %(execOsgPatTag),
                   'GraphicalPlugin%s' %(execOsgPatTag)])

env.Append(LIBPATH = [pj('#', buildDir, 'VE_Xplorer','SceneGraph'),
                        pj('#', buildDir, 'VE_Xplorer','XplorerHandlers'),
                        pj('#', buildDir, 'VE_Xplorer','Utilities'),
                        pj('#', buildDir, 'VE_Xplorer','TextureBased'),
                        pj('#', buildDir, 'VE_Xplorer','GraphicalPlugin'),
                        pj('#', buildDir, 'VE_Xplorer','XplorerNetwork'),
                        pj('#', buildDir, 'VE_Open','skel'),
                        pj('#', buildDir, 'VE_Open','XML')])
vtk_options.apply( env )
osg_options.apply( env )
xerces_options.apply( env )
env.ParseConfig('flagpoll TAO \
                          ACE TAO_IORInterceptor TAO_ObjRefTemplate TAO_Valuetype \
                          TAO_CosNaming TAO_Svc_Utils TAO_IORTable TAO_Messaging \
                          TAO_PortableServer TAO_BiDirGIOP TAO_AnyTypeCode \
                          --libs --cflags')
env.ParseConfig('flagpoll vrjuggler --require-Version=%s --get-vrj-ogl-libs --libs --cflags'%env['VRJugglerVersion'])
env.ParseConfig('flagpoll Boost.Filesystem --require-Version=%s --libs --cflags'%env['BoostVersion'])
env.ParseConfig('flagpoll bullet --libs --cflags')
#opal_options.apply( env )
#ode_options.apply( env )
#opal_options.apply( env )
#env.Append( CPPFLAGS = ['-ffriend-injection'] )
#env.Append( LINKFLAGS = ['-ffriend-injection'] )
prog = ves_pkg.createProgram('project%s' %(execOsgPatTag), env, 'bin')
prog.addSources( srcs )
prog.build()

