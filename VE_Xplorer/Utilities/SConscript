##Builds VE_UtilLib
import os, sys, string
pj = os.path.join

Import('baseEnv ves_pkg LIBDIR execOsgPatTag vtk_options')

sources = Split("""
   cfdAccessoryFunctions.cxx
   cfdGrid2Surface.cxx
   cfdVTKFileHandler.cxx
   cleanVtk.cxx
   fileIO.cxx
   readWriteVtkThings.cxx
   setScalarAndVector.cxx
   viewCells.cxx
""")

headers = Split("""
   cfdAccessoryFunctions.h
   cfdGrid2Surface.h
   cfdVTKFileHandler.h
   cleanVtk.h
   fileIO.h
   readWriteVtkThings.h
   setScalarAndVector.h
   viewCells.h
""")

##srcs = map(lambda s: pj('#', 'VE_Xplorer', 'Utilities', s), util_srcs)

lib_env = ves_pkg.getEnv().Copy()
lib_env.ParseConfig('flagpoll Boost.Filesystem --require-Version=%s --cflags --libs'%lib_env['BoostVersion'])
vtk_options.apply( lib_env )
if baseEnv['StaticOnly'] == "no":
   lib = ves_pkg.createStaticAndSharedLibrary('VE_UtilLib',
                                                        lib_env,
                                                        installPrefix = LIBDIR)
else:
   lib = ves_pkg.createStaticLibrary('VE_UtilLib', lib_env,
                                               installPrefix = LIBDIR)
   
lib.addSources(sources)
lib.addHeaders(headers,  pj( 'VE_Xplorer', 'Utilities'))
lib.build()
