##Builds VE_XplorerNetworkLib<tag>
import os, sys, string
pj = os.path.join

Import('baseEnv')
Import('libPath')
Import('execOsgPatTag')

xplorer_srcs = Split("""
   cfdExecutive.cxx
   cfdVEAvailModules.cxx
   cfdVEPluginLoader.cxx
   VE_i.cpp
   DeleteObjectFromNetworkEventHandler.cxx
""")

env = baseEnv.Copy()
env.Append(LIBS = ['VE_XMLLib', 'VE_CADLib', 'VE_ModelLib',
                   'VE_SceneGraph_UtilitiesLib', 
                   'VE_SceneGraphLib%s' %(execOsgPatTag),
                   'VE_UtilLib',
                   'VE_TextureBasedLib%s' %(execOsgPatTag),
                   'VE_OpenModuleLib',
                   'VE_XplorerLib%s' %(execOsgPatTag),
                   'GraphicalPlugin%s' %(execOsgPatTag)])

env.ParseConfig('flagpoll Boost.Filesystem --libs --cflags')
env.ParseConfig('flagpoll vtk xerces osg vrjuggler TAO \
                          ACE TAO_IORInterceptor TAO_ObjRefTemplate TAO_Valuetype \
                          TAO_CosNaming TAO_Svc_Utils TAO_IORTable TAO_Messaging \
                          TAO_PortableServer TAO_BiDirGIOP TAO_AnyTypeCode \
                          --libs --cflags')

targetLib = pj(env[ 'LIBDIR' ], 'VE_XplorerNetworkLib%s' %(execOsgPatTag))
env.SharedLibrary(target = targetLib, source = xplorer_srcs)

