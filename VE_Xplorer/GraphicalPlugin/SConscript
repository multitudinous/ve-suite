import os, sys, string
pj = os.path.join

Import('baseEnv')
Import('Platform')
Import('osg')
Import('xerces')
Import('vtk')
Import('libPath')

srcs = Split("""
    cfdVEBaseClass.cxx
""")

srcs = map(lambda s: pj('#', 'VE_Xplorer', 'GraphicalPlugin', s), srcs)

env = baseEnv.Copy()
osg_tag = "_osg"
##if os.getenv('SCENE_GRAPH') == 'OSG':
##    osg_tag = "_osg"
##else:
##    osg_tag = "_pf"
if os.getenv('VE_PATENTED') == 'TRUE':
    env.Append(CXXFLAGS = '-DVE_PATENTED')
    patented_tag = "_vep"
else:
    patented_tag = ''
if os.getenv('TAO_BUILD') == 'TRUE':
    exec_tag = '_tao'
else:
    exec_tag = ''
env.Append(CPPPATH = ['#'])
env.Append(CPPPATH = pj( os.getenv('VTK_BASE_DIR',''), 'include', 'vtk') )
##env.Append(CPPPATH = pj( os.getenv('VJ_DEPS_DIR',''), 'include') )
env.Append(LIBPATH = libPath,
              LIBS = ['VE_SceneGraphLib%s%s' %(osg_tag, patented_tag),
                      'VE_XplorerLib%s%s%s' %(exec_tag, osg_tag, patented_tag),
                      'VE_UtilLib', 'VE_ModelLib', 'VE_XMLLib', 'VE_CADLib'])
env.ParseConfig('flagpoll vtk --libs')
##for lib in vtk:
##    env.Append(LIBS = lib)
for lib in xerces:
    env.Append(LIBS = lib)
##if os.getenv('SCENE_GRAPH') == 'OSG':
##    for lib in osg:
##        env.Append(LIBS = lib)
env.ParseConfig('flagpoll osg --libs --cflags')
env.ParseConfig('flagpoll gmtl --cflags')
env.ParseConfig('wx-config --cxxflags --libs')
env.ParseConfig('vrjuggler-config --libs --extra-libs --includes')

targetLib = pj(libPath, 'GraphicalPlugin%s%s%s' %(exec_tag, osg_tag,
                                                patented_tag))
env.SharedLibrary(target = targetLib, source = srcs)
