##Builds VE_XplorerLib<tag>
import os, sys, string
pj = os.path.join

Import('baseEnv')
Import('libPath')
Import('execOsgPatTag')

xplorer_srcs = Split("""
   cfd1DTextInput.cxx 
   cfdAnimatedImage.cxx 
   cfdAnimatedStreamlineCone.cxx 
   cfdCommandArray.cxx 
   cfdCommandObjects.cxx 
   cfdContour.cxx 
   cfdContourBase.cxx 
   cfdContours.cxx 
   cfdCursor.cxx 
   cfdCuttingPlane.cxx 
   cfdDataSet.cxx
   cfdDigitalAnalogGauge.cxx 
   cfdDisplaySettings.cxx 
   cfdEnvironmentHandler.cxx 
   cfdGlobalBase.cxx 
   cfdGraphicsObject.cxx 
   cfdImage.cxx 
   cfdIsosurface.cxx 
   cfdModel.cxx 
   cfdModelHandler.cxx 
   cfdMomentum.cxx 
   cfdMomentums.cxx
   cfdNavigate.cxx 
   cfdObjects.cxx 
   cfdPlanes.cxx 
   cfdPolyData.cxx 
   cfdPresetContour.cxx 
   cfdPresetMomentum.cxx 
   cfdPresetVector.cxx 
   cfdQuatCamHandler.cxx 
   cfdQuatCam.cxx 
   cfdReadParam.cxx 
   cfdScalarBarActor.cxx 
   cfdSound.cxx 
   cfdSoundHandler.cxx 
   cfdSteadyStateVizHandler.cxx 
   cfdStreamers.cxx 
   cfdTeacher.cxx 
   cfdTextOutput.cxx
   cfdTextureBasedVizHandler.cxx
   cfdThread.cxx 
   cfdVectorBase.cxx
   cfdVector.cxx 
   cfdVectors.cxx 
   cfdRawNodeWriteTraverser.cxx 
   cfdWriteTraverser.cxx
    ActiveModelEventHandler.cxx
    AddVTKDataSetEventHandler.cxx
    AttributeEventHandler.cxx 
   CADEventHandler.cxx 
   CADDeleteNodeEH.cxx
    CADRemoveAttributeEH.cxx
   CADAddNodeEH.cxx 
   CADAddAttributeEH.cxx 
   CADSetActiveAttributeEH.cxx 
   CADSetNameEH.cxx
    CADToggleEH.cxx
   CADTransformEH.cxx
    MaterialModeUpdateEH.cxx
    MaterialUpdateEH.cxx
    KeyboardMouse.cxx
    cfdTrackball.cxx
    cfdObjectHandler.cxx
    CreateVisObjectEventHandler.cxx
    ClearVisObjectsEventHandler.cxx
    ChangeCursorEventHandler.cxx
    TBTransientModeUpdateEH.cxx
    TBTransientDurationUpdateEH.cxx
    TBIsosurfaceEnableEH.cxx
    TBIsosurfaceUpdateEH.cxx
    TBUpdateScalarRangeEH.cxx
    TBBBoxEH.cxx
    TBClipPlaneEH.cxx
    TextureBasedEventHandler.cxx
    TBActivateEH.cxx
    TBUpdateSolutionEH.cxx
    QCLoadFileEH.cxx
    StoredSceneEH.cxx
    ChangeWorkingDirectoryEventHandler.cxx
    ChangeBackgroundColorEventHandler.cxx
""")
srcs = map(lambda s: pj('#', 'VE_Xplorer', 'XplorerHandlers', s), xplorer_srcs)

env = baseEnv.Copy()
env.Append(LIBS = ['VE_XMLLib', 'VE_CADLib', 'VE_ModelLib',
                   'VE_SceneGraph_UtilitiesLib', 
                   'VE_SceneGraphLib%s' %(execOsgPatTag),
                   'VE_UtilLib',
                   'VE_TextureBasedLib%s' %(execOsgPatTag)])
env.ParseConfig('flagpoll vtk --libs --cflags')
env.ParseConfig('flagpoll xerces --libs --cflags')
env.ParseConfig('flagpoll tao --libs --cflags')
env.ParseConfig('flagpoll gmtl --cflags --libs')
env.ParseConfig('flagpoll osg --libs --cflags')
env.ParseConfig('vpr-config --libs --extra-libs --includes')
env.ParseConfig( 'vrjuggler-config vrj --extra-libs' )

targetLib = pj(libPath, 'VE_XplorerLib%s' %(execOsgPatTag))
env.SharedLibrary(target = targetLib, source = xplorer_srcs)

