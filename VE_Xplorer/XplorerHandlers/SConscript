##Builds VE_XplorerLib<tag>
import os, sys, string
pj = os.path.join

Import('baseEnv ves_pkg LIBDIR execOsgPatTag buildDir osg_options vtk_options xerces_options')

sources = Split("""
   cfd1DTextInput.cxx 
   cfdAnimatedImage.cxx 
   cfdAnimatedStreamlineCone.cxx 
   cfdCommandArray.cxx 
   cfdCommandObjects.cxx 
   cfdContour.cxx 
   cfdContourBase.cxx 
   cfdContours.cxx 
   cfdCursor.cxx 
   cfdCuttingPlane.cxx 
   cfdDataSet.cxx
   cfdDigitalAnalogGauge.cxx 
   cfdDisplaySettings.cxx 
   cfdEnvironmentHandler.cxx 
   cfdGlobalBase.cxx 
   cfdGraphicsObject.cxx 
   cfdImage.cxx 
   cfdIsosurface.cxx 
   cfdModel.cxx 
   cfdModelHandler.cxx 
   cfdMomentum.cxx 
   cfdMomentums.cxx
   cfdNavigate.cxx 
   cfdObjects.cxx 
   cfdPlanes.cxx 
   cfdPolyData.cxx 
   cfdPresetContour.cxx 
   cfdPresetMomentum.cxx 
   cfdPresetVector.cxx 
   cfdQuatCamHandler.cxx 
   cfdQuatCam.cxx 
   cfdReadParam.cxx 
   cfdScalarBarActor.cxx 
   cfdSound.cxx 
   cfdSoundHandler.cxx 
   cfdSteadyStateVizHandler.cxx 
   cfdStreamers.cxx 
   cfdTeacher.cxx 
   cfdTextOutput.cxx
   cfdTextureBasedVizHandler.cxx
   cfdThread.cxx 
   cfdVectorBase.cxx
   cfdVector.cxx 
   cfdVectors.cxx 
   ActiveModelEventHandler.cxx
   AddVTKDataSetEventHandler.cxx
   AttributeEventHandler.cxx 
   CADAddNodeEH.cxx 
   CADAddAttributeEH.cxx 
   CADEventHandler.cxx 
   CADDeleteNodeEH.cxx
   CADMoveNodeEventHandler.cxx
   CADRemoveAttributeEH.cxx
   CADSetActiveAttributeEH.cxx 
   CADSetNameEH.cxx
   CADSetRootNodeEH.cxx
   CADToggleEH.cxx
   CADTransformEH.cxx
   Device.cxx
   DeviceHandler.cxx
   DeviceEH.cxx
   DeviceModeEH.cxx
   MaterialModeUpdateEH.cxx
   MaterialUpdateEH.cxx
   KeyboardMouse.cxx
   KeyboardMouseEH.cxx
   ModelCADHandler.cxx
   cfdObjectHandler.cxx
   CreateVisObjectEventHandler.cxx
   ClearVisObjectsEventHandler.cxx
   ChangeCursorEventHandler.cxx
   SPDimensionsEH.cxx
   SPBoundEH.cxx
   SeedPoints.cxx
   SeedPointActivateEH.cxx
   TBTransientModeUpdateEH.cxx
   TBTransientDurationUpdateEH.cxx
   TBIsosurfaceEnableEH.cxx
   TBIsosurfaceUpdateEH.cxx
   TBUpdateScalarRangeEH.cxx
   TBBBoxEH.cxx
   TBClipPlaneEH.cxx
   TextureBasedEventHandler.cxx
   TBActivateEH.cxx
   TBUpdateSolutionEH.cxx
   QCLoadFileEH.cxx
   StoredSceneEH.cxx
   ChangeWorkingDirectoryEventHandler.cxx
   ChangeBackgroundColorEventHandler.cxx
   DataSetAxis.cxx
   BBoxEventHandler.cxx
   WireframeEventHandler.cxx
   AxesEventHandler.cxx
   AxesLabelsEventHandler.cxx
   DataSetScalarBar.cxx
   ScalarBarEventHandler.cxx
   ViewEventHandler.cxx
   DisplayInformation.cxx
   DisplayEventHandler.cxx
   QCClearDataEH.cxx
   DataTransformEH.cxx
   Wand.cxx
   TBSliceNumberUpdateEH.cxx
   TBSetActiveShaderManagerEH.cxx
   TBPhongShadingEnableEH.cxx
   Tablet.cxx
   NavigationDataEventHandler.cxx
   TBPreIntegrateEH.cxx
   SoundAddNewEH.cxx
   SoundActivateEH.cxx
   PhysicsSimulationEventHandler.cxx
   CADInitializePhysicsEventHandler.cxx
   CADPhysicsMeshEventHandler.cxx
   CADPhysicsPropertiesEventHandler.cxx
   UnselectObjectsEventHandler.cxx
   CommandHandler.cxx
   Xplorer_i.cxx
   Body_AMI_UIHandler_i.cxx
   LocalToWorldTransform.cxx
   CenterPointJumpEventHandler.cxx
   ExportDOTFileEventHandler.cxx
""")
##   DataSetFileEH.cxx
##   DataSetPrecomputeEH.cxx

headers = Split("""
   cfd1DTextInput.h 
   cfdAnimatedImage.h 
   cfdAnimatedStreamlineCone.h 
   cfdCommandArray.h 
   cfdCommandObjects.h 
   cfdContour.h 
   cfdContourBase.h 
   cfdContours.h 
   cfdCursor.h 
   cfdCuttingPlane.h 
   cfdDataSet.h
   cfdDigitalAnalogGauge.h 
   cfdDisplaySettings.h 
   cfdEnvironmentHandler.h 
   cfdGlobalBase.h 
   cfdGraphicsObject.h 
   cfdImage.h 
   cfdIsosurface.h 
   cfdModel.h 
   cfdModelHandler.h 
   cfdMomentum.h 
   cfdMomentums.h
   cfdNavigate.h 
   cfdObjects.h 
   cfdPlanes.h 
   cfdPolyData.h 
   cfdPresetContour.h 
   cfdPresetMomentum.h 
   cfdPresetVector.h 
   cfdQuatCamHandler.h 
   cfdQuatCam.h 
   cfdReadParam.h 
   cfdScalarBarActor.h 
   cfdSound.h 
   cfdSoundHandler.h 
   cfdSteadyStateVizHandler.h 
   cfdStreamers.h 
   cfdTeacher.h 
   cfdTextOutput.h
   cfdTextureBasedVizHandler.h
   cfdThread.h 
   cfdVectorBase.h
   cfdVector.h 
   cfdVectors.h 
   ActiveModelEventHandler.h
   AddVTKDataSetEventHandler.h
   AttributeEventHandler.h 
   CADAddNodeEH.h 
   CADAddAttributeEH.h 
   CADEventHandler.h 
   CADDeleteNodeEH.h
   CADMoveNodeEventHandler.h
   CADRemoveAttributeEH.h
   CADSetActiveAttributeEH.h 
   CADSetNameEH.h
   CADSetRootNodeEH.h
   CADToggleEH.h
   CADTransformEH.h
   Device.h
   DeviceHandler.h
   DeviceEH.cxx
   DeviceModeEH.cxx
   MaterialModeUpdateEH.h
   MaterialUpdateEH.h
   KeyboardMouse.h
   KeyboardMouseEH.h
   ModelCADHandler.h
   cfdObjectHandler.h
   CreateVisObjectEventHandler.h
   ClearVisObjectsEventHandler.h
   ChangeCursorEventHandler.h
   SeedPoints.h
   SeedPointActivateEH.h
   SPBoundEH.h
   SPDimensionsEH.h
   TBTransientModeUpdateEH.h
   TBTransientDurationUpdateEH.h
   TBIsosurfaceEnableEH.h
   TBIsosurfaceUpdateEH.h
   TBUpdateScalarRangeEH.h
   TBBBoxEH.h
   TBClipPlaneEH.h
   TextureBasedEventHandler.h
   TBActivateEH.h
   TBUpdateSolutionEH.h
   QCLoadFileEH.h
   StoredSceneEH.h
   ChangeWorkingDirectoryEventHandler.h
   ChangeBackgroundColorEventHandler.h
   DataSetAxis.h
   BBoxEventHandler.h
   WireframeEventHandler.h
   AxesEventHandler.h
   AxesLabelsEventHandler.h
   DataSetScalarBar.h
   ScalarBarEventHandler.h
   ViewEventHandler.h
   DisplayInformation.h
   DisplayEventHandler.h
   QCClearDataEH.h
   DataTransformEH.h
   Wand.h
   TBSetActiveShaderManagerEH.h
   TBSliceNumberUpdateEH.h
   TBPhongShadingEnableEH.h
   Tablet.h
   NavigationDataEventHandler.h
   TBPreIntegrateEH.h
   SoundActivateEH.h
   SoundAddNewEH.h
   PhysicsSimulationEventHandler.h
   CADInitializePhysicsEventHandler.h
   CADPhysicsMeshEventHandler.h
   CADPhysicsPropertiesEventHandler.h
   UnselectObjectsEventHandler.h
   CommandHandler.h
   Xplorer_i.h
   Body_AMI_UIHandler_i.h
   LocalToWorldTransform.h
   CenterPointJumpEventHandler.h
   ExportDOTFileEventHandler.h
""")
##   DataSetFileEH.h
##   DataSetPrecomputeEH.h

##srcs = map(lambda s: pj('#', 'VE_Xplorer', 'XplorerHandlers', s), xplorer_srcs)

lib_env = ves_pkg.getEnv().Copy()
lib_env.Append(LIBS = ['VE_XML','DataLoaderLib','VE_SceneGraph%s' %(execOsgPatTag),
                   'VE_OpenModuleLib',
                   'VE_UtilLib','VE_TextureBasedLib%s' %(execOsgPatTag)])
lib_env.Append(LIBPATH = [pj('#', buildDir, 'VE_Xplorer','SceneGraph'),
                        pj('#', buildDir, 'VE_Xplorer','Utilities'),
                        pj('#', buildDir, 'VE_Xplorer','TextureBased'),
                        pj('#', buildDir, 'VE_Builder','Translator','DataLoader'),
                        pj('#', buildDir, 'VE_Open','skel'),
                        pj('#', buildDir, 'VE_Open','XML')])
lib_env.ParseConfig('flagpoll vrjuggler --atleast-version=%s \
			--get-vrj-ogl-libs --libs --cflags'%lib_env['VRJugglerVersion'])
lib_env.ParseConfig('flagpoll bullet --libs --cflags Boost.Filesystem \
			--atleast-version=%s --libs --cflags'%lib_env['BoostVersion'])
lib_env.ParseConfig('flagpoll TAO \
                          ACE TAO_IORInterceptor TAO_ObjRefTemplate TAO_Valuetype \
                          TAO_CosNaming TAO_Svc_Utils TAO_IORTable TAO_Messaging \
                          TAO_PortableServer TAO_BiDirGIOP TAO_AnyTypeCode \
                          --libs --cflags')

vtk_options.apply( lib_env )
osg_options.apply( lib_env )
xerces_options.apply( lib_env )
lib_env.Append(CPPPATH = [pj('#','external','osgOQ','include')])
lib_env.Append(LIBS = ['osgOQ'])
lib_env.Append(LIBPATH = [pj('#',buildDir,'external','osgOQ')])
if baseEnv['StaticOnly'] == "no":
   lib = ves_pkg.createStaticAndSharedLibrary('VE_XplorerLib%s' %(execOsgPatTag),
                                                        lib_env,
                                                        installPrefix = LIBDIR)
else:
   lib = ves_pkg.createStaticLibrary('VE_XplorerLib%s' %(execOsgPatTag), lib_env,
                                               installPrefix = LIBDIR)
   
lib.addSources(sources)
lib.addHeaders(headers,  pj( 'VE_Xplorer', 'XplorerHandlers'))
lib.build()

