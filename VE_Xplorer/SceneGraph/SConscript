##Builds VE_SceneGraphLib<tag>
import os, sys, string
pj = os.path.join

Import('baseEnv ves_pkg LIBDIR execOsgPatTag osg_options vtk_options')

sources = Split("""
    cfdFileInfo.cxx
    cfdPfSceneManagement.cxx
    cfdRawNodeTraverser.cxx
    vtkActorToOSG.cxx
    vtkActorToPF.cxx
    Triangles.cxx
    Text.cxx
    DCS.cxx
    Switch.cxx
    Group.cxx
    SceneNode.cxx
    CADEntity.cxx
    CADEntityHelper.cxx
    PhysicsSimulator.cxx
    Clone.cxx
    Geode.cxx
    TextTexture.cxx
    FindParentsVisitor.cxx
    PhysicsMesh.cxx
    DCSOSGReaderWriter.cxx
    GeodeOSGReaderWriter.cxx
""")


headers = Split("""
    cfdFileInfo.h
    cfdPfSceneManagement.h
    cfdRawNodeTraverser.h
    vtkActorToOSG.h
    vtkActorToPF.h
    Triangles.h
    Text.h
    DCS.h
    Group.h
    Switch.h
    SceneNode.h
    CADEntity.h
    CADEntityHelper.h
    PhysicsSimulator.h
    Clone.h
    Geode.h
    TextTexture.h
    FindParentsVisitor.h
    PhysicsMesh.h
""")

##srcs = map(lambda s: pj('#', 'VE_Xplorer', 'SceneGraph', s), srcs)

lib_env = ves_pkg.getEnv().Copy()
##env.Append(CPPPATH = [os.getcwd()])
lib_env.ParseConfig('flagpoll bullet --libs --cflags')
lib_env.ParseConfig('flagpoll gmtl --libs --cflags')
lib_env.ParseConfig('flagpoll vpr gadgeteer --require-Version=%s --libs --cflags'%lib_env['VPRVersion'])
#lib_env.ParseConfig('flagpoll vrjuggler --require-Version=%s --libs --cflags'%lib_env['VRJugglerVersion'])

vtk_options.apply( lib_env )
osg_options.apply( lib_env )
#ode_options.apply( lib_env )
#opal_options.apply( lib_env )
#lib_env.Append( CPPFLAGS = ['-ffriend-injection'] )

if baseEnv['StaticOnly'] == "no":
   lib = ves_pkg.createStaticAndSharedLibrary('VE_SceneGraphLib%s' %(execOsgPatTag),
                                                        lib_env,
                                                        installPrefix = LIBDIR)
else:
   lib = ves_pkg.createStaticLibrary('VE_SceneGraphLib%s' %(execOsgPatTag), lib_env,
                                               installPrefix = LIBDIR)
   
lib.addSources(sources)
lib.addHeaders(headers,  pj( 'VE_Xplorer', 'SceneGraph'))
lib.build()
