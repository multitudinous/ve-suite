##Builds VE_SceneGraph_UtilitiesLib
import os, sys, string
pj = os.path.join

Import('baseEnv ves_pkg LIBDIR execOsgPatTag buildDir osg_options xerces_options')

sources = Split("""
    Attribute.cxx
    AttributeOSGReaderWriter.cxx
    MaterialHelper.cxx
    ShaderHelper.cxx
    PhongLoader.cxx
    MaterialInitializer.cxx
    OpacityVisitor.cxx
    PhysicsMesh.cxx
    PhysicsConstraint.cxx
""")

headers = Split("""
    Attribute.h
    MaterialHelper.h
    ShaderHelper.h
    PhongLoader.h
    MaterialInitializer.h
    OpacityVisitor.h
    PhysicsMesh.h
    PhysicsConstraint.h
""")

##srcs = map(lambda s: pj('#', 'VE_Xplorer', 'SceneGraph',
##                        'Utilities', s), srcs)
lib_env = ves_pkg.getEnv().Copy()
lib_env.Append(LIBS = ['VE_XML'])
lib_env.Append(LIBPATH = [pj('#', buildDir, 'VE_Open','XML')])
lib_env.Append(CPPPATH = [pj('#', 'external', 'loki-0.1.6', 'include')] )
osg_options.apply( lib_env )
xerces_options.apply( lib_env )
if baseEnv['StaticOnly'] == "no":
   lib = ves_pkg.createStaticAndSharedLibrary('VE_SceneGraph_UtilitiesLib',
                                                        lib_env,
                                                        installPrefix = LIBDIR)
else:
   lib = ves_pkg.createStaticLibrary('VE_SceneGraph_UtilitiesLib', lib_env,
                                               installPrefix = LIBDIR)
   
lib.addSources(sources)
lib.addHeaders(headers,  pj( 'VE_Xplorer', 'SceneGraph', 'Utilities'))
lib.build()
