##Builds VE_Xplorer<tag>
import os, sys, string
import SConsAddons.Util as sca_util
pj = os.path.join

Import('baseEnv ves_pkg LIBDIR GetPlatform buildDir osg_options vtk_options xerces_options GetSVNVersion RootDir')

srcDir = os.path.abspath( pj(RootDir, 'src', 'apps', 'xplorer') )
srcs = sca_util.getSourcesRecursive( srcDir )

env = ves_pkg.getEnv().Copy()
env.Append(
            LIBS = ['ves_open_xml',
                   'ves_builder_dataloader',
                   'ves_builder_translator_base',
                   'ves_xplorer_scenegraph%s' %(execOsgPatTag),
                   'ves_xplorer_util',
                   'ves_xplorer_volume%s' %(execOsgPatTag),
                   'ves_open_module',
                   'ves_xplorer%s' %(execOsgPatTag)])#,
                   #'VE_XplorerNetworkLib%s' %(execOsgPatTag),
                   #'GraphicalPlugin%s' %(execOsgPatTag)])

env.Append(LIBPATH = [  pj('#', buildDir, 'src','ves','xplorer','scenegraph'),
                        pj('#', buildDir, 'src','ves','xplorer','util'),
                        pj('#', buildDir, 'src','ves','xplorer','volume'),
                        pj('#', buildDir, 'src','ves','xplorer'),
                        pj('#', buildDir, 'src','ves','builder','DataLoader'),
                        pj('#', buildDir, 'src','ves','builder','cfdTranslatorToVTK'),
                        pj('#', buildDir, 'src','ves','open'),
                        pj('#', buildDir, 'src','ves','open','xml')])
#disable profiling by default
if env['VPRProfile'] == 'no':
   env.Append( CPPDEFINES = ['DISABLE_VPR_PROFILE'] )
env.Append( CPPDEFINES = [ GetSVNVersion( srcDir ) ] )
env.Append(CPPPATH = [pj('#','external','osgOQ','include')])
env.Append(LIBS = ['osgOQ'])
env.Append(LIBPATH = [pj('#',buildDir,'external','osgOQ')])
vtk_options.apply( env )
osg_options.apply( env )
xerces_options.apply( env )
env.ParseConfig('flagpoll TAO \
                          ACE TAO_IORInterceptor TAO_ObjRefTemplate TAO_Valuetype \
                          TAO_CosNaming TAO_Svc_Utils TAO_IORTable TAO_Messaging \
                          TAO_PortableServer TAO_BiDirGIOP TAO_AnyTypeCode \
                          --libs --cflags')
env.ParseConfig('flagpoll vrjuggler --atleast-version=%s --get-vrj-ogl-libs --libs --cflags'%env['VRJugglerVersion'])
env.ParseConfig('flagpoll Boost.Filesystem --atleast-version=%s --libs --cflags'%env['BoostVersion'])
env.ParseConfig('flagpoll bullet --libs --cflags')

prog = ves_pkg.createProgram('ves_xplorer' + env["PROGSUFFIX"], env, 'bin')
prog.addSources( srcs )
prog.build()

