##Builds VE_Xplorer<tag>
import os, sys, string
import SConsAddons.Util as sca_util
pj = os.path.join

Import('baseEnv ves_pkg GetPlatform buildDir osg_options vtk_options xerces_options GetSVNVersion RootDir')
Import('tao_options boost_options vrjuggler_options osgal_options')

srcDir = os.path.abspath( pj(RootDir, 'src', 'apps', 'xplorer') )
srcs = sca_util.getSourcesRecursive( srcDir )
headers = sca_util.getHeadersRecursive( srcDir )

env = ves_pkg.getEnv().Copy()
env.Append(
            LIBS = ['ves_open_xml',
                   'ves_builder_dataloader',
                   'ves_builder_translator_base',
                   'ves_xplorer_scenegraph',
                   'ves_xplorer_util',
                   'ves_xplorer_volume',
                   'ves_open_module',
                   'ves_xplorer'])

env.Append(LIBPATH = [  pj('#', buildDir, 'src','ves','xplorer','scenegraph'),
                        pj('#', buildDir, 'src','ves','xplorer','util'),
                        pj('#', buildDir, 'src','ves','xplorer','volume'),
                        pj('#', buildDir, 'src','ves','xplorer'),
                        pj('#', buildDir, 'src','ves','builder','DataLoader'),
                        pj('#', buildDir, 'src','ves','builder','cfdTranslatorToVTK'),
                        pj('#', buildDir, 'src','ves','open'),
                        pj('#', buildDir, 'src','ves','open','xml')])
#disable profiling by default
if env['VPRProfile'] == 'no':
   env.Append( CPPDEFINES = ['DISABLE_VPR_PROFILE'] )
env.Append( CPPDEFINES = [ GetSVNVersion( srcDir ) ] )
#env.Append(CPPPATH = [pj('#','external','osgOQ','include')])
env.Append(CPPPATH = [pj('#','external','osgPPU','include')])
env.Append(CPPPATH = [pj('#','external','osgEphemeris','include')])
if GetPlatform() == 'darwin':
    env.Append( CPPDEFINES  = ['_DARWIN'] )
env.Append(LIBS = ['osgPPU'])
env.Append(LIBS = ['osgBullet'])
env.Append(LIBS = ['osgEphemeris'])
env.Append(LIBPATH = [pj('#',buildDir,'external','osgPPU')])
env.Append(LIBPATH = [pj('#',buildDir,'external','osgBullet')])
env.Append(LIBPATH = [pj('#',buildDir,'external','osgEphemeris')])

vtk_options.apply( env )
osg_options.apply( env )
xerces_options.apply( env )
if osgal_options.isAvailable():
   osgal_options.apply( env )
tao_options.apply( env )
boost_options.apply( env )
vrjuggler_options.apply( env )

resources = [ pj( RootDir, 'dist', 'installerImages', 've_icon128x128.icns'), 
    pj( RootDir, 'src', 'apps', 'xplorer','vrjuggler.plist')]
   
prog = ves_pkg.createProgram('ves_xplorer' + env["PROGSUFFIX"], env, 'bin',
    True,resources,pj( RootDir, 'src', 'apps', 'xplorer','Info.plist'),
    pj( RootDir, 'dist', 'darwin', 'PkgInfo'))
prog.addSources( srcs )
prog.addHeaders( headers )
prog.build()
