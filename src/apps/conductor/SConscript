##Builds WinClient program
import os, sys, string
import SConsAddons.Util as sca_util
pj = os.path.join

Import('baseEnv ves_pkg LIBDIR GetPlatform buildDir xerces_options wxwidgets_options PREFIX RootDir GetSVNVersion')
Import('tao_options vpr_options osg_options vtk_options')
Import('minerva_options')

srcDir = os.path.abspath( pj(RootDir, 'src', 'apps', 'conductor') )
srcs = sca_util.getSourcesRecursive( srcDir )
headers = sca_util.getHeadersRecursive( srcDir )
#srcs += [pj( '..', '..', 'ves','conductor', 'DefaultPlugin', 'DefaultPlugin.cxx' )]
#srcs += [pj( '..', '..', 'ves','conductor', 'DefaultPlugin', 'DefaultPlugin_UI_Dialog.cxx' )]

env = ves_pkg.getEnv().Clone()
env.Append( CPPDEFINES = [ GetSVNVersion( srcDir ) ] )
# See if we need to turn on the Minerva sub-menu.
if minerva_options.isAvailable():
   env.Append( CPPDEFINES = ['MINERVA_GIS_SUPPORT'] )
   minerva_options.apply( env )
   #osg_options.apply( env )

env.Append(LIBS = ['ves_conductor_plugin', 'ves_open_xml',
                   'ves_open_module','ves_xplorer_util'])
env.Append(LIBPATH = [
                        pj('#', buildDir, 'src','ves','conductor'),
                        pj('#', buildDir, 'src','ves','open'),
                        pj('#', buildDir, 'src','ves','open','xml'),
                        pj('#', buildDir, 'src','ves','xplorer','util')
                     ])

xerces_options.apply( env )
wxwidgets_options.apply( env )
tao_options.apply( env )
vpr_options.apply( env )
vtk_options.apply( env )

if baseEnv['MakeQtSupport'] == "yes":
    env.AppendUnique( CPPDEFINES = ['QT_ON'] )

resources = [ pj( RootDir, 'dist', 'installerImages', 've_icon128x128.icns')]

if GetPlatform() == 'win32':
    env.Append( LINKFLAGS =['/SUBSYSTEM:WINDOWS'])

prog = ves_pkg.createProgram('ves_conductor' + env["PROGSUFFIX"], env, 'bin',
    True,resources,pj( RootDir, 'src', 'apps', 'conductor','Info.plist'),
    pj( RootDir, 'dist', 'darwin', 'PkgInfo'))
prog.addSources( srcs )
prog.addHeaders( headers )
prog.build()       
