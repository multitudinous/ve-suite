##Builds DataLoaderLib
import os, sys, string
import glob

pj = os.path.join
import SConsAddons.Util as sca_util

Import('ves_pkg LIBDIR vtk_options buildDir RootDir boost_options GetPlatform')

#srcDir = os.path.abspath( pj(RootDir, 'src', 'ves', 'xplorer','plugin') )
#base_plugin_srcs = sca_util.getSources()
#base_header_srcs = sca_util.getHeaders()
#C:\dev\TSVEG\VE_Suite\src\ves\builder\DataLoader\tecplot
sources_list = glob.glob(pj(RootDir, 'src','ves','builder','DataLoader','tecplot','*.cxx'))
sources = map(lambda s: os.path.basename(s), sources_list)
#sources.remove("tecplotReader.cxx")
sources.remove("TecplotTranslator.cxx")
#headers_list = glob.glob(pj(RootDir, 'src','ves','xplorer','*.h'))

lib_env = ves_pkg.getEnv().Clone()

# For windows with tecplot
#TECSDKHOME = "C:\Program Files (x86)\Tecplot\TecSDK 1.1"
TECSDKHOME = lib_env[ 'tecplot_sdk']

if GetPlatform() == 'darwin':
    libdir = 'macix64.105'
elif GetPlatform() == 'win32':
    libdir = 'win32'
    if lib_env['ARCH'] == 'x64':
        libdir = 'x64'

lib_env.AppendUnique( LIBPATH = [pj(TECSDKHOME,'lib',libdir)],
                LIBS = ['tpsdkbase', 'tpsdkintegrationmanager','tptoolbox'],
                CPPPATH = [ pj(TECSDKHOME,'include'),
                    pj(TECSDKHOME,'include','sdk','integrationmanager','services'),
                    pj(TECSDKHOME,'include','sdk'),
                    pj(TECSDKHOME,'include','sdk','integrationmanager'),
                    pj(TECSDKHOME,'include','toolbox')],
                CPPDEFINES = ['ENGINE','VE_USER_BUILDER_LIBRARY']#,'PRINT_HEADERS']
              )

if GetPlatform() == 'darwin':
    lib_env.AppendUnique( CPPDEFINES = ['MAC64','DARWIN'] )

#boost_options.apply( lib_env )

vtk_options.apply( lib_env )

prog = ves_pkg.createProgram('tecplot2VTK' + lib_env["PROGSUFFIX"], lib_env, 'bin')
prog.addSources( sources )
prog.build()
