
///////////////////////////////////////////////////////////////////////////////
//
//  Event handler for removing an elevation layer.
//
///////////////////////////////////////////////////////////////////////////////

#include <ves/xplorer/minerva/RemoveElevationLayerHandler.h>
#include <ves/xplorer/minerva/MinervaManager.h>

#include <ves/open/xml/Command.h>
#include <ves/open/xml/DataValuePair.h>

#include <ves/util/commands/Minerva.h>

using namespace ves::xplorer::minerva;


///////////////////////////////////////////////////////////////////////////////
//
//  Constructor.
//
///////////////////////////////////////////////////////////////////////////////

RemoveElevationLayerHandler::RemoveElevationLayerHandler() : BaseClass()
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Destructor.
//
///////////////////////////////////////////////////////////////////////////////

RemoveElevationLayerHandler::~RemoveElevationLayerHandler()
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Remove elevation layer.
//
///////////////////////////////////////////////////////////////////////////////

void RemoveElevationLayerHandler::Execute ( CommandPtr command, MinervaManager& manager )
{
  ves::open::xml::DataValuePairPtr guidData ( command->GetDataValuePair ( ves::util::names::UNIQUE_ID ) );

  std::string guid;
  guidData->GetData ( guid );

  manager.RemoveElevationLayer ( guid );

}
