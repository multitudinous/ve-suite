##Builds VE_TextureBasedLib<tag>
import os, sys, string
import SConsAddons.Util as sca_util
pj = os.path.join

Import('baseEnv ves_pkg LIBDIR buildDir osg_options vtk_options GetPlatform RootDir')
Import('boost_options gmtl_options vrjuggler_options')

srcDir = os.path.abspath( pj(RootDir, 'src', 'ves', 'xplorer','volume') )
sources = sca_util.getSourcesRecursive( srcDir )
headers = sca_util.getHeadersRecursive( srcDir )

index = sources.index( pj('SQLiteDriver.cxx') )
sources.pop(index)
index = headers.index( pj('SQLiteDriver.h') )
headers.pop(index)
index = sources.index(pj('Database.cxx') )
sources.pop(index)
index = sources.index(pj('TextureDataManager.cxx') )
sources.pop(index)
index = sources.index(pj('Database.h') )
headers.pop(index)
index = sources.index(pj('DatabaseDriver.h') )
headers.pop(index)

lib_env = ves_pkg.getEnv().Copy()
lib_env.Append(LIBS = 'ves_xplorer_util')
lib_env.Append(LIBPATH = [pj('#', buildDir, 'src', 'ves', 'xplorer', 'util')])

boost_options.apply( lib_env )
gmtl_options.apply( lib_env )
vrjuggler_options.apply( lib_env )
osg_options.apply( lib_env )
vtk_options.apply( lib_env )
   
lib_env.Append( CPPDEFINES = ['VE_TEXTURE_BASED_LIBRARY'])


if baseEnv['StaticLibs'] == "yes":
   lib = ves_pkg.createStaticAndSharedLibrary('ves_xplorer_volume',
                                                        lib_env,
                                                        installPrefix = LIBDIR)
else:
   lib = ves_pkg.createSharedLibrary('ves_xplorer_volume', lib_env,
                                               installPrefix = LIBDIR)
   
lib.addSources(sources)
lib.addHeaders(headers,  pj( 'ves', 'xplorer', 'volume'))
lib.build()
