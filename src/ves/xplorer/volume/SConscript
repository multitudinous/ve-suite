##Builds VE_TextureBasedLib<tag>
import os, sys, string
import SConsAddons.Util as sca_util
pj = os.path.join

Import('baseEnv ves_pkg LIBDIR execOsgPatTag buildDir osg_options vtk_options GetPlatform RootDir')

srcDir = os.path.abspath( pj(RootDir, 'src', 'ves', 'xplorer','volume') )
sources = sca_util.getSourcesRecursive( srcDir )
headers = sca_util.getHeadersRecursive( srcDir )

lib_env = ves_pkg.getEnv().Copy()
lib_env.Append(LIBS = 'ves_xplorer_util')
lib_env.Append(LIBPATH = [pj('#', buildDir, 'src', 'ves', 'xplorer', 'util')])
lib_env.ParseConfig('flagpoll gmtl --libs --cflags Boost.Filesystem --atleast-version=%s --libs --cflags'%lib_env['BoostVersion'])
osg_options.apply( lib_env )
vtk_options.apply( lib_env )

if GetPlatform() != 'darwin':
    lib_env.ParseConfig('flagpoll vrjuggler --cflags --libs --atleast-version=%s --get-extra_libs'%lib_env['VRJugglerVersion'])
    lib_env.Append(LIBS = ['GLU','GL'])
else:
    lib_env.ParseConfig('flagpoll vrjuggler-opengl vrjuggler --cflags --libs --atleast-version=%s --get-vrj_ogl_libs'%lib_env['VRJugglerVersion'])     

if baseEnv['StaticLibs'] == "yes":
   lib = ves_pkg.createStaticAndSharedLibrary('ves_xplorer_volume%s' %(execOsgPatTag),
                                                        lib_env,
                                                        installPrefix = LIBDIR)
else:
   lib = ves_pkg.createSharedLibrary('ves_xplorer_volume%s' %(execOsgPatTag), lib_env,
                                               installPrefix = LIBDIR)
   
lib.addSources(sources)
lib.addHeaders(headers,  pj( 'ves', 'xplorer', 'volume'))
lib.build()
