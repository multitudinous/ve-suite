##Builds DefaultGraphicalPlugin<tag>
import os, sys, string
pj = os.path.join
import SConsAddons.Util as sca_util
import distutils.util
from SConsAddons.EnvironmentBuilder import EnvironmentBuilder

Import('baseEnv ves_pkg LIBDIR buildDir vtk_options osg_options xerces_options GetPlatform')
Import('gmtl_options vrjuggler_options osgal_options')

sources = Split("""
    DefaultGraphicalPlugin.cxx
""")

headers = Split("""
    DefaultGraphicalPlugin.h
""")

lib_env = ves_pkg.getEnv().Clone()
lib_env.Append( LIBS = [ 'ves_xplorer',
                         'ves_xplorer_scenegraph' ] )
lib_env.Append( LIBPATH = [ pj('#', buildDir, 'src','ves','xplorer'),
		            pj('#', buildDir, 'src','ves','xplorer','scenegraph') ] )
lib_env.Append( CPPDEFINES = [ 'VE_USER_PLUGIN_LIBRARY' ] )

gmtl_options.apply( lib_env )
vrjuggler_options.apply( lib_env )
osg_options.apply( lib_env )
if osgal_options.isAvailable():
   osgal_options.apply( lib_env )
   lib_env.Append( CPPDEFINES = [ 'VE_SOUND' ] )
xerces_options.apply( lib_env )
vtk_options.apply( lib_env )

if GetPlatform() == 'win32':
   lib_env['no_import_lib'] = 1
   #lib_env['SHLINKFLAGS'] = '$LINKFLAGS /dll /MANIFEST:NO'
   lib_env['WINDOWS_INSERT_MANIFEST'] = False
   #if lib_env['default_debug_level'] != EnvironmentBuilder.NONE:
   #   lib_env['PDB'] = True

lib = ves_pkg.createLoadableModule( 'DefaultGraphicalPlugin', lib_env,
    installPrefix = pj( LIBDIR, 'xplorer', 'plugins' ) )  

lib.addSources( sources )
lib.build()
