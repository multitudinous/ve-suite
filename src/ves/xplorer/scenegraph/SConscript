##Builds VE_SceneGraphLib<tag>
import os, sys, string
import SConsAddons.Util as sca_util
pj = os.path.join

Import('baseEnv ves_pkg LIBDIR osg_options vtk_options RootDir buildDir xerces_options GetPlatform')
srcDir = os.path.abspath( pj(RootDir, 'src', 'ves', 'xplorer','scenegraph') )
sources = sca_util.getSourcesRecursive( srcDir )
headers = sca_util.getHeadersRecursive( srcDir )

##srcs = map(lambda s: pj('#', 'VE_Xplorer', 'SceneGraph', s), srcs)

lib_env = ves_pkg.getEnv().Copy()
lib_env.ParseConfig('flagpoll bullet gmtl --libs --cflags Boost --cflags')
lib_env.ParseConfig('flagpoll vpr --atleast-version=%s gadgeteer --libs --cflags'%lib_env['VPRVersion'])

if GetPlatform() != 'darwin':
    lib_env.ParseConfig('flagpoll vrjuggler --atleast-version=%s --get-extra_libs'%lib_env['VRJugglerVersion'])
    lib_env.Append(LIBS = ['GLU','GL'])
else:
    lib_env.ParseConfig('flagpoll vrjuggler-opengl --atleast-version=%s --get-vrj_ogl_libs'%lib_env['VRJugglerVersion'])     

lib_env.Append(CPPPATH = [pj('#','external','osgOQ','include')])
lib_env.Append(LIBS = ['ves_open_xml','osgOQ','ves_xplorer_util'])
lib_env.Append(LIBPATH = [pj('#', buildDir, 'src', 'ves', 'open','xml'),
                          pj('#', buildDir, 'src', 'ves', 'xplorer','util'),
                          pj('#',buildDir,'external','osgOQ')])
vtk_options.apply( lib_env )
osg_options.apply( lib_env )
xerces_options.apply( lib_env )
#lib_env.Append( CPPFLAGS = ['-ffriend-injection'] )

if baseEnv['StaticLibs'] == "yes":
   lib = ves_pkg.createStaticAndSharedLibrary('ves_xplorer_scenegraph',
                                                        lib_env,
                                                        installPrefix = LIBDIR)
else:
   lib = ves_pkg.createSharedLibrary('ves_xplorer_scenegraph', lib_env,
                                               installPrefix = LIBDIR)
   
lib.addSources(sources)
lib.addHeaders(headers,  pj( 'ves', 'xplorer', 'scenegraph'))
lib.build()
