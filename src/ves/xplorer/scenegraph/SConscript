##Builds VE_SceneGraphLib<tag>
import os, sys, string
import SConsAddons.Util as sca_util
pj = os.path.join

Import('baseEnv ves_pkg LIBDIR osg_options vtk_options RootDir buildDir xerces_options GetPlatform bulletBaseVar')
Import('gmtl_options vpr_options gadgeteer_options vrjuggler_options osgal_options tao_options osgworks_options ApplyBulletVars')

srcDir = os.path.abspath( pj(RootDir, 'src', 'ves', 'xplorer','scenegraph') )
sources = sca_util.getSourcesRecursive( srcDir )
headers = sca_util.getHeadersRecursive( srcDir )

##srcs = map(lambda s: pj('#', 'VE_Xplorer', 'SceneGraph', s), srcs)

lib_env = ves_pkg.getEnv().Clone()
#see if we need to compile support for transform manipulators
if baseEnv[ 'TransformManipulator' ] != 'no':
    lib_env.Append( CPPDEFINES = [ 'TRANSFORM_MANIPULATOR' ] )
lib_env.Append(CPPPATH = [pj('#','external','osgBullet','include'),
                          pj('#','external', bulletBaseVar,'Extras'),
                          pj('#','external', bulletBaseVar,'src')])
ApplyBulletVars(lib_env)
lib_env.Append(LIBS = ['ves_open_xml','ves_xplorer_communication','ves_xplorer_util','bullet','osgBulletPlus','osgBullet','BulletColladaConverter','COLLADA_DOM','XML'])

lib_env.Append(LIBPATH = [pj('#', buildDir, 'src', 'ves', 'open','xml'),
                          pj('#', buildDir, 'src', 'ves', 'xplorer','util'),
                          pj('#', buildDir, 'src', 'ves', 'xplorer','communication'),
                          pj('#', buildDir, 'external', bulletBaseVar),
                          pj('#', buildDir, 'external', 'osgBulletPlus'),
                          pj('#', buildDir, 'external', 'osgBullet')])

gmtl_options.apply( lib_env )
vpr_options.apply( lib_env )
gadgeteer_options.apply( lib_env )
vrjuggler_options.apply( lib_env )
vtk_options.apply( lib_env )
osg_options.apply( lib_env )
xerces_options.apply( lib_env )
tao_options.apply( lib_env )
osgworks_options.apply( lib_env )

if osgal_options.isAvailable():
   osgal_options.apply( lib_env )
   
lib_env.Append( CPPDEFINES = ['VE_SCENEGRAPH_LIBRARY','VE_SCENEGRAPH_UTILS_LIBRARY','VE_NURBS_LIBRARY','VE_NURBS_UTILS_LIBRARY'])

if baseEnv['StaticLibs'] == "yes":
   lib = ves_pkg.createStaticAndSharedLibrary('ves_xplorer_scenegraph',
                                                        lib_env,
                                                        installPrefix = LIBDIR)
else:
   lib = ves_pkg.createSharedLibrary('ves_xplorer_scenegraph', lib_env,
                                               installPrefix = LIBDIR)
   
lib.addSources(sources)
lib.addHeaders(headers,  pj( 'ves', 'xplorer', 'scenegraph'))
lib.build()
