////////////////////////////////////////////////////////////////////////////////
#ifndef UIELEMENT_H
#define UIELEMENT_H

#include <osg/Vec4f>

namespace ves
{
namespace xplorer
{
namespace util
{
class InteractionEvent;
} // namespace util
} // namespace xplorer
namespace conductor
{
/// @file UIElement.h    

////////////////////////////////////////////////////////////////////////////////
/// @class ves::conductor::UIElement
/// Abstract class that defines interaction with GL-embedded user interfaces
////////////////////////////////////////////////////////////////////////////////
class UIElement
{
public:
////////////////////////////////////////////////////////////////////////////////
/// Returns the pixel width of the element's rendered image.
///
/// Required override.
////////////////////////////////////////////////////////////////////////////////
    virtual int GetImageWidth() = 0;
////////////////////////////////////////////////////////////////////////////////
/// Returns the pixel height of the element's rendered image.
///
/// Required override.
////////////////////////////////////////////////////////////////////////////////
    virtual int GetImageHeight() = 0;
////////////////////////////////////////////////////////////////////////////////
/// Returns the pixel width of the element itself.
///
/// Required override.
////////////////////////////////////////////////////////////////////////////////
    virtual int GetElementWidth() = 0;
////////////////////////////////////////////////////////////////////////////////
/// Returns the pixel height of the element itself.
///
/// Required override.
////////////////////////////////////////////////////////////////////////////////
    virtual int GetElementHeight() = 0;
////////////////////////////////////////////////////////////////////////////////
/// Returns the texture coordinates of the element inside its texture image.
/// Four components of return value are w = left, x = right, y = bottom,
/// z = top.
///
/// Required override.
////////////////////////////////////////////////////////////////////////////////
    virtual const osg::Vec4f GetTextureCoordinates() = 0;
////////////////////////////////////////////////////////////////////////////////
/// Used to send generic interaction events (mouse, keyboard, wand, etc.) to
/// this element.
///
/// Required override.
////////////////////////////////////////////////////////////////////////////////
    virtual void SendInteractionEvent( xplorer::util::InteractionEvent &event ) = 0;
////////////////////////////////////////////////////////////////////////////////
/// Tell this element to render to an image and return a pointer to the data.
///
/// Child classes should use calls to this function as an opportunity to do two
/// related things: (1) Update any UI parts that require such, and (2) Render
/// the UI element to an image.
/// @return Pointer to the image data.
/// Required override.
////////////////////////////////////////////////////////////////////////////////
    virtual unsigned char* RenderElementToImage() = 0;
////////////////////////////////////////////////////////////////////////////////
/// Give the element a chance to do any needed initialization before we show it
/// and begin interacting with it. Elements might use this as an opportunity to
/// start timers, set up events, or perform other initialization tasks that are
/// not appropriate to doing inside a constructor.
///
/// Required override.
////////////////////////////////////////////////////////////////////////////////
    virtual void Initialize(  ) = 0;
////////////////////////////////////////////////////////////////////////////////
    virtual void Unembed(  ) = 0;
    virtual void Embed(  ) = 0;

};

} // namepsace conductor
} // namespace ves

#endif // UIELEMENT_H
