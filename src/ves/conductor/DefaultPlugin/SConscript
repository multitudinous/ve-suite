##Builds DefaultPlugin_UI_Dialog
import os, sys, string, smtplib
#from subprocess import *

pj = os.path.join

Import('baseEnv ves_pkg LIBDIR buildDir xerces_options wxwidgets_options GetPlatform')

sources = Split("""
    DefaultPlugin.cxx
    DefaultPlugin_UI_Dialog.cxx
""")

headers = Split("""
    DefaultPlugin.h
    DefaultPlugin_UI_Dialog.h
""")

lib_env = ves_pkg.getEnv().Clone()
lib_env.Append(LIBS = ['VE_ConductorLib', 'VE_XML','GUIPluginLib',
                   'VE_OpenModuleLib'])
lib_env.Append(LIBPATH = [pj('#', buildDir, 'VE_Conductor','Network'),
                        pj('#', buildDir, 'VE_Conductor','GUIPlugin'),
                        pj('#', buildDir, 'VE_Open','skel'),
                        pj('#', buildDir, 'VE_Open','XML')])

lib_env.ParseConfig('flagpoll TAO --cflags --libs')
xerces_options.apply( lib_env )
wxwidgets_options.apply( lib_env )
##lib_env.LoadableModule
#create a bundle instead of a shared library
if GetPlatform() == 'darwin':
   lib_env['SHLINKFLAGS'] = '$LINKFLAGS -bundle -flat_namespace -undefined suppress'
   lib_env['SHLIBSUFFIX'] = '.bundle'

lib = ves_pkg.createSharedLibrary('DefaultPlugin_UI_Dialog',
                                                        lib_env,
                                                        installPrefix = pj('bin','Plugins','UI'))
   
lib.addSources(sources)
lib.addHeaders(headers,  pj( 'VE_Conductor', 'DefaultPlugin'))
lib.build()
