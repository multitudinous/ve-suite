##Builds idl skeleton files for veopen
import os, sys, string
pj = os.path.join

Import('baseEnv buildDir GetPlatform')

env = baseEnv.Clone()
##env.Append(CPPPATH = [os.getcwd()])
##env.Append(CPPPATH = ['idl'])

targetModule = [pj('#', buildDir,'src','ves','open','moduleS.h'), 
                pj('#', buildDir,'src','ves','open','moduleC.h'),
                pj('#', buildDir,'src','ves','open','moduleC.cpp'), 
                pj('#', buildDir,'src','ves','open','moduleS.cpp'),
                pj('#', buildDir,'src','ves','open','moduleC.inl'),
                pj('#', buildDir,'src','ves','open','moduleI.cpp'),
                pj('#', buildDir,'src','ves','open','moduleI.h'),
                pj('#', buildDir,'src','ves','open','moduleS.inl')]
targetVjObs = [pj('#', buildDir,'src','ves','open','VjObsS.h'), 
               pj('#', buildDir,'src','ves','open','VjObsC.h'),
               pj('#', buildDir,'src','ves','open','VjObsS.cpp'), 
               pj('#', buildDir,'src','ves','open','VjObsC.cpp'),
               pj('#', buildDir,'src','ves','open','VjObsC.inl'),
               pj('#', buildDir,'src','ves','open','VjObsI.cpp'),
               pj('#', buildDir,'src','ves','open','VjObsI.h'),
               pj('#', buildDir,'src','ves','open','VjObsS.inl')]

#taoPrefix=os.popen('flagpoll TAO --variable=prefix').read().strip()
#env.PrependENVPath( 'LD_LIBRARY_PATH',pj( taoPrefix,'lib'))
#env.PrependENVPath( 'PATH',pj( taoPrefix,'bin'))
tao_idl ='tao_idl'
if GetPlatform() != 'win32':
    idlCmd = '%s -o %s/src/ves/open -in -GC -GI  -I%s/src/ves/open/idl -Wb,export_macro=VE_OPEN_MODULE_EXPORTS -Wb,export_include=ves/VEConfig.h ${SOURCES}' %(tao_idl, buildDir, buildDir)
else:
    idlCmd = '%s -o %s/src/ves/open -in -GC -GI -H dynamic_hash -I%s/src/ves/open/idl -Wb,export_macro=VE_OPEN_MODULE_EXPORTS -Wb,export_include=ves/VEConfig.h ${SOURCES}' %(tao_idl, buildDir, buildDir)

srcs = [pj('#',buildDir,'src','ves','open','idl','module.idl'), 
        pj('#',buildDir,'src','ves','open','idl','VjObs.idl')]
bld = Builder(action = idlCmd)
env.Append(BUILDERS = {'tao_idl': bld})
env.tao_idl(targetModule, pj('#',buildDir,'src','ves','open','idl','module.idl'))
env.tao_idl(targetVjObs, pj('#',buildDir,'src','ves','open','idl','VjObs.idl'))
