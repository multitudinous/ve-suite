##Builds VE_OpenModuleLib
import os, sys, string
pj = os.path.join

Import('baseEnv ves_pkg LIBDIR')

headers = Split("""
   moduleS.h
   moduleC.h
   VjObsC.h
   VjObsS.h
   moduleC.inl
   moduleI.cpp
   moduleI.h
   moduleS.inl
   moduleS_T.h
   moduleS_T.inl
   moduleS_T.cpp
""")

sources = Split("""
   moduleS.cpp
   moduleC.cpp
   VjObsC.cpp
   VjObsS.cpp
""")
##srcs = map(lambda s: pj('#', 'VE_Open', 'skel', s), srcs)

lib_env = ves_pkg.getEnv().Copy()
lib_env.ParseConfig('flagpoll TAO ACE TAO_IORInterceptor TAO_ObjRefTemplate TAO_Valuetype \
                              TAO_CosNaming TAO_Svc_Utils TAO_IORTable TAO_Messaging \
                              TAO_PortableServer TAO_BiDirGIOP TAO_AnyTypeCode --cflags --libs')

if baseEnv['StaticLibs'] == "yes":
   lib = ves_pkg.createStaticAndSharedLibrary('ves_open_module',
                                                        lib_env,
                                                        installPrefix = LIBDIR)
else:
   lib = ves_pkg.createSharedLibrary('ves_open_module', lib_env,
                                               installPrefix = LIBDIR)

lib.addSources(sources)
lib.addHeaders(headers,  pj( 'open', 'skel'))
lib.build()
