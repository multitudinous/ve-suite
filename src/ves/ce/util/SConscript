##Builds VE_CE_UtilitiesLib
import os, sys, string
pj = os.path.join
import SConsAddons.Util as sca_util

Import('baseEnv ves_pkg LIBDIR buildDir xerces_options RootDir')

srcDir = os.path.abspath( pj(RootDir, 'src', 'ves', 'ce', 'util') )
sources = sca_util.getSourcesRecursive( srcDir )
headers = sca_util.getHeadersRecursive( srcDir )

lib_env = ves_pkg.getEnv().Copy()
##env = baseEnv.Copy()
lib_env.Append(LIBS = ['ves_open_xml', 'ves_open_module'])
lib_env.Append(LIBPATH = [ pj('#', buildDir, 'src', 'ves', 'open','skel'),
                        pj('#', buildDir, 'src', 'ves', 'open','xml') ] )
lib_env.ParseConfig('flagpoll TAO TAO_PortableServer TAO_Messaging TAO_Valuetype --libs --cflags')
xerces_options.apply( lib_env )

if baseEnv['StaticOnly'] == "no":
   vece_util_lib = ves_pkg.createStaticAndSharedLibrary('ves_ce_util',
                                                        lib_env,
                                                        installPrefix = LIBDIR)
else:
   vece_util_lib = ves_pkg.createStaticLibrary('ves_ce_util', lib_env,
                                               installPrefix = LIBDIR)
   
vece_util_lib.addSources(sources)
vece_util_lib.addHeaders(headers,  pj( 'ves', 'ce', 'util'))
vece_util_lib.build()
