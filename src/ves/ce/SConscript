##Builds CE Libraries
import os, sys, string, glob
pj = os.path.join

Import('baseEnv ves_pkg LIBDIR buildDir RootDir tao_options xerces_options')
Import('boost_options')

sources = Split("""
    Body_AMI_UIHandler_i.cxx
    Body_AMH_Executive_i.cxx
    Body_AMI_UnitHandler_i.cxx
    QueryThread.cxx
    Execute_Thread.cxx
""")

headers = Split("""
    Body_AMI_UIHandler_i.h
    Body_AMH_Executive_i.h
    Body_AMI_UnitHandler_i.h
    QueryThread.h
    Execute_Thread.h
""")

lib_env = ves_pkg.getEnv().Clone()

lib_env.Append(LIBS = ['ves_open_xml', 'ves_ce_util', 'ves_open_module'])
lib_env.Append(LIBPATH = [
                        pj('#', buildDir, 'src','ves','ce','util'),
                        pj('#', buildDir, 'src','ves','open'),
                        pj('#', buildDir, 'src','ves','open','xml')
                     ])
                     
xerces_options.apply( lib_env )
boost_options.apply( lib_env )
tao_options.apply( lib_env )

lib_env.Append( CPPDEFINES = ['VE_CE_LIBRARY'])
   
if baseEnv['StaticLibs'] == "yes":
   lib = ves_pkg.createStaticAndSharedLibrary('ves_ce',
                                                        lib_env,
                                                        installPrefix = LIBDIR)
else:
   lib = ves_pkg.createSharedLibrary('ves_ce', lib_env,
                                               installPrefix = LIBDIR)

lib.addSources(sources)
lib.addHeaders(headers,  pj( 'ves','ce') )
lib.build()

openSubdirs = Split("""
    util
    unitwrapper
""")

##Run SConscript files in all of those folders.
for d in openSubdirs:
   SConscript( dirs = d )
