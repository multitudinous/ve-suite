PACKAGE_NAME=VTK
BASE_DIR="${DEV_BASE_DIR}/VTK-5.10"

SOURCE_RETRIEVAL_METHOD=wget
SOURCE_FORMAT=tgz
SOURCE_URL=http://www.vtk.org/files/release/5.10/vtk-5.10.1.tar.gz
VTK_VERSION_DIR=vtk-5.10

SOURCE_DIR="${BASE_DIR}"
BUILD_DIR="${BASE_DIR}/build-${ARCH}"
INSTALL_DIR="${BASE_DIR}/install-${ARCH}"
PREBUILD_METHOD=cmake
FPC_FILE=VTK.fpc

CMAKE_PARAMS+=( -DCMAKE_INSTALL_PREFIX="${INSTALL_DIR}" )
CMAKE_PARAMS+=( -DBUILD_SHARED_LIBS=ON )
CMAKE_PARAMS+=( -DBUILD_TESTING=OFF )
CMAKE_PARAMS+=( -DVTK_USE_PARALLEL=ON )
CMAKE_PARAMS+=( -DVTK_USE_SYSTEM_EXPAT=OFF )
CMAKE_PARAMS+=( -DVTK_USE_SYSTEM_FREETYPE=OFF )
CMAKE_PARAMS+=( -DVTK_USE_SYSTEM_LIBXML2=OFF )
CMAKE_PARAMS+=( -DVTK_USE_SYSTEM_PNG=OFF )
CMAKE_PARAMS+=( -DVTK_USE_SYSTEM_TIFF=OFF )
CMAKE_PARAMS+=( -DVTK_USE_SYSTEM_LIBPROJ4=OFF )
CMAKE_PARAMS+=( -DVTK_LEGACY_REMOVE=ON )
CMAKE_PARAMS+=( -DVTK_USE_DISPLAY=OFF )
#CMAKE_PARAMS+=( -DVTK_DEBUG_LEAKS=ON )

VES_INSTALL_PARAMS+=( lib )

case $PLATFORM in
  Windows)
    # get a patched version of VTK 5.10 for Visual Studio 2013
    if [ "${VS_VERSION}" == "12.0" ]
    then
      SOURCE_RETRIEVAL_METHOD=git
      SOURCE_URL=https://github.com/bilke/VTK

      CMAKE_PARAMS+=( -DCMAKE_INSTALL_PREFIX="${INSTALL_DIR}" )
    fi

    SKIP_FPC_INSTALL="no"
    CMAKE_PARAMS+=( -DCMAKE_CONFIGURATION_TYPES="${BUILD_TYPE}" )
    MSVC_CONFIG="${BUILD_TYPE}"
    if [ ${ARCH} = "32-bit" ]; then
      MSVC_PLATFORM=Win32
    else
      MSVC_PLATFORM=x64
      CMAKE_PARAMS+=( -DVTK_USE_64BIT_IDS=ON )
      #CMAKE_PARAMS+=( -DCMAKE_REQUIRE_LARGE_FILE_SUPPORT=ON )
      #CMAKE_PARAMS+=( -DVTK_REQUIRE_LARGE_FILE_SUPPORT=ON )
    fi
    CMAKE_PARAMS+=( -DVTK_USE_SYSTEM_ZLIB=OFF )
    MSVC_SOLUTION="VTK.sln"
    #MSVC_PROJECT_NAMES+=( INSTALL )
    ;;
  Darwin)
    SKIP_FPC_INSTALL="yes"
    CMAKE_PARAMS+=( -DVTK_USE_SYSTEM_ZLIB=ON )
    CMAKE_PARAMS+=( -DCMAKE_BUILD_TYPE="${BUILD_TYPE}" )
    CMAKE_PARAMS+=( -DPROJ_USE_PTHREADS=ON )
    CMAKE_PARAMS+=( -DVTK_USE_64BIT_IDS=ON )
    #CMAKE_PARAMS+=( -DCMAKE_REQUIRE_LARGE_FILE_SUPPORT=ON )
    #CMAKE_PARAMS+=( -DVTK_REQUIRE_LARGE_FILE_SUPPORT=ON )
    ;;
  Linux)
    SKIP_FPC_INSTALL="yes"
    CMAKE_PARAMS+=( -DVTK_USE_SYSTEM_ZLIB=ON )
    CMAKE_PARAMS+=( -DCMAKE_BUILD_TYPE="${BUILD_TYPE}" )
    CMAKE_PARAMS+=( -DPROJ_USE_PTHREADS=ON )
    CMAKE_PARAMS+=( -DVTK_USE_64BIT_IDS=ON )

    # Don't build with OSMesa support
    CMAKE_PARAMS+=( -DVTK_OPENGL_HAS_OSMESA=OFF )

    # Workaround for build failure on Rendering/vtkXOpenGLRenderWindow.cxx
    # on RHEL/CentOS 7. This define is used elsewhere in GL-related VTK code,
    # but for some reason is absent on that one file.
    CMAKE_PARAMS+=( -DCMAKE_CXX_FLAGS="-DGLX_GLXEXT_LEGACY" )

    #CMAKE_PARAMS+=( -DCMAKE_REQUIRE_LARGE_FILE_SUPPORT=ON )
    #CMAKE_PARAMS+=( -DVTK_REQUIRE_LARGE_FILE_SUPPORT=ON )
    ;;
esac
