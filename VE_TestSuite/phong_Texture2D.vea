<?xml version="1.0" encoding="ISO-8859-1" standalone="no" ?>

<Program>
<name>phong(Texture2D)</name>

<vertexShader>
<type>Vertex</type>
	<shaderCode>
         	varying vec2 texCoord;
         	varying vec3 lightPos;
         	varying vec3 objPos;
         	varying vec3 eyePos;
         	varying vec3 normal;
   
         	void main()
         	{
               	gl_Position=ftransform();
               
               	texCoord=gl_MultiTexCoord0.xy;
               	objPos=gl_Vertex.xyz;
               	eyePos=vec3(gl_ModelViewMatrix*gl_Vertex);
               	lightPos=gl_LightSource[0].position.xyz;
               	normal=gl_NormalMatrix*gl_Normal;
         	}
	</shaderCode>
</vertexShader>

<fragmentShader>
<type>Fragment</type>
	<uniform>
		<name>fSpecularPower</name>
		<type>Float</type>
		<size>1</size>
		<value>25.0</value>
	</uniform>
	<uniform>
		<name>baseMap</name>
		<type>Sampler</type>
		<size>1</size>
		<textureUnit>0</textureUnit>
      </uniform>
	<textureImage> 
		<textureDescriptionData> 
			<parameter> 
				<dataName>Wrap S</dataName> 
				<dataValueString>Repeat</dataValueString> 
			</parameter> 
			<parameter> 
				<dataName>Wrap T</dataName> 
				<dataValueString>Repeat</dataValueString> 
			</parameter> 
			<parameter> 
				<dataName>Wrap R</dataName> 
				<dataValueString>Repeat</dataValueString> 
			</parameter> 
			<parameter> 
				<dataName>Magnification</dataName> 
				<dataValueString>Linear</dataValueString> 
			</parameter> 
			<parameter> 
				<dataName>Minification</dataName> 
				<dataValueString>Linear</dataValueString> 
			</parameter> 
			<parameter> 
				<dataName>Type</dataName> 
				<dataValueString>2D</dataValueString> 
			</parameter> 
			<parameter> 
				<dataName>Dimension</dataName> 
				<dataValueUInt>2</dataValueUInt> 
			</parameter> 
			<parameter> 
				<dataName>Unit</dataName> 
				<dataValueUInt>0</dataValueUInt> 
			</parameter> 
			<parameter> 
				<dataName>FRONT</dataName> 
				<dataValueString>C:/TSVEG/VE_Suite/VE_TestSuite/Hyper/Textures/carpet.tga</dataValueString> 
			</parameter> 
		</textureDescriptionData> 
		<textureUnit>0</textureUnit> 
		<dimension>2</dimension> 
		<textureType>2D</textureType> 
	</textureImage>
	<shaderCode>
		uniform float specularPower;
		uniform sampler2D baseMap;

		varying vec2 texCoord;
		varying vec3 lightPos;
		varying vec3 objPos;
		varying vec3 eyePos;
		varying vec3 normal;

		void main()
		{
   			vec3 N=normalize(normal);
   			vec3 L=normalize(lightPos);
   			float NDotL=max(dot(N,L),0.0); 
   
   			vec3 V=normalize(eyePos);
   			vec3 R=reflect(V,N);
   			float RDotL=max(dot(R,L),0.0);
   
   			vec3 baseColor=vec3(texture2D(baseMap,texCoord));
   
   			vec3 TotalAmbient=gl_LightSource[0].ambient.rgb*baseColor; 
   			vec3 TotalDiffuse=gl_LightSource[0].diffuse.rgb*baseColor*NDotL; 
   			vec3 TotalSpecular=gl_LightSource[0].specular.rgb*(pow(RDotL,specularPower));
  
   			gl_FragColor=vec4(TotalAmbient+TotalDiffuse+TotalSpecular,1.0);  
		}
	</shaderCode>
</fragmentShader>

</Program>