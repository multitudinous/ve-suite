<?xml version="1.0" encoding="ISO-8859-1" standalone="no" ?>

<Program>
<name>phong(Picker)</name>

<vertexShader>
<type>Vertex</type>
	<shaderCode>
		varying vec3 color;
		varying vec3 lightPos;
		varying vec3 objPos;
      	varying vec3 eyePos;
      	varying vec3 normal;
   
      	void main()
      	{
            	gl_Position=ftransform();
            	
			color=gl_Color.rgb;
            	objPos=gl_Vertex.xyz;
            	eyePos=vec3(gl_ModelViewMatrix*gl_Vertex);
            	lightPos=gl_LightSource[0].position.xyz;
            	normal=gl_NormalMatrix*gl_Normal;
      	}
	</shaderCode>
</vertexShader>

<fragmentShader>
<type>Fragment</type>
	<uniform>
		<name>fSpecularPower</name>
		<type>Float</type>
		<size>1</size>
		<value>25.0</value>
	</uniform>
	<shaderCode>
		uniform float specularPower;

		varying vec3 color;
		varying vec3 lightPos;
		varying vec3 objPos;
		varying vec3 eyePos;
		varying vec3 normal;

		void main()
		{
   			vec3 N=normalize(normal);
			vec3 L=normalize(lightPos);
   			float NDotL=max(dot(N,L),0.0); 
   
   			vec3 V=normalize(eyePos);
   			vec3 R=reflect(V,N);
   			float RDotL=max(dot(R,L),0.0);
   
  			vec3 TotalAmbient=0.0; 
   			vec3 TotalDiffuse=color*NDotL; 
   			vec3 TotalSpecular=gl_LightSource[0].specular.rgb*pow(RDotL,specularPower);
  
   			gl_FragColor=vec4(TotalAmbient+TotalDiffuse+TotalSpecular,1.0);  
		}
	</shaderCode>
</fragmentShader>

</Program>