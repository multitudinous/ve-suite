<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>VE-Xplorer</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="../Ve-Suite.css" rel="stylesheet" type="text/css">
</head>
<body bgcolor="#FFFFFF" class="Title1"> 
<p>Using VE-Xplorer and VE-Conductor</p> 
<p class="bodytext">1. Ensure that module data is properly stored before using VE-Xplorer. You must specify a working directory for data storage under the execution folder (below) of a compatible module's User Interface (UI module button).</p> 
<p class="bodytext"><img src="pics/datastorage.gif" width="567" height="194"></p> 
<p class="bodytext">2. When a network has been executed and the module data is properly stored, select the &quot;VE&quot; module button (below) to open VE-Suite. The VE-Suite title page is then displayed.</p> 
<p class="bodytext"><img src="pics/button.gif" width="181" height="184" border="0"></p> 
<p class="bodytext">3. Select &quot;Launch&quot; to convert the stored CFD data files in the working directory into VE-compatible VTK files. The conversion process may take several minutes.</p> 
<p class="bodytext"><img src="pics/launch.gif" width="329" height="232"></p> 
<p class="bodytext"><span class="bodytextemph">Note:</span> The title page remains dormant in the background while using VE-Xplorer. Selecting the &quot;End&quot; button wil close the viewer and end the VE-Suite session.</p> 
<p class="Title2">The SimWindow Display Screen</p> 
<p class="bodytext">The SimWindow provides a color scheme on the left wall of the cave. This color gradient is used to display varying values of a given datatype. The top number represents a maximum value while the bottom number represents a minimum value. All data above the maximum value will be shaded red. Likewise. all data below the minimum value will be shaded blue. Data falling between these values is shaded according to the color scheme.</p> 
<p class="bodytext">The distant table (projected on the rear wall) displays user options selectable with the wand. These user options are also accessible within the JavaClient user interface screen using the tablet.</p> 
<p class="Title2">Navigating within the SimWindow Display Screen</p> 
<p class="bodytext">Navigation in relation to three-dimensional images within the cave is supplemented by the hand-held wand and tablet. The cave operates within a zero-gravity environment and navigation is purely translational.</p> 
<p class="bodytext"> The user can simply point the wand in the desired direction of movement and when the button is selected, the images change to simulate movement.</p> 
<p class="bodytext">In addition to navigation with the wand, the tablet provides options to slide up, down, to the left, to the right, away from the unit, or toward the unit.</p> 
<p class="Title1">The JavaClient User Interface Screen</p> 
<p class="bodytext"><span class="bodytextemph">Scalars folder </span><br> 
  VE-Xplorer can be used to trace a variety of data isncluding gas direction, velocity, pressure, temperature, density, and specie concentration. The user controls the method of data display using the JavaClient user interface on the tablet. The first folder, &quot;Scalars,&quot; governs which datatypes are displayed. From teh data field on the left, the user can select on datatype for display.</p> 
<p class="bodytext">The Scalars folder also controls the method by which data is shaded in the cave. The sliding bars on the right regulate the data maximum and minimum based on percentages of the absolute maximum and minimum. For example, in the color scheme illustrated in the above SimWindow snap, the <b>default</b> maximum is 3200 and the minimum is 400. This means that the highest computed gas temperature for the module was 3200 K and the lowest computed temperature was 400 K. By moving the minimum sliding bar up towards 50, the data range narrows and provides a more detailed representation of temperature values in the <u>upper</u> half of the absolute temperature range. The SimWindow screen is not updated until <em>Update</em> is selected.</p> 
<p class="bodytext"><img src="pics/scalars.gif" width="640" height="480"></p> 
<p class="ital"><span class="bodytextemph">Design folder</span><br> 
  <span class="bodytext">The Design folder is still in development and is not yet functional. It will potentially allow the user to utilize visualization capabilities of the VE Suite in order to manipulate unit geometry and specifications before initializing CFD calculations. This would allow the user to fully parametrize a problem by working from a config-type file.</span></p> 
<p class="bodytext"><span class="bodytextemph">Geometry folder</span><br> 
  The Geometry folder allows the user to toggle the display of unit geometry. When selected, the viewer displays a simplified representation of the unit itself (gasifier shown below) inside the SimWindow screen. Unit geometry will not obstruct data--it becomes nearly transparent when data is displayed. Again, the SimWindow will not be updated until the <em>Update</em> button is selected.</p> 
<p class="bodytext"><img src="pics/geometry.gif" width="636" height="448"></p> 
<p class="bodytext"><span class="bodytextemph">Visualization folder</span><br> 
  <span class="ital">Category</span><br> 
  The VE Suite offers several methods of data display. The user may choose one of the following categories: </p> 
<ul type=circle class="bodytext"> 
  <li class="bodytext"><a href="vesuite.html#contour">Contour</a></li> 
  <li class="bodytext"><a href="vesuite.html#warpcontour">Warped Contour</a></li> 
  <li class="bodytext"><a href="vesuite.html#vector">Vector</a></li> 
  <li class="bodytext"><a href="vesuite.html#streamline">Streamline</a></li> 
  <li class="bodytext"><a href="vesuite.html#isosurface">Isosurface</a></li> 
  <li class="bodytext"><a href="vesuite.html#transient">Transient</a></li> 
  <li class="bodytext"><a href="vesuite.html#piv">PIV_Image</a></li> 
  <li class="bodytext"><a href="vesuite.html#polydata">Polydata-REI Particle</a> <span class="question">(fix links)</span></li> 
</ul> 
<h4 class="bodytextemph"><span class="ital">Direction</span><br> 
  <span class="bodytext">For those categories that display data along a unit cross-section (i.e. contour, warped contour, transient, vector, PIV_Image), the direction field regulates the method by which the two-dimensional plane is generated. The Cartesian axes listed represent <u>normals</u> to the planes displayed. For example, when the Y axis is selected, the planes will run perpendicular to the Y axis (parallel to the monitor's screen).</span></h4> 
<table width="843" border="0"> 
  <tr> 
    <td width="516"><span class="bodytextemph"><img src="pics/visualization.gif" width="391" height="293"></span></td> 
    <td width="317"><span class="bodytextemph"><img src="pics/xyz.gif" width="150" height="150"></span></td> 
  </tr> 
</table> 
<div align="center" class="bodytext"> 
  <div align="left" class="bodytext">The user may also generate cross-sectional planes that are not orthogonal to the defined axes using the wand (<em>By wand</em> option). When selected, the viewer generates a plane normal to the direction of the pointed wand.</div> 
</div> 
<h4 class="bodytextemph"><span class="ital">Sliding Bar</span><br> 
  <span class="bodytext">The values beneath the sliding bar represent percentages. This bar is used to control data display by regulating the position of cross-sectional planes or the value by which isosurfaces are generated.</span></h4> 
<p class="bodytext"><span class="ital">Contour</span><br> 
  The <em>Contour</em> category generates a cross-sectional plane running through the unit. Data is then projected onto this plane using the color-shading scheme to represent varying values. The sliding bar regulates the position of the cross-sectional plane. For example, planes run from left (value=0) to right (value=100) along the X-axis. The value of 50 (displayed at right) creates a plane centered in the middle of the unit. Similarly, planes run from base to top along the Z-axis, and from front to back along the Y-axis.</p> 
<p class="bodytext"><img src="pics/contour.gif" width="249" height="253"></p> 
<p class="bodytext"><span class="ital">Warped Contour</span><br> 
  The <em>Warped Contour</em> category works similarly to the <em>Contour</em> category. In contrast, however, the <em>Warped Contour</em> warps the contour according to the local velocity vector. Instead of simply shading data along the two-dimensional cross-section, data is extruded to its respective value on the contour.</p> 
<p class="bodytext">&nbsp;<img src="pics/warpedcontour.gif"></p> 
<p class="bodytext"><span class="ital">Transient, Vector, and PIV_Image</span><br> 
  The <em>Transient</em>, <em>Vector</em>, and <em>PIV_Image</em> categories all operate similarly to the <em>Contour</em> category when calculations include the appropriate datatypes. Data is projected onto a two-dimensional cross-sectional plane and shaded according to the illustrated color scheme when any of these categories are selected.</p> 
<p class="bodytext"><span class="ital">Streamline</span><br> 
  The streamlines category creates three-dimensionalimages of streamlines with user-specified seed points. When selected, the user utilizes the wand to specify the position of seed points from which the viewer generates streamlines.</p> 
<p class="bodytext"><span class="ital">Isosurface</span><br> 
  The <em>Isosurface</em> category generates three-dimensional surfaces using locations where values of a given datatype are equal. Numbers beneath the sliding bar in the <em>JavaClient</em> screen represent percentages between the maximum and minimum data value. For example, using <em>gas_temp</em> as the datatype, the number 50 represents a temperature of 1800 K--the value half-way between the minimum (400 K) and maximum (3200 K) value. Therefore, when 50 is selected the viewer generates a continuous surface (shown at left) from all the individual points within the unit having a temperature of 1800 K.</p> 
<p class="bodytext"><span class="ital">Polydata</span><br> 
  The <em>Polydata</em> category displays individual particle paths through the unit. The particle positions are predefined and originate from the file: $[VE_SUITE]/REI/particle.param</p> 
</body>
</html>
