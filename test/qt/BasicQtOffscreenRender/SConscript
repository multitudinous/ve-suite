##Builds Qt example program
import os, sys, string
pj = os.path.join
import SConsAddons.Util as sca_util

Import('buildDir GetPlatform RootDir ves_pkg')

lib_env2 = ves_pkg.getEnv().Clone()

# files to be uic'ed
source = [pj('#',buildDir,'test','qt','BasicQtOffscreenRender','mydialog.ui')]
cppHeaders = lib_env2.qt_uic(source)

# files to be moc'ed
source = [pj('#',buildDir,'test','qt','BasicQtOffscreenRender','mydialog.h')]
cppSources = lib_env2.qt_moc(source)

openDir = os.path.abspath( pj(RootDir,buildDir,'test','qt','BasicQtOffscreenRender') )
cppSources1 = map(lambda s: pj(openDir, '%s' ) %(s), cppSources)

cppHeaders1 = map(lambda s: pj(openDir, '%s' ) %(s), cppHeaders)

headers2 = cppHeaders1
headers2 += sca_util.getHeadersRecursive( pj(RootDir,'test','qt','BasicQtOffscreenRender') )
sources2 = sca_util.getSourcesRecursive( pj(RootDir,'test','qt','BasicQtOffscreenRender') )
sources2+=cppSources1

if GetPlatform() == 'linux':
    Import('qt_options')
    lib_env2.Append( CXXFLAGS=['-fPIC'])
    qt_options.apply(lib_env2)
else:
    import qt46
    qt46.applyQtBuildFlags( lib_env2 )

lib_env2.AppendUnique( CPPPATH = [pj(openDir)] )

qtprog = ves_pkg.createProgram('BasicQtOffscreenRender' + lib_env2["PROGSUFFIX"], lib_env2, 'bin')
qtprog.addSources(sources2)
qtprog.addHeaders(headers2, pj('test'))
qtprog.build()

