##Builds idl skeleton files for veopen
import os, sys, string
pj = os.path.join
import SConsAddons.Util as sca_util
import qt46

Import('buildDir GetPlatform RootDir ves_pkg')

lib_env2 = ves_pkg.getEnv().Clone()

source = [pj('#',buildDir,'test','qt','BasicQtOffscreenRender','mydialog.ui')]
cppSources = lib_env2.qt_uic(source)

# first file
#source = [pj('#',buildDir,'test','qt','BasicQtOffscreenRender','mglwidget.h')]
#cppSources += lib_env2.qt_moc(source)

# second file
source = [pj('#',buildDir,'test','qt','BasicQtOffscreenRender','mydialog.h')]
cppSources += lib_env2.qt_moc(source)

openDir = os.path.abspath( pj(RootDir,buildDir,'test','qt','BasicQtOffscreenRender') )
cppSources1 = map(lambda s: pj(openDir, '%s' ) %(s), cppSources)

sources2 = sca_util.getSourcesRecursive( pj(RootDir,'test','qt','BasicQtOffscreenRender') )
sources2+=cppSources1

if GetPlatform() == 'linux':
    lib_env2.Append( CXXFLAGS=['-fPIC'])

lib_env2.AppendUnique( CPPPATH = [pj(openDir)] )

qt46.applyQtBuildFlags( lib_env2 )

qtprog = ves_pkg.createProgram('BasicQtOffscreenRender' + lib_env2["PROGSUFFIX"], lib_env2, 'bin')
qtprog.addSources(sources2)
qtprog.build()

