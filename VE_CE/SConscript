##Builds Exe_server
import os, sys, string
pj = os.path.join

Import('baseEnv')
Import('cfdHostType')

srcs = Split("""
   Exe_server.cpp 
   Executive_i.cpp 
   Execute_Thread.cpp  
""")
srcs = map(lambda s: pj('#', 'VE_CE', s), srcs)

env = baseEnv.Copy()
env.Append(LIBS = ['VE_ConductorLib', 'VE_XMLLib', 'VE_ModelLib', 'VE_CADLib',
                   'VE_ShaderLib', 'VE_CE_UtilitiesLib', 'VE_OpenModuleLib'])
env.ParseConfig('vpr-config --libs --extra-libs --includes')
env.ParseConfig('vrjuggler-config vrj --libs --extra-libs --includes')
env.ParseConfig('wx-config --cxxflags --libs' )
env.ParseConfig('flagpoll tao --libs --cflags')
env.ParseConfig('flagpoll xerces --libs --cflags')

env.Program(pj('#', 'bin', cfdHostType, 'Exe_server'), source = srcs)
