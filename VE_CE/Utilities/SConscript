import os, sys, string
pj = os.path.join

Import('baseEnv')
##Import('Platform')
##Import( '*' )
Import('libPath')


srcs = Split("""
   Connection.cxx
   Module.cxx
   node_base.cxx
   node_module.cxx
   Port.cxx
   IPort.cxx
   Network.cxx
   node_loop.cxx
   OPort.cxx
   Scheduler.cxx  
""")

srcs = map(lambda s: pj('#', 'VE_CE', 'Utilities', s), srcs)
#skel_srcs = map(lambda s: pj('#', 'VE_Open', 'skel', s), skel_srcs)

#ce_srcs = list()
#ce_srcs.extend(ces_srcs)
#ce_srcs.extend(skel_srcs)

env = baseEnv.Copy()
#env.Append(CPPPATH = [os.getcwd()])
##env.Append(CPPPATH = ['#'])
#env.Append(CPPPATH = pj( os.getenv('XERCESCROOT',''), 'include') )
##env.Append(CPPPATH = pj( os.getenv('TAO_HOME',''), 'include') )
##env.Append(LIBPATH = libPath,
env.Append(LIBS = ['VE_ModelLib', 'VE_XMLLib', 'VE_OpenModuleLib'])
##NOTE: Change RHEL_4 to generic term later.
##for lib in xerces:
##   env.Append(LIBS = lib)
##for lib in ace_tao:
##    env.Append(LIBS = lib)
#for lib in vtk:
#   env.Append(LIBS = lib)
#for lib in osg:
#   env.Append(LIBS = lib) 
#for lib in boost:
#   env.Append(LIBS = lib)  
#env.ParseConfig( 'vpr-config --libs --extra-libs --includes' )
#env.ParseConfig( 'corona-config --libs' )
#env.ParseConfig( 'vrjuggler-config vrj --libs --extra-libs --includes' )
#env.ParseConfig( 'wx-config --cxxflags --libs' )
env.ParseConfig('flagpoll xerces --libs')
env.ParseConfig('flagpoll tao --libs --cflags')

targetLib = pj(libPath, 'VE_CE_UtilitiesLib')
env.SharedLibrary(target = targetLib, source = srcs)
