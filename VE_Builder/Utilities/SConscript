##Builds a multitude of utilities
import os, sys, string
pj = os.path.join

Import('baseEnv libPath ves_pkg LIBDIR GetPlatform')

addNormals2Poly = Split("""
   addNormals2Poly.cpp
""")

appendVTK = Split("""
   appendVTK.cpp
""")

combineFluentParticleFile = Split("""
   CombinePartFiles.cpp
""")

compareScalars = Split("""
    compareScalars.cpp
""")

convertCellDataToPointData = Split("""
   convertCellDataToPointData.cpp
""")

convertSurfaceFileToStl = Split("""
   convertSurfaceFileToStl.cpp 
""")

convertVTK2Ascii = Split("""
   convertVTK2Ascii.cpp
""")

convertVTK2Binary = Split("""
   convertVTK2Binary.cpp
""")

createMiniFlowdata = Split("""
   createMiniFlowdata.cpp
""")

makeVtkSurface = Split("""
   makeVtkSurface.cpp
""")

mergeVertices = Split("""
   mergeVertices.cpp
""")

meshViewer = Split("""
   meshViewer.cpp
""")

moveFieldToPointData = Split("""
   moveFieldToPointData.cpp
""")

removeVtkCellsOutsideBox = Split("""
   removeVtkCellsOutsideBox.cpp
""")

removeVtkPointData = Split("""
   removeVtkPointData.cpp
""")

scaleVTK = Split("""
   scaleVTK.cpp
""")

transformVTK = Split("""
   transformVTK.cpp 
""")

whatIsScalarRange = Split("""
   whatIsScalarRange.cpp
""")

env = ves_pkg.getEnv().Copy()
##env.Append(CPPPATH = [os.getcwd()])
env.Append(LIBS = ['VE_UtilLib'])
##env.Append(CPPPATH = [pj('#', 'VE_Builder', 'Translator')])
##env.Append(CPPPATH = ['#'])
env.ParseConfig('flagpoll vtk Boost.Filesystem --libs --cflags')

norm2poly = ves_pkg.createProgram('addNormals2Poly', env, 'bin')
norm2poly.addSources( addNormals2Poly )
norm2poly.build()

append = ves_pkg.createProgram('appendVTK', env, 'bin')
append.addSources( appendVTK )
append.build()

fluentPart = ves_pkg.createProgram('combineFluentParticleFile', env, 'bin')
fluentPart.addSources( combineFluentParticleFile )
fluentPart.build()

comparScal = ves_pkg.createProgram('compareScalars', env, 'bin')
comparScal.addSources( compareScalars )
comparScal.build()

cel2point = ves_pkg.createProgram('convertCellDataToPointData', env, 'bin')
cel2point.addSources( convertCellDataToPointData )
cel2point.build()

surf2stl = ves_pkg.createProgram('convertSurfaceFileToStl', env, 'bin')
surf2stl.addSources( convertSurfaceFileToStl )
surf2stl.build()

vtk2ascii = ves_pkg.createProgram('convertVTK2Ascii', env, 'bin')
vtk2ascii.addSources( convertVTK2Ascii )
vtk2ascii.build()

vtk2bin = ves_pkg.createProgram('convertVTK2Binary', env, 'bin')
vtk2bin.addSources( convertVTK2Binary )
vtk2bin.build()

mini = ves_pkg.createProgram('createMiniFlowdata', env, 'bin')
mini.addSources( createMiniFlowdata )
mini.build()

vtkSurf = ves_pkg.createProgram('makeVtkSurface', env, 'bin')
vtkSurf.addSources( makeVtkSurface )
vtkSurf.build()

merge = ves_pkg.createProgram('mergeVertices', env, 'bin')
merge.addSources( mergeVertices )
merge.build()

mesh = ves_pkg.createProgram('meshViewer', env, 'bin')
mesh.addSources( meshViewer )
mesh.build()

fieldData = ves_pkg.createProgram('moveFieldToPointData', env, 'bin')
fieldData.addSources( moveFieldToPointData )
fieldData.build()

removeCells = ves_pkg.createProgram('removeVtkCellsOutsideBox', env, 'bin')
removeCells.addSources( removeVtkCellsOutsideBox )
removeCells.build()

removePoint = ves_pkg.createProgram('removeVtkPointData', env, 'bin')
removePoint.addSources( removeVtkPointData )
removePoint.build()

scale = ves_pkg.createProgram('scaleVTK', env, 'bin')
scale.addSources( scaleVTK )
scale.build()

trans = ves_pkg.createProgram('transformVTK', env, 'bin')
trans.addSources( transformVTK )
trans.build()

scaleRange = ves_pkg.createProgram('whatIsScalarRange', env, 'bin')
scaleRange.addSources( whatIsScalarRange )
scaleRange.build()
