##Builds a multitude of utilities
import os, sys, string
pj = os.path.join

Import('baseEnv')
Import('cfdHostType')

addNormals2Poly = Split("""
   addNormals2Poly.cpp
""")

appendVTK = Split("""
   appendVTK.cpp
""")

combineFluentParticleFile = Split("""
   CombinePartFiles.cpp
""")

compareScalars = Split("""
    compareScalars.cpp
""")

convertCellDataToPointData = Split("""
   convertCellDataToPointData.cpp
""")

convertSurfaceFileToStl = Split("""
   convertSurfaceFileToStl.cpp 
""")

convertVTK2Ascii = Split("""
   convertVTK2Ascii.cpp
""")

convertVTK2Binary = Split("""
   convertVTK2Binary.cpp
""")

createMiniFlowdata = Split("""
   createMiniFlowdata.cpp
""")

makeVtkSurface = Split("""
   makeVtkSurface.cpp
""")

mergeVertices = Split("""
   mergeVertices.cpp
""")

meshViewer = Split("""
   meshViewer.cpp
""")

moveFieldToPointData = Split("""
   moveFieldToPointData.cpp
""")

removeVtkCellsOutsideBox = Split("""
   removeVtkCellsOutsideBox.cpp
""")

removeVtkPointData = Split("""
   removeVtkPointData.cpp
""")

scaleVTK = Split("""
   scaleVTK.cpp
""")

transformVTK = Split("""
   transformVTK.cpp 
""")

whatIsScalarRange = Split("""
   whatIsScalarRange.cpp
""")

env = baseEnv.Copy()
##env.Append(CPPPATH = [os.getcwd()])
env.Append(LIBS = ['VE_UtilLib'])
##env.Append(CPPPATH = [pj('#', 'VE_Builder', 'Translator')])
##env.Append(CPPPATH = ['#'])
env.ParseConfig('flagpoll vtk Boost.Filesystem --libs --cflags')

env.Program(pj( env[ 'BINDIR' ],'addNormals2Poly'), source = addNormals2Poly)
env.Program(pj( env[ 'BINDIR' ],'appendVTK'), source = appendVTK)
env.Program(pj( env[ 'BINDIR' ],'combineFluentParticleFile'), source = combineFluentParticleFile)
env.Program(pj( env[ 'BINDIR' ],'compareScalars'), source = compareScalars)
env.Program(pj( env[ 'BINDIR' ],'convertCellDataToPointData'), source = convertCellDataToPointData)
env.Program(pj( env[ 'BINDIR' ],'convertSurfaceFileToStl'), source = convertSurfaceFileToStl)
env.Program(pj( env[ 'BINDIR' ],'convertVTK2Ascii'), source = convertVTK2Ascii)
env.Program(pj( env[ 'BINDIR' ],'convertVTK2Binary'), source = convertVTK2Binary)
env.Program(pj( env[ 'BINDIR' ],'createMiniFlowdata'), source = createMiniFlowdata)
env.Program(pj( env[ 'BINDIR' ],'makeVtkSurface'), source = makeVtkSurface)
env.Program(pj( env[ 'BINDIR' ],'mergeVertices'), source = mergeVertices)
env.Program(pj( env[ 'BINDIR' ],'meshViewer'), source = meshViewer)
env.Program(pj( env[ 'BINDIR' ],'moveFieldToPointData'), source = moveFieldToPointData)
env.Program(pj( env[ 'BINDIR' ],'removeVtkCellsOutsideBox'), source = removeVtkCellsOutsideBox)
env.Program(pj( env[ 'BINDIR' ],'removeVtkPointData'), source = removeVtkPointData)
env.Program(pj( env[ 'BINDIR' ],'scaleVTK'), source = scaleVTK)
env.Program(pj( env[ 'BINDIR' ],'transformVTK'), source = transformVTK)
env.Program(pj( env[ 'BINDIR' ],'whatIsScalarRange'), source = whatIsScalarRange)
