##Builds vtkTo3DTexture
import os, sys, string
pj = os.path.join

Import('baseEnv ves_pkg LIBDIR GetPlatform vtk_options buildDir wxwidgets_options PREFIX')

srcs = Split("""
   flowTexture.cpp 
   tcApp.cpp
   tcFrame.cpp 
   textureCreator.cpp
""")
##srcs = map(lambda s: pj('#', 'VE_Builder', 'vtkTo3DTexture', 'tcGUI', s), srcs)

env = ves_pkg.getEnv().Copy()
env.Append(LIBPATH = [pj('#', buildDir, 'VE_Xplorer','Utilities')],
            LIBS = ['VE_UtilLib'])
env.ParseConfig('flagpoll Boost.Filesystem --libs --cflags')
wxwidgets_options.apply( env )
vtk_options.apply( env )
prog = ves_pkg.createProgram('vtkTo3DTexture', env, 'bin')
prog.addSources( srcs )
prog.build()

if GetPlatform() == "darwin":
   idlCmd = '/Developer/Tools/Rez -d __DARWIN__ -t APPL Carbon.r -o ${SOURCE}'
   bld = Builder(action = idlCmd )
   env.Append(BUILDERS = {'apple_rez': bld})
   if 'install' in COMMAND_LINE_TARGETS:
      conductorTarget = pj(PREFIX,'bin','Texture')
      winTarget = pj(PREFIX,'bin','vtkTo3DTexture')
   else:
      conductorTarget = pj( '#', buildDir,'VE_Builder','vtkTo3DTexture','tcGUI','Texture')
      winTarget = pj( '#',buildDir,'VE_Builder','vtkTo3DTexture','tcGUI','vtkTo3DTexture')

   env.apple_rez( conductorTarget, winTarget)
   env.AddPostAction( conductorTarget,Copy('$TARGET','$SOURCE'))
