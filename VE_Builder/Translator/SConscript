import os, sys, string
pj = os.path.join

Import('baseEnv')
Import('Platform')

srcs = Split("""
   translateToVtk.cxx
   starReader.cxx
   avsReader.cxx
   reiReader.cxx
   en7Reader.cxx
   mfixReader.cxx
   converter.cxx
   gridConversion.cxx
   viewCells.cxx
   fireReader.cxx
   cfdGrid2Surface.cxx
   particle.cxx
   fluentParticles.cxx
   reiParticles.cxx
   plot3dReader.cxx
   jdMAPReader.cxx
   enSightGoldReader.cxx
   ansysReader.cxx
   ansysReader10.cxx
   tecplotReader.cxx
   vtkCleanUnstructuredGrid.cxx
""")
## REMOVED: vtkEnSightFortranBinaryReader.cxx

srcs = map(lambda s: pj('#', 'VE_Builder', 'Translator', s), srcs)

env = baseEnv.Copy()
##env.Append(CPPPATH = [os.getcwd()])
env.Append(CPPPATH = ['#/VE_Builder/Utilities'])
env.Append(LIBPATH = '#',
              LIBS = 'VE_UtilLib')

for lib in vtk:
   env.Append(LIBS = lib)
for lib in boost:
   env.Append(LIBS = lib)
env.ParseConfig( 'flagpoll vtk --cflags --libs' )
env.Program(pj('#','bin',Platform,'Translator'), source = srcs)
