import os, sys, string
pj = os.path.join

Import('baseEnv')
Import('Platform')

srcs = Split("""
	translateToVtk.cpp
   starReader.cpp
   avsReader.cpp
   reiReader.cpp
   en7Reader.cpp
   mfixReader.cpp
   converter.cpp
   gridConversion.cpp
   viewCells.cpp
   fireReader.cpp
   cfdGrid2Surface.cpp
   particle.cpp
   fluentParticles.cpp
   reiParticles.cpp
   plot3dReader.cpp
   jdMAPReader.cpp
   enSightGoldReader.cpp
   ansysReader.cpp
   ansysReader10.cpp
   tecplotReader.cpp
   vtkCleanUnstructuredGrid.cxx
""")
## REMOVED: vtkEnSightFortranBinaryReader.cxx

srcs = map(lambda s: pj('#', 'VE_Builder', 'Translator', s), srcs)

env = baseEnv.Copy()
##env.Append(CPPPATH = [os.getcwd()])
env.Append(CPPPATH = ['#'])
env.Append(CPPPATH = ['#/VE_Builder/Utilities'])
env.Append(LIBPATH = '#',
              LIBS = 'VE_UtilLib')

for lib in vtk:
   env.Append(LIBS = lib)
for lib in boost:
   env.Append(LIBS = lib)
env.ParseConfig( 'flagpoll vtk --cflags --libs' )
env.Program(pj('#','bin',Platform,'Translator'), source = srcs)
