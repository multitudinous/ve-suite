##Builds DataLoaderLib
import os, sys, string
pj = os.path.join

Import('baseEnv')
Import('libPath')

srcs = Split("""
    DataLoader.cxx
    EnSightTranslator.cxx
    AVSTranslator.cxx
    cfdDICOMTranslator.cxx
    cfdREITranslator.cxx
    converter.cpp
    gridConversion.cxx
    plot3dReader.cxx
    StarCDTranslator.cxx
    starReader.cxx
    AnsysTranslator.cxx
    ansysReader.cxx
""")

if os.getenv('FLUENT_MFIX') == 'TRUE':
    srcs.Append('FluentTranslator.cxx')
    srcs.Append('MFIXTranslator.cxx')
    env.Append(CXXFLAGS = ['-DFLUENT_MFIX'])
##srcs = map(lambda s: pj('#', 'VE_Builder', 'Translator', 'DataLoader', s), srcs)

env = baseEnv.Copy()
##env.Append(CPPPATH = [os.getcwd()])
env.Append(LIBS = ['VE_UtilLib', 'TranslatorToVTKLib'])
env.ParseConfig('flagpoll vtk Boost.Filesystem --libs --cflags')

targetLib = pj(libPath, 'DataLoaderLib')
env.SharedLibrary(target = targetLib, source = srcs)
