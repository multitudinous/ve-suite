#!/bin/sh -f
 
# Set environment variables and paths for running the program
export VE_SUITE_HOME=/Volumes/data/TSVEG/VE_Suite

# Set the TAO nameServer properties used by the run scripts
export TAO_MACHINE=localhost
export TAO_PORT=1236

source ${VE_SUITE_HOME}/VE_Installer/setup.NETL.sh

export MY_VJCONFIGS=/nfs/scratch/FutureGenPowerPlant/jugglerConfigs/Dougs

case $1 in
  
  -sim)
    project_tao_osg_vep \
    -ORBInitRef NameService=corbaloc:iiop:${TAO_MACHINE}:${TAO_PORT}/NameService \
    ${VE_SUITE_HOME}/VE_Xplorer/stereo_desktop/desktop.jconf -VESDesktop 1440 900
    ;;

  -wall)
    project_cluster_tao_osg \
    -ORBInitRef NameService=corbaloc:iiop:${TAO_MACHINE}:${TAO_PORT}/NameService \
    ${MY_VJCONFIGS}/ids.jconf
  ;;

  -nserv)
    killall  Naming_Service 
    killall  Exe_server 
    echo Starting TAO Naming Service on $TAO_MACHINE, port $TAO_PORT
    Naming_Service -ORBEndPoint iiop://${TAO_MACHINE}:${TAO_PORT} &
#/hostname_in_ior=lars.netl.doe.gov &
#-ORBDebug -ORBDebugLevel 10 -ORBEndPoint iiop://ids7.scilan:54 &
    sleep 5
    echo TAO Naming Service Started
    echo Starting VE-CE...
    Exe_server \#-ORBEndPoint iiop://ids7.scilan:57/hostname_in_ior=lars.netl.doe.gov \
    -ORBInitRef NameService=corbaloc:iiop:${TAO_MACHINE}:${TAO_PORT}/NameService &#-ORBDebug -ORBDebugLevel 10 &
  ;;
  
  -shutdown)
    killall Naming_Service 
    killall Exe_server 
  ;;

  -menu)
    WinClient \
    -ORBInitRef NameService=corbaloc:iiop:${TAO_MACHINE}:${TAO_PORT}/NameService -VESDesktop
  ;;

  -surface)
    makeVtkSurface
  ;;

  -preproc)
    preprocessor
  ;;

  -surf2stl)
    convertSurfaceFileToStl
  ;;

  -transVTK)
    transformVTK
  ;;

  -cfd2VTK)
    translateToVtk
  ;;

  -make)
    cd ${VE_SUITE_HOME}/VE_Installer
    gmake
  ;;
  
  -makeclean)
    cd ${VE_SUITE_HOME}/VE_Installer
    gmake clean
    gmake cleandepend
  ;;
  
  -merge)
    mergeVertices
  ;;

  -meshView)
    meshViewer
  ;;

  -scalRange)
    whatIsScalarRange
  ;;

  -doc)
    mozilla file:///${VE_SUITE_HOME}/docs/starcd/initial.htm &
  ;;
 
  -texture)
    vtkTo3DTexture
  ;;

  -h)
  
  echo ""
  echo Usage:
  echo VES.inl [ options ] 
  echo "         "-h = usage information "(this page)"
  echo The following indicates the workflow of getting the cfd data into the viewer.
  echo "   "-cfd2VTK = translate cfd flowdata to VTK format
  echo "     "-merge = merge vertices in unstructured grid
  echo "   "-preproc = precompute cutting planes
  echo This will start the viewer using the specified display
  echo "       "-sim = sim mode desktop display
  echo "      "-wall = run the display wall in Bay 5
  echo When the viewer has started, start the menu in another shell
  echo "      "-menu = start wxWidgets menu to control viewer
  echo The following utilities might be useful occasionaly
  echo "     "-nserv = restart TAO nameserver and VE-CE
  echo "   "-surface = make VTK surface from fluid mesh
  echo "  "-surf2stl = convert surface file to stl
  echo "  "-transVTK = move flowdata to align with geometry
  echo "      "-make = make all VE-Suite modules
  echo " "-makeclean = clean all VE-Suite modules
  echo "  "-meshView = view any vtk file
  echo " "-scalRange = view scalar range of any vtk file
  echo "       "-doc = view documentation for setting up a CFD post process case
  echo "  "-shutdown = shutdown VE-CE and TAO NameService
  echo "   "-texture = tool to create 3D textures
  echo ""
  ;;

  *)
   echo Use -h for help
   ;;
 
esac
