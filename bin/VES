#!/usr/bin/tcsh -f

# Set environment variables and paths for running the program
source /isv/VE_Suite/20050107/VE_Installer/setup.deere.tsh
# Set additional environment variables
setenv MY_VJCONFIGS /isv/Juggler/deere.config/vrj2.0b1
#cp ${VE_SUITE_HOME}/VE_Conductor/class_files/config/${HOST}.comm.config ${VE_SUITE_HOME}/VE_Conductor/class_files/config/comm.config
#setenv OMNIORB_CONFIG ${MY_VJCONFIGS}/${HOST}.omniORB4.cfg
#setenv OMNINAMES_LOGDIR ${OMNI_HOME}/logs
#setenv PFNFYLEVEL 5
#setenv VPR_DEBUG_NFY_LEVEL 2
#setenv VPR_DEBUG_ENABLE 1

# set based on where you are running in deere
setenv TAO_MACHINE `host ${HOST} | awk '{print $1}'`
setenv TAO_PORT 1235

switch ($1)

  case -c:
    sgi_use_anyaddr \
    ${VE_SUITE_HOME}/bin/${CFDHOSTTYPE}/project_tao -ORBInitRef NameService=corbaloc:iiop:${TAO_MACHINE}:${TAO_PORT}/NameService \
    ${MY_VJCONFIGS}/${HOST}.base.jconf \
    ${MY_VJCONFIGS}/${HOST}.displays.closed.jconf \
    ${MY_VJCONFIGS}/${HOST}.mstar.jconf \
    ${MY_VJCONFIGS}/rfwand.jconf 
  breaksw
  
  case -cf:
    sgi_use_anyaddr \
    ${VE_SUITE_HOME}/bin/${CFDHOSTTYPE}/project_tao -ORBInitRef NameService=corbaloc:iiop:${TAO_MACHINE}:${TAO_PORT}/NameService \
    ${MY_VJCONFIGS}/${HOST}.base.jconf \
    ${MY_VJCONFIGS}/${HOST}.displays.closed.jconf \
    ${MY_VJCONFIGS}/${HOST}.mstar.headless.jconf \
    ${MY_VJCONFIGS}/rfwand.jconf 
  breaksw
  
  case -d:
    sgi_use_anyaddr \
    ${VE_SUITE_HOME}/bin/${CFDHOSTTYPE}/project_tao -ORBInitRef NameService=corbaloc:iiop:${TAO_MACHINE}:${TAO_PORT}/NameService \
    ${MY_VJCONFIGS}/sim.base.jconf \
    ${MY_VJCONFIGS}/sim.wand.mixin.jconf 
  breaksw
  
  case -o:
    sgi_use_anyaddr \
    ${VE_SUITE_HOME}/bin/${CFDHOSTTYPE}/project_tao -ORBInitRef NameService=corbaloc:iiop:${TAO_MACHINE}:${TAO_PORT}/NameService \
    ${MY_VJCONFIGS}/${HOST}.base.jconf \
    ${MY_VJCONFIGS}/${HOST}.displays.open.jconf \
    ${MY_VJCONFIGS}/${HOST}.mstar.jconf \
    ${MY_VJCONFIGS}/rfwand.jconf 
  breaksw
  
  case -of:
    sgi_use_anyaddr \
    ${VE_SUITE_HOME}/bin/${CFDHOSTTYPE}/project_tao -ORBInitRef NameService=corbaloc:iiop:${TAO_MACHINE}:${TAO_PORT}/NameService \
    ${MY_VJCONFIGS}/${HOST}.base.jconf \
    ${MY_VJCONFIGS}/${HOST}.displays.open.jconf \
    ${MY_VJCONFIGS}/${HOST}.mstar.headless.jconf \
    ${MY_VJCONFIGS}/rfwand.jconf 
  breaksw
  
  case -nserv:
	killall Naming_Service 
	killall Exe_server 
   echo Starting TAO Naming Service...
	${TAO_HOME}/IRIX32/bin/Naming_Service -ORBEndPoint iiop://${TAO_MACHINE}:${TAO_PORT} &
	sleep 5
   echo TAO Naming Service Started
   echo Starting VE-CE...
	Exe_server -ORBInitRef NameService=corbaloc:iiop:${TAO_MACHINE}:${TAO_PORT}/NameService &
  breaksw
  
  case -shutdown:
	killall Naming_Service 
	killall Exe_server 
  breaksw
  
  case -menu:
    WinClient -ORBInitRef NameService=corbaloc:iiop:${TAO_MACHINE}:${TAO_PORT}/NameService
  breaksw

  case -surface:
    ${VE_SUITE_HOME}/bin/${CFDHOSTTYPE}/makeVtkSurface
  breaksw

  case -preproc:
    ${VE_SUITE_HOME}/bin/${CFDHOSTTYPE}/preprocessor
  breaksw

  case -surf2stl:
    ${VE_SUITE_HOME}/bin/${CFDHOSTTYPE}/convertSurfaceFileToStl
  breaksw

  case -transVTK:
    ${VE_SUITE_HOME}/bin/${CFDHOSTTYPE}/transformVTK
  breaksw

  case -cfd2VTK:
    ${VE_SUITE_HOME}/bin/${CFDHOSTTYPE}/translateToVtk
  breaksw

  case -make:
    cd ${VE_SUITE_HOME}/VE_Installer
    gmake
  breaksw
  
  case -makeclean:
    cd ${VE_SUITE_HOME}/VE_Installer
    gmake clean
    gmake cleandepend
  breaksw
  
  case -merge:
    ${VE_SUITE_HOME}/bin/${CFDHOSTTYPE}/mergeVertices
  breaksw

  case -meshView:
    ${VE_SUITE_HOME}/bin/${CFDHOSTTYPE}/meshViewer
  breaksw

  case -scalRange:
    ${VE_SUITE_HOME}/bin/${CFDHOSTTYPE}/whatIsScalarRange
  breaksw

  case -doc:
        netscape file://${VE_SUITE_HOME}/docs/starcd/initial.htm &
  breaksw

  case -h:
  default:
  echo ""
  echo Usage:
  echo VES [ options ] 
  echo "         "-h = usage information
  echo The following indicates the workflow of getting the cfd data into the viewer.
  echo "   "-cfd2VTK = translate cfd flowdata to VTK format
  echo "     "-merge = merge vertices in unstructured grid
  echo "   "-preproc = precompute cutting planes
  echo This will start the viewer using the specified display
  echo "         "-c = cave display
  echo "        "-cf = cave display with fixed viewpoints
  echo "         "-d = desktop display
  echo "         "-o = wall display
  echo "        "-of = wall display with fixed viewpoints
  echo When the viewer has started, start the menu in another shell
  echo "      "-menu = start java menu to control viewer
  echo The following utilities might be useful occasionaly
  echo "     "-nserv = start corba server for menu
  echo "   "-surface = make VTK surface from fluid mesh
  echo "  "-surf2stl = convert surface file to stl
  echo "  "-transVTK = move flowdata to align with geometry
  echo "      "-make = make all VE-Suite modules
  echo " "-makeclean = clean all VE-Suite modules
  echo "     "-merge = merge vertices of vtk dataset
  echo "  "-meshView = view any vtk file
  echo " "-scalRange = view scalar range of any vtk file
  echo "       "-doc = view documentation for setting up a CFD post process case
  echo "  "-shutdown = shutdown VE-CE and TAO NameService
  echo ""
  
endsw


