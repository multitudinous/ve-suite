##Builds WinClient program
import os, sys, string
pj = os.path.join

Import('baseEnv')
Import('cfdHostType')
Import('GetPlatform')

srcs = Split("""
   App.cpp 
   Avail_Modules.cpp
    DataSetLoaderUI.cxx
   Frame.cpp 
   Network.cpp 
   NavigationPane.cxx 
   paraThread.cpp 
   PluginLoader.cpp 
   SoundsPane.cpp 
   ViewLocPane.cxx
    TBToolBar.cxx
    TransformUI.cxx
    vistab.cpp
    vectors.cpp
    advancedvectors.cpp
    contours.cpp
    advancedcontours.cpp
    streamlines.cpp
    advancedstreamlines.cpp
    isosurfaces.cpp
    polydata.cpp
    ScalarToolsDlg.cxx
   UI_TeacherTab.cpp
   UI_TransientDialog.cxx
   UserPreferences.cxx
""")

env = baseEnv.Copy()
env.Append(LIBS = ['VE_ConductorLib', 'GUIPluginLib', 'VE_XMLLib', 'VE_ModelLib',
                   'VE_CADLib', 'VE_ShaderLib', 'VE_Conductor_UtilitiesLib',
                   'VE_OpenModuleLib'])

env.ParseConfig( 'wx-config --cxxflags --libs' )
env.ParseConfig('flagpoll TAO xerces ACE TAO_IORInterceptor TAO_ObjRefTemplate TAO_Valuetype \
                              TAO_CosNaming TAO_Svc_Utils TAO_IORTable TAO_Messaging \
                              TAO_PortableServer TAO_BiDirGIOP TAO_AnyTypeCode --cflags --libs')

env.Program(pj( env[ 'BINDIR' ],'WinClient'), source = srcs)

if GetPlatform() == "darwin":
   conductorTarget = pj( env[ 'BINDIR' ],'Conductor')
   winTarget = pj( env[ 'BUILDDIR' ], 'bin', 'WinClient')
   target = [ conductorTarget ]
   idlCmd = '/Developer/Tools/Rez -d __DARWIN__ -t APPL Carbon.r -o '
   srcs = [ winTarget ]
   idlFile = [idlCmd + srcs[0]]
   for i in range(len(idlFile)):
      bld = Builder(action = idlFile[i])
      env.Append(BUILDERS = {'apple_rez': bld})
      env. apple_rez(target[i], list())
