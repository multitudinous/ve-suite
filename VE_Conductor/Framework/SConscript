##Builds WinClient program
import os, sys, string
pj = os.path.join

Import('baseEnv ves_pkg LIBDIR GetPlatform buildDir xerces_options wxwidgets_options PREFIX')

srcs = Split("""
   App.cpp 
   Avail_Modules.cpp
   DataSetLoaderUI.cxx
   Frame.cpp 
   Network.cpp 
   DeviceProperties.cpp 
   NavigationPane.cxx 
   paraThread.cpp 
   PluginLoader.cpp 
   SoundsPane.cpp 
   ViewLocPane.cxx
   TBToolBar.cxx
   TransformUI.cxx
   vistab.cpp
   vectors.cpp
   advancedvectors.cpp
   contours.cpp
   advancedcontours.cpp
   streamlines.cpp
   advancedstreamlines.cpp
   isosurfaces.cpp
   polydata.cpp
   ScalarToolsDlg.cxx
   UI_TeacherTab.cpp
   UI_TransientDialog.cxx
   UserPreferences.cxx
""")

env = ves_pkg.getEnv().Copy()
env.Append(LIBS = ['VE_ConductorLib', 'GUIPluginLib', 'VE_XMLLib', 'VE_ModelLib',
                   'VE_CADLib', 'VE_ShaderLib', 'VE_Conductor_UtilitiesLib',
                   'VE_OpenModuleLib'])
env.Append(LIBPATH = [pj('#', buildDir, 'VE_Conductor','Network'),
                        pj('#', buildDir, 'VE_Conductor','Utilities'),
                        pj('#', buildDir, 'VE_Conductor','GUIPlugin'),
                        pj('#', buildDir, 'VE_Open','skel'),
                        pj('#', buildDir, 'VE_Open','XML'),
                        pj('#', buildDir, 'VE_Open','XML','Model'),
                        pj('#', buildDir, 'VE_Open','XML','CAD'),
                        pj('#', buildDir, 'VE_Open','XML','Shader')])

env.ParseConfig('flagpoll TAO ACE TAO_IORInterceptor TAO_ObjRefTemplate TAO_Valuetype \
                              TAO_CosNaming TAO_Svc_Utils TAO_IORTable TAO_Messaging \
                              TAO_PortableServer TAO_BiDirGIOP TAO_AnyTypeCode TAO_Messaging --cflags --libs')
xerces_options.apply( env )
wxwidgets_options.apply( env )
prog = ves_pkg.createProgram('WinClient', env, 'bin')
prog.addSources( srcs )
prog.build()

if GetPlatform() == "darwin":
   idlCmd = '/Developer/Tools/Rez -d __DARWIN__ -t APPL Carbon.r -o ${SOURCE}'
   bld = Builder(action = idlCmd )
   env.Append(BUILDERS = {'apple_rez': bld})
   if 'install' in COMMAND_LINE_TARGETS:
      conductorTarget = pj(PREFIX,'bin','Conductor')
      winTarget = pj(PREFIX,'bin','WinClient')
   else:
      conductorTarget = pj( '#', buildDir,'VE_Conductor','Framework','Conductor')
      winTarget = pj( '#',buildDir,'VE_Conductor','Framework','WinClient')

   env.apple_rez( conductorTarget, winTarget)
   env.AddPostAction( conductorTarget,Copy('$TARGET','$SOURCE'))
