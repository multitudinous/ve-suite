/////////////////////////////////////////////////////////////////////////////
// Name:        vistab.cpp
// Purpose:     
// Author:      Jared Abodeely
// Modified by: 
// Created:     17/04/2006 16:26:41
// RCS-ID:      
// Copyright:   
// Licence:     
/////////////////////////////////////////////////////////////////////////////

// Generated by DialogBlocks (unregistered), 17/04/2006 16:26:41


////@begin includes
#include "VE_Conductor/Framework/TBToolBar.h"
////@end includes

#include "VE_Conductor/Framework/vistab.h"
#include <wx/sizer.h>
#include <wx/checkbox.h>
#include <wx/radiobox.h>
#include <wx/radiobut.h>
#include <wx/slider.h>
#include <wx/icon.h>
#include <wx/statbmp.h>
#include <wx/combobox.h>
#include <wx/listbox.h>
#include <iostream>
////@begin XPM images
#include "VE_Conductor/Framework/vector.xpm"
#include "VE_Conductor/Framework/contour.xpm"
////@end XPM images

/*!
 * Vistab type definition
 */

//IMPLEMENT_DYNAMIC_CLASS( Vistab, wxDialog )

/*!
 * Vistab event table definition
 */

BEGIN_EVENT_TABLE( Vistab, wxDialog )
////@begin Vistab event table entries
   EVT_TOOL     (CONTOUR_BUTTON,    Vistab::_onContour)
   EVT_TOOL     (VECTOR_BUTTON,     Vistab::_onVector)
   EVT_TOOL     (STREAMLINE_BUTTON, Vistab::_onStreamline)
   EVT_TOOL     (ISOSURFACE_BUTTON, Vistab::_onIsosurface)
   EVT_TOOL     (TEXTURE_BASED_BUTTON, Vistab::_onTextureBased)
////@end Vistab event table entries
END_EVENT_TABLE()

/*!
 * Vistab constructors
 */

Vistab::Vistab(VjObs_ptr veEngine, VE_XML::DOMDocumentManager* domManagerIn)
:wxDialog(NULL,-1, wxString("Visualization Tab"), 
		wxDefaultPosition, wxDefaultSize, 
      (wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX) & ~ wxSTAY_ON_TOP)
{
   wxSize displaySize = ::wxGetDisplaySize();
   wxRect dialogPosition( displaySize.GetWidth()-427, 20, 427, 400 );
   this->SetSize( dialogPosition );

   xplorerPtr = VjObs::_duplicate( veEngine );
   domManager = domManagerIn;
   _tbTools = 0;

   CreateControls();
}
/*
Vistab::Vistab( wxWindow* parent, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style )
{
    Create(parent, id, caption, pos, size, style);
}
*/
/*!
 * Vistab creator
 */

bool Vistab::Create( wxWindow* parent, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style )
{
////@begin Vistab member initialisation
////@end Vistab member initialisation

////@begin Vistab creation
    SetExtraStyle(GetExtraStyle()|wxWS_EX_BLOCK_EVENTS);
    wxDialog::Create( parent, id, caption, pos, size, style );

    CreateControls();
    GetSizer()->Fit(this);
    GetSizer()->SetSizeHints(this);
    Centre();
////@end Vistab creation
    return true;
}

/*!
 * Control creation for Vistab
 */

void Vistab::CreateControls()
{    
////@begin Vistab content construction
    // Generated by DialogBlocks, Wed 26 Apr 2006 18:52:50 CDT (unregistered)

    Vistab* itemDialog1 = this;

    wxBoxSizer* itemBoxSizer2 = new wxBoxSizer(wxVERTICAL);
    itemDialog1->SetSizer(itemBoxSizer2);

    wxToolBar* itemToolBar3 = new wxToolBar( itemDialog1, ID_TOOLBAR, wxDefaultPosition, wxDefaultSize, wxTB_HORIZONTAL );
    itemToolBar3->SetToolBitmapSize(wxSize(45, 30));

    wxBitmap itemtool4Bitmap(contour_xpm);
    wxBitmap itemtool4BitmapDisabled;
    itemToolBar3->AddTool(CONTOUR_BUTTON, _T(""), itemtool4Bitmap, itemtool4BitmapDisabled, wxITEM_RADIO, _T("Scalar Contours"), wxEmptyString);

    wxBitmap itemtool5Bitmap(vector_xpm);
    wxBitmap itemtool5BitmapDisabled;
    itemToolBar3->AddTool(VECTOR_BUTTON, _T(""), itemtool5Bitmap, itemtool5BitmapDisabled, wxITEM_RADIO, _T("Vectors"), wxEmptyString);

    wxBitmap itemtool6Bitmap(vector_xpm);
    wxBitmap itemtool6BitmapDisabled;
    itemToolBar3->AddTool(STREAMLINE_BUTTON, _T(""), itemtool6Bitmap, itemtool6BitmapDisabled, wxITEM_RADIO, _T("Streamlines"), wxEmptyString);

    wxBitmap itemtool7Bitmap(vector_xpm);
    wxBitmap itemtool7BitmapDisabled;
    itemToolBar3->AddTool(ISOSURFACE_BUTTON, _T(""), itemtool7Bitmap, itemtool7BitmapDisabled, wxITEM_RADIO, _T("Isosurfaces"), wxEmptyString);

    wxBitmap itemtool8Bitmap(vector_xpm);
    wxBitmap itemtool8BitmapDisabled;
    itemToolBar3->AddTool(TEXTURE_BASED_BUTTON, _T(""), itemtool8Bitmap, itemtool8BitmapDisabled, wxITEM_RADIO, _T("Texture Based"), wxEmptyString);

    itemToolBar3->Realize();
    itemBoxSizer2->Add(itemToolBar3, 1, wxALIGN_CENTER_HORIZONTAL|wxALL, 5);

    wxBoxSizer* itemBoxSizer10 = new wxBoxSizer(wxHORIZONTAL);
    itemBoxSizer2->Add(itemBoxSizer10, 0, wxGROW|wxALL, 5);

    wxString itemComboBox11Strings[] = {
        _T("DataSet1"),
        _T("DataSet2"),
        _T("DataSet3")
    };
    wxComboBox* itemComboBox11 = new wxComboBox( itemDialog1, ID_COMBOBOX, _T(""), wxDefaultPosition, wxDefaultSize, 3, itemComboBox11Strings, wxCB_DROPDOWN );
    if (ShowToolTips())
        itemComboBox11->SetToolTip(_T("Data Sets"));
    itemBoxSizer10->Add(itemComboBox11, 1, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxString itemComboBox12Strings[] = {
        _T("DataSet1"),
        _T("DataSet2"),
        _T("DataSet3")
    };
    wxComboBox* itemComboBox12 = new wxComboBox( itemDialog1, ID_COMBOBOX1, _T(""), wxDefaultPosition, wxDefaultSize, 3, itemComboBox12Strings, wxCB_DROPDOWN );
    itemBoxSizer10->Add(itemComboBox12, 1, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxBoxSizer* itemBoxSizer11 = new wxBoxSizer(wxHORIZONTAL);
    itemBoxSizer2->Add(itemBoxSizer11, 0, wxGROW|wxALL, 5);

    wxStaticBox* itemStaticBoxSizer12Static = new wxStaticBox(itemDialog1, wxID_ANY, _T("Scalars"));
    wxStaticBoxSizer* itemStaticBoxSizer12 = new wxStaticBoxSizer(itemStaticBoxSizer12Static, wxHORIZONTAL);
    itemBoxSizer11->Add(itemStaticBoxSizer12, 1, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxString itemListBox13Strings[] = {
        _T("DataSet1"),
        _T("DataSet2"),
        _T("DataSet3")
    };
    wxListBox* itemListBox13 = new wxListBox( itemDialog1, ID_LISTBOX, wxDefaultPosition, wxSize(125, -1), 3, itemListBox13Strings, wxLB_SINGLE );
    itemStaticBoxSizer12->Add(itemListBox13, 1, wxGROW|wxALL, 5);

    wxStaticBox* itemStaticBoxSizer14Static = new wxStaticBox(itemDialog1, wxID_ANY, _T("Vectors"));
    wxStaticBoxSizer* itemStaticBoxSizer14 = new wxStaticBoxSizer(itemStaticBoxSizer14Static, wxHORIZONTAL);
    itemBoxSizer11->Add(itemStaticBoxSizer14, 1, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxString itemListBox15Strings[] = {
        _T("DataSet1"),
        _T("DataSet2"),
        _T("DataSet3")
    };
    wxListBox* itemListBox15 = new wxListBox( itemDialog1, ID_LISTBOX1, wxDefaultPosition, wxSize(125, -1), 3, itemListBox15Strings, wxLB_SINGLE );
    itemStaticBoxSizer14->Add(itemListBox15, 1, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxStaticText* itemStaticText16 = new wxStaticText( itemDialog1, wxID_STATIC, _T("Max%"), wxDefaultPosition, wxDefaultSize, wxALIGN_CENTRE );
    itemBoxSizer2->Add(itemStaticText16, 0, wxALIGN_LEFT|wxLEFT|wxRIGHT|wxTOP|wxADJUST_MINSIZE, 5);

    wxSlider* itemSlider17 = new wxSlider( itemDialog1, ID_SLIDER, 100, 0, 100, wxDefaultPosition, wxSize(300, -1), wxSL_HORIZONTAL|wxSL_LABELS );
    itemBoxSizer2->Add(itemSlider17, 0, wxGROW|wxLEFT|wxRIGHT|wxTOP, 5);

    wxStaticText* itemStaticText18 = new wxStaticText( itemDialog1, wxID_STATIC, _T("Min%"), wxDefaultPosition, wxDefaultSize, wxALIGN_CENTRE );
    itemBoxSizer2->Add(itemStaticText18, 0, wxALIGN_LEFT|wxLEFT|wxRIGHT|wxTOP|wxADJUST_MINSIZE, 5);

    wxSlider* itemSlider19 = new wxSlider( itemDialog1, ID_SLIDER1, 0, 0, 100, wxDefaultPosition, wxSize(300, -1), wxSL_HORIZONTAL|wxSL_LABELS );
    itemBoxSizer2->Add(itemSlider19, 0, wxGROW|wxALL, 5);

    wxButton* itemButton20 = new wxButton( itemDialog1, ID_BUTTON, _T("Advanced..."), wxDefaultPosition, wxDefaultSize, 0 );
    itemBoxSizer2->Add(itemButton20, 0, wxALIGN_CENTER_HORIZONTAL|wxALL, 5);
///@end Vistab content construction
}

/*!
 * Should we show tooltips?
 */

bool Vistab::ShowToolTips()
{
    return true;
}

/*!
 * Get bitmap resources
 */

wxBitmap Vistab::GetBitmapResource( const wxString& name )
{
    // Bitmap retrieval
////@begin Vistab bitmap retrieval
    wxUnusedVar(name);
    if (name == _T("../../../../../../../home/users/jaredabo/GUIs/GUI/contour.png"))
    {
        wxBitmap bitmap(_T("../../../../../../../home/users/jaredabo/GUIs/GUI/contour.png"), wxBITMAP_TYPE_PNG);
        return bitmap;
    }
    else if (name == _T("../../../../../../../home/users/jaredabo/GUIs/GUI/vector.png"))
    {
        wxBitmap bitmap(_T("../../../../../../../home/users/jaredabo/GUIs/GUI/vector.png"), wxBITMAP_TYPE_PNG);
        return bitmap;
    }
    return wxNullBitmap;
////@end Vistab bitmap retrieval
}

/*!
 * Get icon resources
 */

wxIcon Vistab::GetIconResource( const wxString& name )
{
    // Icon retrieval
////@begin Vistab icon retrieval
    wxUnusedVar(name);
    return wxNullIcon;
////@end Vistab icon retrieval
}
////////////////////////////////////////////////////////////
void Vistab::SetCommInstance( VjObs_ptr veEngine )
{
   xplorerPtr = VjObs::_duplicate( veEngine );
}
////////////////////////////////////////////////////////////
void Vistab::_onContour( wxCommandEvent& WXUNUSED(event) )
{
   contour = new Contours(xplorerPtr, domManager);
   contour->ShowModal();
std::cout<<"CONTOURS WORKING"<<std::endl;   
}
////////////////////////////////////////////////////////////
void Vistab::_onVector( wxCommandEvent& WXUNUSED(event) )
{
   vector = new Vectors(xplorerPtr, domManager);
   vector->ShowModal();
std::cout<<"VECTORS WORKING"<<std::endl;
}
////////////////////////////////////////////////////////////
void Vistab::_onStreamline( wxCommandEvent& WXUNUSED(event) )
{
   streamline = new Streamlines(xplorerPtr, domManager);
   streamline->ShowModal();
std::cout<<"STREAMLINES WORKING"<<std::endl;
}
////////////////////////////////////////////////////////////
void Vistab::_onIsosurface( wxCommandEvent& WXUNUSED(event) )
{
   isosurface = new Isosurfaces(xplorerPtr, domManager);
   isosurface->ShowModal();
std::cout<<"ISOSURFACES WORKING"<<std::endl;
}
////////////////////////////////////////////////////////////
void Vistab::_onTextureBased( wxCommandEvent& WXUNUSED(event) )
{
   if(!_tbTools)
   {
      _tbTools = new TextureBasedToolBar(this,-1);
      _tbTools->SetVjObsPtr(xplorerPtr);
   }
   if(_tbTools->ShowModal() == wxID_OK)
   {
      std::cout<<"TBTools WORKING"<<std::endl;
   }
}
/*!
 * Vistab type definition
 */
/*
IMPLEMENT_DYNAMIC_CLASS( Vistab, wxDialog )
*/
/*!
 * Vistab event table definition
 */
/*
BEGIN_EVENT_TABLE( Vistab, wxDialog )

////@begin Vistab event table entries
////@end Vistab event table entries

END_EVENT_TABLE()
*/
/*!
 * Vistab constructors
 */
/*
Vistab::Vistab( )
{
}

Vistab::Vistab( wxWindow* parent, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style )
{
    Create(parent, id, caption, pos, size, style);
}
*/
/*!
 * Vistab creator
 */
/*
bool Vistab::Create( wxWindow* parent, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style )
{
////@begin Vistab member initialisation
////@end Vistab member initialisation

////@begin Vistab creation
    SetExtraStyle(GetExtraStyle()|wxWS_EX_BLOCK_EVENTS);
    wxDialog::Create( parent, id, caption, pos, size, style );

    CreateControls();
    GetSizer()->Fit(this);
    GetSizer()->SetSizeHints(this);
    Centre();
////@end Vistab creation
    return true;
}
*/
/*!
 * Control creation for Vistab
 */
/*
void Vistab::CreateControls()
{    
////@begin Vistab content construction
    // Generated by DialogBlocks, 18/04/2006 14:28:15 (unregistered)

    Vistab* itemDialog1 = this;

    wxBoxSizer* itemBoxSizer2 = new wxBoxSizer(wxVERTICAL);
    itemDialog1->SetSizer(itemBoxSizer2);

////@end Vistab content construction
}
*/
/*!
 * Should we show tooltips?
 */
/*
bool Vistab::ShowToolTips()
{
    return true;
}
*/
/*!
 * Get bitmap resources
 */
/*
wxBitmap Vistab::GetBitmapResource( const wxString& name )
{
    // Bitmap retrieval
////@begin Vistab bitmap retrieval
    wxUnusedVar(name);
    return wxNullBitmap;
////@end Vistab bitmap retrieval
}
*/
/*!
 * Get icon resources
 */
/*
wxIcon Vistab::GetIconResource( const wxString& name )
{
    // Icon retrieval
////@begin Vistab icon retrieval
    wxUnusedVar(name);
    return wxNullIcon;
////@end Vistab icon retrieval
}
*/
