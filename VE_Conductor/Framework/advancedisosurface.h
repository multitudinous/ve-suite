/////////////////////////////////////////////////////////////////////////////
// Name:        advancedisosurfaces.h
// Purpose:     
// Author:      Jared Abodeely
// Modified by: 
// Created:     12/04/2007 10:11:12
// RCS-ID:      
// Copyright:   
// Licence:     
/////////////////////////////////////////////////////////////////////////////

// Generated by DialogBlocks (unregistered), 12/04/2007 10:11:12

#ifndef _ADVANCEDISOSURFACES_H_
#define _ADVANCEDISOSURFACES_H_

#if defined(__GNUG__) && !defined(NO_GCC_PRAGMA)
#pragma interface "advancedisosurfaces.h"
#endif

#include "VE_Conductor/Utilities/DualSlider.h"
#include "VE_Builder/Utilities/gui/spinctld.h"

////@end includes
#include <xercesc/dom/DOM.hpp>
#include <vector>
XERCES_CPP_NAMESPACE_USE

class wxListBox;
class wxSpinCtrlDbl;

#define ID_ADVANCEDISOSURFACES 10000
//#define ID_LISTBOX1 10001
#define SYMBOL_ADVANCEDISOSURFACES_STYLE wxCAPTION|wxRESIZE_BORDER|wxSYSTEM_MENU|wxCLOSE_BOX
#define SYMBOL_ADVANCEDISOSURFACES_TITLE _("Advanced Isosurfaces")
#define SYMBOL_ADVANCEDISOSURFACES_IDNAME ID_ADVANCEDISOSURFACES
#define SYMBOL_ADVANCEDISOSURFACES_SIZE wxSize(400, 300)
#define SYMBOL_ADVANCEDISOSURFACES_POSITION wxDefaultPosition


#ifndef wxCLOSE_BOX
#define wxCLOSE_BOX 0x1000
#endif

class AdvancedIsosurface: public wxDialog
{    
    DECLARE_DYNAMIC_CLASS( AdvancedIsosurface )
    DECLARE_EVENT_TABLE()

public:
    AdvancedIsosurface( );
    AdvancedIsosurface( wxWindow* parent,
						wxWindowID id = SYMBOL_ADVANCEDISOSURFACES_IDNAME,
						const wxString& caption = SYMBOL_ADVANCEDISOSURFACES_TITLE,
						const wxPoint& pos = SYMBOL_ADVANCEDISOSURFACES_POSITION,
						const wxSize& size = SYMBOL_ADVANCEDISOSURFACES_SIZE,
						long style = SYMBOL_ADVANCEDISOSURFACES_STYLE );

   enum ADVANCEDISO_IDS
   {
      MIN_SPINCTRL,
      MAX_SPINCTRL,
      MIN_SLIDER,
      MAX_SLIDER,
	  SELECT_SCALAR
   };

    bool Create( wxWindow* parent,
				 wxWindowID id = SYMBOL_ADVANCEDISOSURFACES_IDNAME,
				 const wxString& caption = SYMBOL_ADVANCEDISOSURFACES_TITLE,
				 const wxPoint& pos = SYMBOL_ADVANCEDISOSURFACES_POSITION,
				 const wxSize& size = SYMBOL_ADVANCEDISOSURFACES_SIZE,
				 long style = SYMBOL_ADVANCEDISOSURFACES_STYLE );

    /// Creates the controls and sizers
    void CreateControls();
	/// Callback for the scalar selection
	void OnScalarSelection( wxCommandEvent& WXUNUSED(event) );
	/// Callback for the minimum scalar spinner
	void OnMinSpinCtrl( wxScrollEvent& WXUNUSED(event) );
	/// Callback for the maximum scalar spinner
	void OnMaxSpinCtrl( wxScrollEvent& WXUNUSED(event) );
	/// Callback for the minimum scalar slider
	void OnMinSlider( wxScrollEvent& WXUNUSED(event) );
	/// Callback for the maximum scalar slider
	void OnMaxSlider( wxScrollEvent& WXUNUSED(event) );

    wxBitmap GetBitmapResource( const wxString& name );

    wxIcon GetIconResource( const wxString& name );

    static bool ShowToolTips();

	wxListBox* scalarSelection;
	wxSpinCtrlDbl* _minSpinner;
    wxSpinCtrlDbl* _maxSpinner;
    wxSlider* _minSlider;
    wxSlider* _maxSlider;

	std::map<std::string,wxArrayString> _availableSolutions;
	std::map<std::string,std::vector<double> > _colorScalarRanges;///<The scalar range for the active scalar
    std::vector<double> _colorScalarRange;///<The active scalars range.
	std::string _colorScalarName;///<The selected scalar
	std::string _activeScalar;

	void PopulateList( wxArrayString scalarlist );
	void SetScalarList( std::map<std::string,std::vector<double> > colorScalarRanges );
	void SetActiveScalar( std::string activeScalar );
	void SetScalarRange( void );
	bool _ensureSliders( int activeSliderID );
	double GetMinScalarValue( void );
	double GetMaxScalarValue( void );
	std::string GetScalarName( void );

   std::string ConvertUnicode( const wxChar* data )
   {
      std::string tempStr( static_cast< const char* >( wxConvCurrent->cWX2MB( data ) ) );
      return tempStr;
   }
};

#endif
    // _ADVANCEDISOSURFACES_H_
