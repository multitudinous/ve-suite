##Builds VE_ConductorLib
import os, sys, string
pj = os.path.join

Import('baseEnv')
Import('libPath')

srcs = Split("""
   interface.cpp 
   package.cpp 
   string_ops.cpp 
   GeometryDataBuffer.cpp
""")

##srcs = map(lambda s: pj('#', 'VE_Conductor', 'Network', s), srcs)

env = baseEnv.Copy()
env.Append(LIBS = 'VE_XMLLib')
env.ParseConfig('flagpoll xerces --libs --cflags')

targetLib = pj(libPath, 'VE_ConductorLib')
env.SharedLibrary(target = targetLib, source = srcs)



