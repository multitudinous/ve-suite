#ifndef GETVESUITE_Measurement_Measurement_PCONTLR_H
#define GETVESUITE_Measurement_Measurement_PCONTLR_H
//Usage of this file
//std::istringstream tempStreamI( GetVESuite_whatever() );
//osg::ref_ptr< osg::Node > tempNode = osgDB::Registry::instance()->
//    getReaderWriterForExtension( "ive" )->readNode( tempStreamI ).getNode();
//osg::ref_ptr< osg::Image > tempImage = osgDB::Registry::instance()->
//    getReaderWriterForExtension( "png" )->readNode( tempStreamI ).getImage();

#include <string>

std::string GetVESuite_Measurement_Measurement_PCONTLR( void )
{
    unsigned char osgData[ 1547 ] = { 
        255,216,255,224,0,16,74,70,73,70,0,1,1,1,0,72,0,72,0,0,255,219,0,67,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,2,1,1,1,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,255,219,0,67,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,255,192,0,17,8,0,35,0,21,3,1,34,0,2,17,1,3,17,1,255,196,0,31,0,0,1,5,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,255,196,0,181,16,0,2,1,3,3,2,4,3,5,5,4,4,0,0,1,125,1,2,3,0,4,17,5,18,33,49,65,6,19,81,97,7,34,113,20,50,129,145,161,8,35,66,177,193,21,82,209,240,36,51,98,114,130,9,10,22,23,24,25,26,37,38,39,40,41,42,52,53,54,55,56,57,58,67,68,69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,170,178,179,180,181,182,183,184,185,186,194,195,196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,225,226,227,228,229,230,231,232,233,234,241,242,243,244,245,246,247,248,249,250,255,196,0,31,1,0,3,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,255,196,0,181,17,0,2,1,2,4,4,3,4,7,5,4,4,0,1,2,119,0,1,2,3,17,4,5,33,49,6,18,65,81,7,97,113,19,34,50,129,8,20,66,145,161,177,193,9,35,51,82,240,21,98,114,209,10,22,36,52,225,37,241,23,24,25,26,38,39,40,41,42,53,54,55,56,57,58,67,68,69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,130,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,170,178,179,180,181,182,183,184,185,186,194,195,196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,226,227,228,229,230,231,232,233,234,242,243,244,245,246,247,248,249,250,255,218,0,12,3,1,0,2,17,3,17,0,63,0,254,180,173,116,161,251,120,248,143,226,246,189,227,79,31,252,89,248,125,251,42,124,21,248,191,227,207,130,31,9,244,207,129,127,29,254,48,254,205,94,35,248,207,241,47,224,254,167,23,195,223,143,31,25,190,34,252,88,248,37,227,223,9,248,223,77,240,247,134,62,57,105,127,23,62,23,120,123,192,141,117,166,120,122,238,231,225,111,136,126,33,234,175,227,235,31,20,124,48,187,240,14,252,159,240,76,159,216,83,194,51,219,223,252,3,248,21,240,223,246,47,248,173,251,233,188,47,241,139,246,45,240,191,131,191,101,223,139,118,215,86,8,47,172,237,53,123,255,0,133,250,21,141,143,198,111,135,246,186,228,58,30,177,123,224,47,30,233,126,46,248,113,175,106,30,24,210,102,241,103,131,245,219,123,11,120,19,226,159,216,159,246,232,255,0,130,124,252,31,253,136,255,0,103,143,217,27,246,130,253,186,63,100,223,131,95,25,127,99,175,11,120,75,246,66,248,197,224,175,29,254,211,223,5,254,27,248,178,211,226,223,236,27,226,232,191,103,255,0,26,235,90,94,129,227,31,24,217,235,22,95,14,124,65,227,159,129,247,250,207,134,47,53,13,63,73,213,245,47,8,120,163,73,212,231,211,244,91,251,198,180,179,250,210,195,254,10,103,255,0,4,157,210,117,107,109,75,75,255,0,130,150,126,192,250,116,118,186,14,141,225,184,244,139,111,219,31,246,105,254,201,93,47,195,223,219,35,70,138,40,38,241,211,75,102,246,233,175,106,10,173,4,208,239,70,68,148,58,34,138,0,246,175,217,167,226,151,142,228,241,223,198,239,217,115,227,62,187,255,0,9,103,197,175,217,215,254,21,183,136,52,79,136,243,233,154,54,141,172,252,119,253,156,126,49,104,250,242,252,30,248,235,226,239,15,248,55,79,139,195,254,14,248,129,63,196,15,134,191,30,252,13,226,61,55,75,254,206,139,82,215,127,103,237,71,199,90,119,132,124,15,225,47,27,120,79,195,22,5,127,52,63,240,92,95,216,95,197,63,240,113,71,138,191,103,109,35,254,9,187,241,231,246,96,241,191,130,63,99,31,15,252,70,212,190,36,252,118,214,190,41,106,62,36,248,5,226,191,21,126,210,218,151,132,45,116,175,132,191,13,62,39,252,7,240,135,141,237,53,223,140,30,19,210,63,103,150,214,60,113,160,223,174,149,115,161,104,191,27,126,30,234,17,53,252,94,37,197,145,64,31,210,247,197,47,217,235,226,165,191,142,245,207,139,223,178,79,197,191,135,255,0,1,62,38,252,66,254,204,182,248,211,167,252,82,248,51,226,63,143,31,4,254,46,127,97,104,218,126,133,225,159,136,58,239,194,223,7,124,112,248,117,168,104,223,31,244,159,15,232,90,23,135,237,124,99,167,248,158,223,251,91,194,22,118,254,27,241,142,143,226,184,124,49,240,214,235,192,31,47,252,52,248,217,255,0,5,11,253,169,124,105,251,66,124,25,111,8,126,204,31,177,141,183,236,235,241,131,69,248,45,241,91,227,31,195,255,0,139,222,62,253,178,254,33,106,250,151,137,126,1,124,15,248,243,113,97,240,35,193,31,17,63,102,175,133,158,29,240,63,136,23,225,223,237,29,225,91,157,43,199,62,47,30,55,210,180,111,19,120,26,235,75,213,126,15,248,199,68,191,93,66,31,213,250,248,3,246,55,255,0,147,138,255,0,130,177,127,217,255,0,252,57,255,0,215,89,127,193,52,232,3,233,255,0,130,159,5,60,43,240,55,194,186,134,133,161,106,30,32,241,87,137,60,85,226,11,175,28,252,83,248,167,227,155,173,59,84,248,153,241,155,226,102,169,167,105,90,78,181,241,39,226,78,181,164,233,86,22,151,158,32,155,72,208,116,13,54,198,199,77,176,211,60,61,225,159,15,120,99,68,240,127,131,244,79,15,120,55,195,222,31,240,254,150,87,176,81,64,5,124,1,251,27,255,0,201,197,127,193,88,191,236,255,0,254,28,127,235,172,191,224,154,116,81,64,31,127,209,69,20,1,255,217
        };
    std::string strOsgData;
    for( size_t i = 0; i < 1547; ++i )
    {
        strOsgData.push_back( static_cast< char >( osgData[ i ] ) );
    }
    return strOsgData;
}
#endif

