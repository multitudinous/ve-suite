#ifndef GETVESUITE_Measurement_Measurement_FCONTLR_H
#define GETVESUITE_Measurement_Measurement_FCONTLR_H
//Usage of this file
//std::istringstream tempStreamI( GetVESuite_whatever() );
//osg::ref_ptr< osg::Node > tempNode = osgDB::Registry::instance()->
//    getReaderWriterForExtension( "ive" )->readNode( tempStreamI ).getNode();
//osg::ref_ptr< osg::Image > tempImage = osgDB::Registry::instance()->
//    getReaderWriterForExtension( "png" )->readNode( tempStreamI ).getImage();

#include <string>

std::string GetVESuite_Measurement_Measurement_FCONTLR( void )
{
    unsigned char osgData[ 1546 ] = { 
        255,216,255,224,0,16,74,70,73,70,0,1,1,1,0,72,0,72,0,0,255,219,0,67,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,2,1,1,1,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,255,219,0,67,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,255,192,0,17,8,0,35,0,21,3,1,34,0,2,17,1,3,17,1,255,196,0,31,0,0,1,5,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,255,196,0,181,16,0,2,1,3,3,2,4,3,5,5,4,4,0,0,1,125,1,2,3,0,4,17,5,18,33,49,65,6,19,81,97,7,34,113,20,50,129,145,161,8,35,66,177,193,21,82,209,240,36,51,98,114,130,9,10,22,23,24,25,26,37,38,39,40,41,42,52,53,54,55,56,57,58,67,68,69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,170,178,179,180,181,182,183,184,185,186,194,195,196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,225,226,227,228,229,230,231,232,233,234,241,242,243,244,245,246,247,248,249,250,255,196,0,31,1,0,3,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,255,196,0,181,17,0,2,1,2,4,4,3,4,7,5,4,4,0,1,2,119,0,1,2,3,17,4,5,33,49,6,18,65,81,7,97,113,19,34,50,129,8,20,66,145,161,177,193,9,35,51,82,240,21,98,114,209,10,22,36,52,225,37,241,23,24,25,26,38,39,40,41,42,53,54,55,56,57,58,67,68,69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,130,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,170,178,179,180,181,182,183,184,185,186,194,195,196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,226,227,228,229,230,231,232,233,234,242,243,244,245,246,247,248,249,250,255,218,0,12,3,1,0,2,17,3,17,0,63,0,254,180,237,116,145,251,120,248,147,226,246,189,227,79,31,252,89,248,125,251,42,124,22,248,191,227,191,130,63,9,244,207,129,127,29,254,48,254,205,94,35,248,207,241,47,225,6,167,23,195,207,143,31,25,190,34,252,88,248,35,227,223,9,248,223,78,240,255,0,134,62,57,233,95,23,62,23,120,123,192,141,117,165,248,122,234,235,225,111,136,126,33,234,173,227,251,31,20,124,48,187,240,14,225,255,0,130,101,254,194,62,21,150,215,83,253,159,254,6,124,54,253,140,126,41,186,201,113,225,95,140,191,177,95,134,124,27,251,47,252,88,130,226,202,49,168,88,219,106,154,151,194,237,10,198,195,227,71,195,235,125,106,13,19,89,188,240,23,143,116,207,23,124,55,215,175,252,49,164,205,226,207,7,235,182,246,22,240,47,197,127,177,71,237,207,255,0,4,248,248,67,251,17,126,207,63,178,47,237,7,251,116,126,201,223,6,126,50,126,199,126,21,240,159,236,129,241,139,193,126,57,253,167,254,12,124,53,241,117,167,197,191,216,59,197,209,254,207,222,53,214,180,173,15,197,254,49,179,214,108,126,29,120,131,199,63,4,53,13,103,195,23,186,134,159,164,234,250,151,132,124,81,164,234,115,233,250,37,253,227,90,89,253,119,15,252,20,239,254,9,75,109,175,13,122,223,254,10,105,251,6,195,57,209,244,189,18,107,35,251,101,254,205,147,216,207,103,162,190,181,38,154,207,246,175,30,73,60,55,49,183,136,53,44,201,20,241,180,162,69,89,188,197,64,40,3,216,255,0,102,159,138,94,59,147,199,127,27,191,101,207,140,250,239,252,37,159,22,191,103,95,248,86,222,32,209,62,35,207,166,104,218,54,179,241,223,246,113,248,197,163,235,203,240,123,227,175,139,188,63,224,221,62,47,15,248,59,226,4,255,0,16,62,26,252,123,240,55,136,244,221,47,251,58,45,75,93,253,159,181,31,29,105,222,17,240,63,132,188,109,225,63,12,88,21,252,208,255,0,193,113,127,97,127,20,255,0,193,197,30,42,253,157,180,143,248,38,239,199,159,217,131,198,254,8,253,140,124,63,241,27,82,248,147,241,219,90,248,165,168,248,147,224,23,138,252,85,251,75,106,94,16,181,210,190,18,252,52,248,159,240,31,194,30,55,180,215,126,48,120,79,72,253,158,91,88,241,198,131,126,186,85,206,133,162,252,109,248,123,168,68,215,241,120,151,22,69,0,127,75,223,20,191,103,175,138,150,254,59,215,62,47,126,201,63,22,254,31,252,4,248,155,241,11,251,50,219,227,78,159,241,75,224,207,136,254,60,124,19,248,185,253,133,163,105,250,23,134,126,32,235,191,11,124,29,241,195,225,214,161,163,124,127,210,124,63,161,104,94,31,181,241,142,159,226,123,127,237,111,8,89,219,248,111,198,58,63,138,225,240,199,195,91,175,0,124,191,240,211,227,103,252,20,47,246,165,241,167,237,9,240,101,188,33,251,48,126,198,54,223,179,175,198,13,23,224,183,197,111,140,127,15,254,47,120,251,246,203,248,133,171,234,94,37,248,5,240,63,227,205,197,135,192,143,4,124,68,253,154,190,22,120,119,192,254,32,95,135,127,180,119,133,110,116,175,28,248,188,120,223,74,209,188,77,224,107,173,47,85,248,63,227,29,18,253,117,8,127,87,235,224,15,216,223,254,78,43,254,10,197,255,0,103,255,0,240,231,255,0,93,101,255,0,4,211,160,15,167,254,10,124,20,240,175,192,223,10,234,26,22,133,168,120,131,197,94,36,241,87,136,46,188,115,241,79,226,159,142,110,180,237,83,226,103,198,111,137,154,166,157,165,105,58,215,196,159,137,58,214,147,165,88,90,94,120,130,109,35,65,208,52,219,27,29,54,195,76,240,247,134,124,61,225,141,19,193,254,15,209,60,61,224,223,15,120,127,195,250,89,94,193,69,0,21,240,7,236,111,255,0,39,21,255,0,5,98,255,0,179,255,0,248,113,255,0,174,178,255,0,130,105,209,69,0,125,255,0,69,20,80,7,255,217
        };
    std::string strOsgData;
    for( size_t i = 0; i < 1546; ++i )
    {
        strOsgData.push_back( static_cast< char >( osgData[ i ] ) );
    }
    return strOsgData;
}
#endif

