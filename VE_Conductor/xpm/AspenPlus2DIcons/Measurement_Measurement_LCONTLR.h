#ifndef GETVESUITE_Measurement_Measurement_LCONTLR_H
#define GETVESUITE_Measurement_Measurement_LCONTLR_H
//Usage of this file
//std::istringstream tempStreamI( GetVESuite_whatever() );
//osg::ref_ptr< osg::Node > tempNode = osgDB::Registry::instance()->
//    getReaderWriterForExtension( "ive" )->readNode( tempStreamI ).getNode();
//osg::ref_ptr< osg::Image > tempImage = osgDB::Registry::instance()->
//    getReaderWriterForExtension( "png" )->readNode( tempStreamI ).getImage();

#include <string>

std::string GetVESuite_Measurement_Measurement_LCONTLR( void )
{
    unsigned char osgData[ 1541 ] = { 
        255,216,255,224,0,16,74,70,73,70,0,1,1,1,0,72,0,72,0,0,255,219,0,67,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,2,1,1,1,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,255,219,0,67,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,255,192,0,17,8,0,35,0,21,3,1,34,0,2,17,1,3,17,1,255,196,0,31,0,0,1,5,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,255,196,0,181,16,0,2,1,3,3,2,4,3,5,5,4,4,0,0,1,125,1,2,3,0,4,17,5,18,33,49,65,6,19,81,97,7,34,113,20,50,129,145,161,8,35,66,177,193,21,82,209,240,36,51,98,114,130,9,10,22,23,24,25,26,37,38,39,40,41,42,52,53,54,55,56,57,58,67,68,69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,170,178,179,180,181,182,183,184,185,186,194,195,196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,225,226,227,228,229,230,231,232,233,234,241,242,243,244,245,246,247,248,249,250,255,196,0,31,1,0,3,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,255,196,0,181,17,0,2,1,2,4,4,3,4,7,5,4,4,0,1,2,119,0,1,2,3,17,4,5,33,49,6,18,65,81,7,97,113,19,34,50,129,8,20,66,145,161,177,193,9,35,51,82,240,21,98,114,209,10,22,36,52,225,37,241,23,24,25,26,38,39,40,41,42,53,54,55,56,57,58,67,68,69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,130,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,170,178,179,180,181,182,183,184,185,186,194,195,196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,226,227,228,229,230,231,232,233,234,242,243,244,245,246,247,248,249,250,255,218,0,12,3,1,0,2,17,3,17,0,63,0,254,181,172,52,73,63,111,143,20,124,90,213,252,93,227,175,139,190,4,253,150,126,14,124,99,241,199,192,191,132,58,63,192,111,142,159,24,255,0,102,239,20,124,109,248,161,240,147,85,135,225,207,199,79,140,95,16,126,42,124,15,241,231,133,60,113,99,161,120,107,227,182,153,241,107,225,111,135,124,7,246,173,51,195,247,151,95,11,188,67,241,11,84,111,31,217,120,167,225,133,223,128,118,228,255,0,130,100,254,194,158,18,158,222,255,0,224,31,192,175,135,31,177,119,197,97,231,75,225,127,140,127,177,111,134,60,29,251,47,124,90,182,186,176,79,183,217,218,106,250,135,195,13,10,198,199,227,55,195,251,93,114,13,19,88,189,240,23,143,116,191,23,124,56,215,181,15,11,233,82,248,179,193,250,237,190,159,111,2,252,83,251,19,254,221,63,240,79,223,131,191,177,31,236,241,251,36,124,124,253,187,63,100,223,130,159,26,191,99,127,11,120,75,246,67,248,187,224,255,0,29,254,210,255,0,3,60,1,226,221,63,227,7,236,25,226,232,254,0,120,203,95,210,252,51,227,239,20,195,169,67,240,235,94,241,223,192,251,253,107,195,23,58,182,149,166,234,90,175,132,60,79,164,234,55,122,94,143,121,122,246,86,159,92,219,255,0,193,79,127,224,149,150,250,218,120,131,254,30,125,251,9,207,168,62,139,165,104,183,194,227,246,199,253,152,140,26,148,90,51,235,82,217,94,93,67,31,141,19,236,151,226,111,16,106,140,237,104,109,81,252,240,141,23,148,138,138,1,236,191,179,79,197,47,29,201,227,191,141,223,178,231,198,125,119,254,18,207,139,95,179,175,252,43,111,16,104,159,17,231,211,52,125,27,89,248,239,251,56,252,98,209,245,229,248,61,241,215,197,222,31,240,110,159,23,135,252,29,241,2,127,136,31,13,126,61,248,27,196,122,110,151,253,157,22,165,174,254,207,218,143,142,180,239,8,248,31,194,94,54,240,159,134,44,10,254,104,127,224,184,191,176,191,138,191,224,226,143,20,254,206,218,63,252,19,115,227,215,236,191,227,127,4,126,198,30,31,248,143,169,124,73,248,237,173,124,81,212,124,75,240,11,197,126,41,253,165,181,47,7,218,233,63,9,62,26,124,79,248,15,225,31,27,218,107,191,24,60,39,164,126,207,45,172,120,227,65,191,93,42,231,66,209,126,55,124,61,212,34,107,248,188,75,139,34,128,63,165,239,138,95,179,215,197,59,127,29,235,191,23,191,100,159,139,127,15,254,2,124,77,248,135,253,153,107,241,167,79,248,165,240,103,196,95,30,126,9,252,92,254,193,209,244,253,11,195,63,16,181,223,133,190,15,248,223,240,235,80,209,190,63,233,62,31,208,180,47,15,218,248,199,78,241,61,191,246,183,132,44,237,252,55,227,45,31,197,112,120,99,225,173,207,128,62,96,248,105,241,179,254,10,23,251,82,248,211,246,133,248,50,124,33,251,47,254,198,54,191,179,183,197,253,23,224,183,197,127,140,126,0,248,187,227,239,219,47,226,22,175,168,248,151,224,23,192,255,0,143,55,26,127,192,143,4,124,68,253,154,190,22,120,119,192,254,32,31,14,255,0,104,239,10,220,233,94,57,241,120,241,190,149,163,120,155,192,215,90,102,171,240,127,198,58,37,250,234,16,254,175,87,192,31,177,191,252,156,87,252,21,139,254,207,255,0,225,199,254,186,203,254,9,167,64,31,79,252,20,248,41,225,95,129,190,21,212,52,45,11,80,241,7,138,188,73,226,175,16,93,120,231,226,159,197,63,28,221,105,218,167,196,207,140,223,19,53,77,59,74,210,117,175,137,63,18,117,173,39,74,176,180,188,241,4,218,70,131,160,105,182,54,58,109,134,153,225,239,12,248,123,195,26,39,131,252,31,162,120,123,193,190,30,240,255,0,135,244,178,189,130,138,0,43,224,15,216,223,254,78,43,254,10,197,255,0,103,255,0,240,227,255,0,93,101,255,0,4,211,162,138,0,251,254,138,40,160,15,255,217
        };
    std::string strOsgData;
    for( size_t i = 0; i < 1541; ++i )
    {
        strOsgData.push_back( static_cast< char >( osgData[ i ] ) );
    }
    return strOsgData;
}
#endif

