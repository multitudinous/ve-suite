#ifndef GETVESUITE_Measurement_Measurement_TINDICTR_H
#define GETVESUITE_Measurement_Measurement_TINDICTR_H
//Usage of this file
//std::istringstream tempStreamI( GetVESuite_whatever() );
//osg::ref_ptr< osg::Node > tempNode = osgDB::Registry::instance()->
//    getReaderWriterForExtension( "ive" )->readNode( tempStreamI ).getNode();
//osg::ref_ptr< osg::Image > tempImage = osgDB::Registry::instance()->
//    getReaderWriterForExtension( "png" )->readNode( tempStreamI ).getImage();

#include <string>

std::string GetVESuite_Measurement_Measurement_TINDICTR( void )
{
    unsigned char osgData[ 1546 ] = { 
        255,216,255,224,0,16,74,70,73,70,0,1,1,1,0,72,0,72,0,0,255,219,0,67,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,2,1,1,1,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,255,219,0,67,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,255,192,0,17,8,0,36,0,21,3,1,34,0,2,17,1,3,17,1,255,196,0,31,0,0,1,5,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,255,196,0,181,16,0,2,1,3,3,2,4,3,5,5,4,4,0,0,1,125,1,2,3,0,4,17,5,18,33,49,65,6,19,81,97,7,34,113,20,50,129,145,161,8,35,66,177,193,21,82,209,240,36,51,98,114,130,9,10,22,23,24,25,26,37,38,39,40,41,42,52,53,54,55,56,57,58,67,68,69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,170,178,179,180,181,182,183,184,185,186,194,195,196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,225,226,227,228,229,230,231,232,233,234,241,242,243,244,245,246,247,248,249,250,255,196,0,31,1,0,3,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,255,196,0,181,17,0,2,1,2,4,4,3,4,7,5,4,4,0,1,2,119,0,1,2,3,17,4,5,33,49,6,18,65,81,7,97,113,19,34,50,129,8,20,66,145,161,177,193,9,35,51,82,240,21,98,114,209,10,22,36,52,225,37,241,23,24,25,26,38,39,40,41,42,53,54,55,56,57,58,67,68,69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,130,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,170,178,179,180,181,182,183,184,185,186,194,195,196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,226,227,228,229,230,231,232,233,234,242,243,244,245,246,247,248,249,250,255,218,0,12,3,1,0,2,17,3,17,0,63,0,254,180,173,180,145,251,120,248,143,226,246,189,227,79,31,252,89,248,125,251,41,252,21,248,191,227,207,130,63,9,244,207,129,127,29,190,48,254,205,94,35,248,207,241,47,224,254,167,31,195,207,143,31,25,190,34,252,88,248,37,227,223,9,248,223,78,240,247,134,62,57,233,95,22,254,23,120,123,192,166,235,76,240,245,213,215,194,223,16,252,66,213,91,199,246,62,40,248,97,119,224,14,130,31,248,38,63,236,43,225,240,186,223,236,237,240,39,225,207,236,117,241,46,222,24,111,244,15,141,159,177,31,133,252,31,251,50,252,82,211,152,135,187,209,35,215,117,127,133,90,13,150,159,241,139,225,194,107,246,122,78,175,63,129,60,127,166,120,183,225,183,136,245,31,9,233,114,248,167,194,26,252,26,116,22,233,241,95,236,83,251,118,127,193,63,62,16,126,194,95,6,255,0,99,95,218,3,246,232,253,146,254,11,252,97,253,151,254,18,93,126,193,159,27,124,33,227,207,218,99,224,127,195,255,0,24,233,127,18,191,100,145,171,126,201,127,18,124,79,160,120,111,199,126,44,183,212,109,124,23,172,248,163,225,102,181,175,248,58,239,89,210,108,111,117,47,12,120,139,68,213,53,29,27,78,158,242,109,50,223,235,235,95,248,42,23,252,18,154,207,196,26,159,136,161,255,0,130,152,126,193,2,235,84,208,252,61,160,75,107,255,0,13,147,251,55,11,8,44,252,55,123,226,59,235,25,45,98,143,199,235,36,119,15,39,137,239,150,93,210,52,101,45,160,17,199,27,44,173,40,7,174,254,205,95,20,188,119,39,142,254,55,126,203,159,25,245,223,248,75,62,45,126,206,191,240,173,188,65,162,124,71,159,76,209,244,109,99,227,191,236,227,241,139,71,215,151,224,247,199,95,23,120,127,193,186,124,94,31,240,119,196,9,254,32,124,53,248,247,224,111,17,233,186,95,246,116,90,150,187,251,63,106,62,58,211,188,35,224,127,9,120,219,194,126,24,176,43,249,161,255,0,130,226,126,194,254,41,255,0,131,138,60,83,251,59,104,255,0,240,77,223,143,63,179,7,141,252,17,251,24,248,127,226,62,167,241,39,227,182,181,241,75,81,241,39,192,47,21,248,171,246,150,212,124,31,107,165,124,37,248,105,241,63,224,63,132,60,111,105,174,124,96,240,158,147,251,60,190,179,227,141,6,253,116,187,157,11,69,248,221,240,247,80,141,175,226,241,41,22,37,0,127,75,223,20,191,103,175,138,118,222,59,215,62,47,126,201,95,22,190,31,252,4,248,155,241,15,251,50,219,227,78,159,241,75,224,207,136,190,60,124,20,248,185,253,131,163,105,250,23,134,62,33,107,159,11,188,31,241,191,225,214,161,163,126,208,26,79,135,244,45,11,195,246,190,49,211,188,79,111,253,173,225,11,59,127,13,248,199,71,241,92,30,24,248,107,117,224,15,151,254,26,124,108,255,0,130,133,254,212,190,52,253,161,126,12,159,8,254,204,31,177,141,183,236,235,241,131,69,248,45,241,95,227,31,128,62,46,248,251,246,203,248,133,171,234,62,37,248,5,240,59,227,212,246,31,2,60,19,241,19,246,106,248,89,225,223,3,248,129,126,30,126,209,222,21,185,210,188,115,226,245,241,190,149,163,120,155,192,215,90,102,171,240,131,198,58,37,250,234,16,254,175,215,192,31,177,191,252,156,87,252,21,139,254,207,255,0,225,199,254,186,203,254,9,167,64,31,80,124,20,248,41,225,95,129,222,21,212,52,45,11,80,241,7,138,188,73,226,175,16,93,120,231,226,159,197,63,28,221,105,218,167,196,207,140,223,19,53,77,59,74,210,53,175,137,63,18,117,173,35,74,176,180,188,241,4,218,70,131,160,105,182,54,58,109,134,153,225,239,13,120,123,195,26,39,131,252,31,162,120,123,193,190,30,240,255,0,135,244,178,189,126,138,0,43,224,15,216,223,254,78,43,254,10,197,255,0,103,255,0,240,231,255,0,93,101,255,0,4,211,162,138,0,251,254,138,40,160,15,255,217
        };
    std::string strOsgData;
    for( size_t i = 0; i < 1546; ++i )
    {
        strOsgData.push_back( static_cast< char >( osgData[ i ] ) );
    }
    return strOsgData;
}
#endif

