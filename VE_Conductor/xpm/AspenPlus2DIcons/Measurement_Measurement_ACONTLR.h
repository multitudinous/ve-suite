#ifndef GETVESUITE_Measurement_Measurement_ACONTLR_H
#define GETVESUITE_Measurement_Measurement_ACONTLR_H
//Usage of this file
//std::istringstream tempStreamI( GetVESuite_whatever() );
//osg::ref_ptr< osg::Node > tempNode = osgDB::Registry::instance()->
//    getReaderWriterForExtension( "ive" )->readNode( tempStreamI ).getNode();
//osg::ref_ptr< osg::Image > tempImage = osgDB::Registry::instance()->
//    getReaderWriterForExtension( "png" )->readNode( tempStreamI ).getImage();

#include <string>

std::string GetVESuite_Measurement_Measurement_ACONTLR( void )
{
    unsigned char osgData[ 1546 ] = { 
        255,216,255,224,0,16,74,70,73,70,0,1,1,1,0,72,0,72,0,0,255,219,0,67,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,2,1,1,1,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,255,219,0,67,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,255,192,0,17,8,0,35,0,21,3,1,34,0,2,17,1,3,17,1,255,196,0,31,0,0,1,5,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,255,196,0,181,16,0,2,1,3,3,2,4,3,5,5,4,4,0,0,1,125,1,2,3,0,4,17,5,18,33,49,65,6,19,81,97,7,34,113,20,50,129,145,161,8,35,66,177,193,21,82,209,240,36,51,98,114,130,9,10,22,23,24,25,26,37,38,39,40,41,42,52,53,54,55,56,57,58,67,68,69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,170,178,179,180,181,182,183,184,185,186,194,195,196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,225,226,227,228,229,230,231,232,233,234,241,242,243,244,245,246,247,248,249,250,255,196,0,31,1,0,3,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,255,196,0,181,17,0,2,1,2,4,4,3,4,7,5,4,4,0,1,2,119,0,1,2,3,17,4,5,33,49,6,18,65,81,7,97,113,19,34,50,129,8,20,66,145,161,177,193,9,35,51,82,240,21,98,114,209,10,22,36,52,225,37,241,23,24,25,26,38,39,40,41,42,53,54,55,56,57,58,67,68,69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,130,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,170,178,179,180,181,182,183,184,185,186,194,195,196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,226,227,228,229,230,231,232,233,234,242,243,244,245,246,247,248,249,250,255,218,0,12,3,1,0,2,17,3,17,0,63,0,254,182,116,221,2,127,219,247,197,95,22,181,95,21,120,223,227,7,130,63,101,207,131,127,24,60,121,240,63,225,22,139,240,15,227,151,198,79,217,199,197,95,27,62,38,124,30,212,99,248,125,241,231,227,47,196,47,138,127,3,124,119,225,79,28,88,120,127,195,31,28,116,159,139,223,11,252,63,224,67,115,166,120,122,234,231,225,95,136,190,33,234,175,227,235,31,20,124,49,187,240,14,196,159,240,76,143,216,83,194,51,219,234,31,0,190,5,124,56,253,139,254,43,126,246,111,12,124,99,253,139,124,47,224,255,0,217,119,226,213,173,213,130,11,235,59,77,95,80,248,95,161,88,216,252,102,248,127,109,174,65,162,107,23,190,2,241,238,153,226,239,135,26,246,161,225,141,38,95,22,120,63,94,130,194,222,4,248,123,246,54,253,183,63,224,158,191,11,255,0,97,127,128,223,177,199,237,19,251,117,126,202,127,5,254,47,254,201,31,15,236,127,98,223,140,190,12,241,167,237,69,240,99,225,151,140,116,255,0,139,159,177,85,238,163,251,48,120,199,197,122,38,139,226,239,24,90,107,54,30,11,212,124,127,240,142,239,197,94,10,189,212,180,253,47,82,212,60,63,169,120,127,85,212,52,157,58,91,187,141,42,31,178,83,254,10,129,255,0,4,171,79,16,183,137,23,254,10,115,251,7,253,178,109,43,78,210,46,237,219,246,200,253,153,222,202,242,13,34,93,110,107,9,228,141,252,114,94,218,237,37,241,14,168,75,219,201,0,144,76,169,34,186,34,173,0,123,7,236,211,241,75,199,114,120,239,227,119,236,185,241,159,93,255,0,132,179,226,215,236,235,255,0,10,219,196,26,39,196,121,244,205,27,70,214,126,59,254,206,63,24,180,125,121,126,15,124,117,241,119,135,252,27,167,197,225,255,0,7,124,64,159,226,7,195,95,143,126,6,241,30,155,165,255,0,103,69,169,107,191,179,246,163,227,173,59,194,62,7,240,151,141,188,39,225,139,2,191,154,31,248,46,47,236,47,226,159,248,56,163,197,95,179,182,145,255,0,4,221,248,243,251,48,120,223,193,31,177,143,135,254,35,106,95,18,126,59,107,95,20,181,31,18,124,2,241,95,138,191,105,109,75,194,22,186,87,194,95,134,159,19,254,3,248,67,198,246,154,239,198,15,9,233,31,179,203,107,30,56,208,111,215,74,185,208,180,95,141,191,15,117,8,154,254,47,18,226,200,160,15,233,123,226,151,236,245,241,78,219,199,122,239,197,239,217,39,226,223,195,255,0,128,159,19,126,33,255,0,102,90,252,105,211,254,41,124,25,241,31,199,159,130,127,23,63,176,116,125,63,66,240,199,196,45,119,225,111,131,254,55,252,58,212,52,111,218,3,73,240,254,133,161,120,126,215,198,58,119,137,237,255,0,181,188,33,103,111,225,191,24,232,254,43,131,195,31,13,110,188,1,242,255,0,195,79,141,159,240,80,191,218,151,198,159,180,47,193,150,240,135,236,193,251,24,219,126,206,191,24,52,95,130,223,21,190,49,252,63,248,187,227,239,219,47,226,22,175,169,120,151,224,23,192,255,0,143,55,22,31,2,60,17,241,19,246,106,248,89,225,223,3,248,129,126,29,254,209,222,21,185,210,188,115,226,241,227,125,43,70,241,55,129,174,180,205,87,224,255,0,140,116,75,245,212,33,253,95,175,128,63,99,127,249,56,175,248,43,23,253,159,255,0,195,159,253,117,151,252,19,78,128,62,159,248,41,240,83,194,191,3,124,43,168,104,90,22,161,226,15,21,120,147,197,94,32,186,241,207,197,63,138,126,57,186,211,181,79,137,159,25,190,38,106,154,118,149,164,235,95,18,126,36,235,90,78,149,97,105,121,226,9,180,141,7,64,211,108,108,116,219,13,51,195,222,25,240,247,134,52,79,7,248,63,68,240,247,131,124,61,225,255,0,15,233,101,123,5,20,0,87,192,31,177,191,252,156,87,252,21,139,254,207,255,0,225,199,254,186,203,254,9,167,69,20,1,247,253,20,81,64,31,255,217
        };
    std::string strOsgData;
    for( size_t i = 0; i < 1546; ++i )
    {
        strOsgData.push_back( static_cast< char >( osgData[ i ] ) );
    }
    return strOsgData;
}
#endif

