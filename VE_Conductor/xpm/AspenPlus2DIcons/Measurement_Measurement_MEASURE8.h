#ifndef GETVESUITE_Measurement_Measurement_MEASURE8_H
#define GETVESUITE_Measurement_Measurement_MEASURE8_H
//Usage of this file
//std::istringstream tempStreamI( GetVESuite_whatever() );
//osg::ref_ptr< osg::Node > tempNode = osgDB::Registry::instance()->
//    getReaderWriterForExtension( "ive" )->readNode( tempStreamI ).getNode();
//osg::ref_ptr< osg::Image > tempImage = osgDB::Registry::instance()->
//    getReaderWriterForExtension( "png" )->readNode( tempStreamI ).getImage();

#include <string>

std::string GetVESuite_Measurement_Measurement_MEASURE8( void )
{
    unsigned char osgData[ 1308 ] = { 
        255,216,255,224,0,16,74,70,73,70,0,1,1,1,0,72,0,72,0,0,255,219,0,67,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,2,1,1,1,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,255,219,0,67,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,255,192,0,17,8,0,35,0,21,3,1,34,0,2,17,1,3,17,1,255,196,0,31,0,0,1,5,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,255,196,0,181,16,0,2,1,3,3,2,4,3,5,5,4,4,0,0,1,125,1,2,3,0,4,17,5,18,33,49,65,6,19,81,97,7,34,113,20,50,129,145,161,8,35,66,177,193,21,82,209,240,36,51,98,114,130,9,10,22,23,24,25,26,37,38,39,40,41,42,52,53,54,55,56,57,58,67,68,69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,170,178,179,180,181,182,183,184,185,186,194,195,196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,225,226,227,228,229,230,231,232,233,234,241,242,243,244,245,246,247,248,249,250,255,196,0,31,1,0,3,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,255,196,0,181,17,0,2,1,2,4,4,3,4,7,5,4,4,0,1,2,119,0,1,2,3,17,4,5,33,49,6,18,65,81,7,97,113,19,34,50,129,8,20,66,145,161,177,193,9,35,51,82,240,21,98,114,209,10,22,36,52,225,37,241,23,24,25,26,38,39,40,41,42,53,54,55,56,57,58,67,68,69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,130,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,170,178,179,180,181,182,183,184,185,186,194,195,196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,226,227,228,229,230,231,232,233,234,242,243,244,245,246,247,248,249,250,255,218,0,12,3,1,0,2,17,3,17,0,63,0,254,134,191,224,153,95,240,76,175,248,38,223,143,191,224,155,159,240,79,159,29,120,235,254,9,241,251,16,120,211,198,222,52,253,136,63,101,15,22,120,199,198,62,44,253,148,62,3,120,143,197,94,44,241,87,136,254,3,120,11,88,241,15,137,124,75,226,29,99,192,83,93,235,222,32,191,213,239,47,46,175,111,110,166,150,230,234,230,234,73,231,150,73,93,152,253,188,127,224,147,223,240,75,47,250,70,159,236,1,255,0,136,111,251,58,255,0,243,185,165,255,0,130,78,255,0,202,44,191,224,154,127,246,96,31,177,191,254,179,175,195,154,251,251,233,254,127,194,128,62,1,255,0,130,95,255,0,196,163,246,44,248,117,240,182,219,231,240,255,0,236,201,241,3,246,146,253,138,188,5,121,63,205,172,106,255,0,11,63,97,127,218,115,227,31,236,117,240,147,95,241,117,196,123,96,191,248,129,168,252,50,248,29,225,59,239,17,221,89,91,216,105,215,122,246,161,168,221,105,154,86,145,167,203,109,165,218,20,126,204,255,0,241,68,126,218,127,240,82,143,133,186,175,250,71,136,62,32,124,64,253,152,255,0,109,109,26,243,79,253,238,143,109,240,179,227,7,236,199,224,143,216,235,195,58,6,167,113,115,228,207,15,196,8,62,38,255,0,193,59,126,53,223,95,90,197,111,54,157,22,131,226,143,11,93,91,234,183,90,133,238,173,165,232,133,0,124,255,0,251,39,120,71,254,10,155,251,47,254,203,63,179,79,236,208,127,101,255,0,216,3,199,31,240,207,31,0,62,13,252,12,62,53,255,0,135,136,254,209,94,26,255,0,132,195,254,21,47,195,175,13,248,0,248,167,254,17,191,248,117,166,161,255,0,8,255,0,246,135,252,35,255,0,107,251,15,219,239,190,201,246,191,179,253,178,231,203,243,159,160,248,103,251,88,255,0,193,73,62,42,120,211,246,133,240,47,135,191,98,127,216,130,207,87,253,154,254,48,104,191,5,60,117,113,172,255,0,193,72,190,60,219,233,218,175,138,181,239,128,95,3,255,0,104,203,59,255,0,9,205,101,255,0,4,179,184,150,251,195,235,224,143,143,222,14,181,146,91,200,108,46,70,171,166,234,112,37,163,217,195,107,125,121,250,191,95,0,126,198,255,0,242,113,95,240,86,47,251,63,255,0,135,63,250,235,47,248,38,157,0,126,96,126,218,223,179,103,252,23,251,227,39,197,61,3,227,95,236,51,227,15,216,3,254,9,249,241,55,85,248,127,165,124,45,248,243,226,111,248,104,111,136,63,181,111,252,46,255,0,2,124,60,241,31,138,252,89,240,35,66,254,198,248,191,255,0,4,200,181,211,254,26,255,0,194,35,226,15,139,63,31,46,62,213,163,90,45,230,191,255,0,11,107,202,214,110,39,131,65,209,99,182,43,250,62,162,128,10,248,3,246,55,255,0,147,138,255,0,130,177,127,217,255,0,252,56,255,0,215,89,127,193,52,232,162,128,62,255,0,162,138,40,3,255,217
        };
    std::string strOsgData;
    for( size_t i = 0; i < 1308; ++i )
    {
        strOsgData.push_back( static_cast< char >( osgData[ i ] ) );
    }
    return strOsgData;
}
#endif

