#ifndef GETVESUITE_Measurement_Measurement_LINDICTR_H
#define GETVESUITE_Measurement_Measurement_LINDICTR_H
//Usage of this file
//std::istringstream tempStreamI( GetVESuite_whatever() );
//osg::ref_ptr< osg::Node > tempNode = osgDB::Registry::instance()->
//    getReaderWriterForExtension( "ive" )->readNode( tempStreamI ).getNode();
//osg::ref_ptr< osg::Image > tempImage = osgDB::Registry::instance()->
//    getReaderWriterForExtension( "png" )->readNode( tempStreamI ).getImage();

#include <string>

std::string GetVESuite_Measurement_Measurement_LINDICTR( void )
{
    unsigned char osgData[ 1550 ] = { 
        255,216,255,224,0,16,74,70,73,70,0,1,1,1,0,72,0,72,0,0,255,219,0,67,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,2,1,1,1,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,255,219,0,67,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,255,192,0,17,8,0,35,0,21,3,1,34,0,2,17,1,3,17,1,255,196,0,31,0,0,1,5,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,255,196,0,181,16,0,2,1,3,3,2,4,3,5,5,4,4,0,0,1,125,1,2,3,0,4,17,5,18,33,49,65,6,19,81,97,7,34,113,20,50,129,145,161,8,35,66,177,193,21,82,209,240,36,51,98,114,130,9,10,22,23,24,25,26,37,38,39,40,41,42,52,53,54,55,56,57,58,67,68,69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,170,178,179,180,181,182,183,184,185,186,194,195,196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,225,226,227,228,229,230,231,232,233,234,241,242,243,244,245,246,247,248,249,250,255,196,0,31,1,0,3,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,255,196,0,181,17,0,2,1,2,4,4,3,4,7,5,4,4,0,1,2,119,0,1,2,3,17,4,5,33,49,6,18,65,81,7,97,113,19,34,50,129,8,20,66,145,161,177,193,9,35,51,82,240,21,98,114,209,10,22,36,52,225,37,241,23,24,25,26,38,39,40,41,42,53,54,55,56,57,58,67,68,69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,130,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,170,178,179,180,181,182,183,184,185,186,194,195,196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,226,227,228,229,230,231,232,233,234,242,243,244,245,246,247,248,249,250,255,218,0,12,3,1,0,2,17,3,17,0,63,0,254,181,172,52,71,253,190,60,83,241,103,87,241,119,142,254,46,248,19,246,90,248,57,241,143,199,63,2,254,16,232,255,0,1,190,57,252,99,253,155,188,81,241,179,226,135,194,61,82,31,135,95,29,62,49,124,65,248,169,240,63,199,158,20,241,197,134,133,225,175,142,186,103,197,175,133,190,29,240,25,186,211,60,63,121,117,240,187,196,31,16,181,70,241,253,151,138,126,24,93,248,7,160,31,240,76,47,216,107,195,14,218,167,236,251,240,23,225,231,236,105,241,74,193,18,235,69,248,207,251,20,248,79,194,63,179,15,197,125,38,116,50,92,105,16,120,135,82,248,91,160,217,88,124,94,248,121,23,136,172,180,173,86,231,192,127,16,52,207,22,252,55,241,14,165,225,45,50,79,20,248,63,95,135,78,130,221,62,37,253,137,255,0,110,175,248,39,239,193,223,216,143,246,120,253,146,62,62,254,221,159,178,111,193,79,141,95,177,199,133,188,37,251,33,252,93,240,127,142,255,0,105,143,129,158,0,241,102,159,241,131,246,12,241,116,95,0,60,101,175,233,126,25,241,247,138,97,212,161,248,115,175,120,239,224,125,246,181,225,139,157,91,74,211,117,45,87,194,30,39,210,117,27,189,47,71,188,189,123,43,79,175,44,63,224,168,31,240,74,187,29,110,247,95,111,248,41,215,236,31,123,168,234,62,31,240,223,135,110,218,239,246,201,253,153,214,41,32,240,205,223,136,239,109,175,196,86,94,56,132,38,161,60,254,38,190,55,27,113,6,33,132,65,4,27,100,243,0,61,135,246,106,248,165,227,185,60,119,241,187,246,92,248,207,174,255,0,194,89,241,107,246,117,255,0,133,107,226,13,19,226,60,250,102,143,163,107,63,29,191,103,31,140,90,62,188,191,7,190,58,248,187,195,254,13,211,162,240,255,0,131,190,32,79,241,3,225,175,199,191,3,120,143,77,210,255,0,179,162,212,181,223,217,251,81,241,206,157,225,47,3,248,75,198,222,19,240,197,129,95,205,15,252,23,23,246,23,241,79,252,28,81,226,175,217,219,71,255,0,130,110,252,121,253,152,60,111,224,143,216,199,195,255,0,17,245,63,137,63,29,181,175,138,90,143,137,62,1,120,175,197,95,180,182,163,224,251,93,39,225,47,195,79,137,255,0,1,252,33,227,123,77,119,227,7,132,244,159,217,229,245,159,28,104,55,235,165,92,232,90,47,198,239,135,186,132,109,127,23,137,72,178,40,3,250,94,248,165,251,61,124,83,182,241,222,187,241,123,246,73,248,183,240,255,0,224,39,196,223,136,127,217,150,191,26,116,255,0,138,95,6,124,71,241,231,224,159,197,207,236,29,31,79,208,188,49,241,11,93,248,91,224,255,0,141,255,0,14,181,13,27,246,128,210,124,63,161,104,94,31,181,241,142,157,226,123,127,237,111,8,89,219,248,111,198,58,63,138,224,240,199,195,91,175,0,124,191,240,211,227,103,252,20,47,246,165,241,167,237,11,240,100,248,67,246,96,253,140,45,127,103,95,140,26,47,193,111,138,223,24,252,1,241,119,199,223,182,95,196,45,99,81,241,47,192,47,129,255,0,30,110,44,62,4,120,35,226,39,236,213,240,179,195,190,7,241,0,248,119,251,71,120,86,231,74,241,207,139,199,141,244,173,27,196,222,6,186,211,53,95,131,254,49,209,47,215,80,135,245,126,190,0,253,141,255,0,228,226,191,224,172,95,246,127,255,0,14,63,245,214,95,240,77,58,0,250,127,224,167,193,79,10,252,13,240,174,161,161,104,90,135,136,60,85,226,79,21,120,130,235,199,63,20,254,41,248,230,235,78,213,62,38,124,102,248,153,170,105,218,86,147,173,124,73,248,147,173,105,58,85,133,165,231,136,38,210,52,29,3,77,177,177,211,108,52,207,15,120,103,195,222,24,209,60,31,224,253,19,195,222,13,240,247,135,252,63,165,149,236,20,80,1,95,0,126,198,255,0,242,113,95,240,86,47,251,63,255,0,135,31,250,235,47,248,38,157,20,80,7,223,244,81,69,0,127,255,217
        };
    std::string strOsgData;
    for( size_t i = 0; i < 1550; ++i )
    {
        strOsgData.push_back( static_cast< char >( osgData[ i ] ) );
    }
    return strOsgData;
}
#endif

