#ifndef GETVESUITE_Measurement_Measurement_MEASURE1_H
#define GETVESUITE_Measurement_Measurement_MEASURE1_H
//Usage of this file
//std::istringstream tempStreamI( GetVESuite_whatever() );
//osg::ref_ptr< osg::Node > tempNode = osgDB::Registry::instance()->
//    getReaderWriterForExtension( "ive" )->readNode( tempStreamI ).getNode();
//osg::ref_ptr< osg::Image > tempImage = osgDB::Registry::instance()->
//    getReaderWriterForExtension( "png" )->readNode( tempStreamI ).getImage();

#include <string>

std::string GetVESuite_Measurement_Measurement_MEASURE1( void )
{
    unsigned char osgData[ 1470 ] = { 
        255,216,255,224,0,16,74,70,73,70,0,1,1,1,0,72,0,72,0,0,255,219,0,67,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,2,1,1,1,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,255,219,0,67,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,255,192,0,17,8,0,38,0,21,3,1,34,0,2,17,1,3,17,1,255,196,0,31,0,0,1,5,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,255,196,0,181,16,0,2,1,3,3,2,4,3,5,5,4,4,0,0,1,125,1,2,3,0,4,17,5,18,33,49,65,6,19,81,97,7,34,113,20,50,129,145,161,8,35,66,177,193,21,82,209,240,36,51,98,114,130,9,10,22,23,24,25,26,37,38,39,40,41,42,52,53,54,55,56,57,58,67,68,69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,170,178,179,180,181,182,183,184,185,186,194,195,196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,225,226,227,228,229,230,231,232,233,234,241,242,243,244,245,246,247,248,249,250,255,196,0,31,1,0,3,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,255,196,0,181,17,0,2,1,2,4,4,3,4,7,5,4,4,0,1,2,119,0,1,2,3,17,4,5,33,49,6,18,65,81,7,97,113,19,34,50,129,8,20,66,145,161,177,193,9,35,51,82,240,21,98,114,209,10,22,36,52,225,37,241,23,24,25,26,38,39,40,41,42,53,54,55,56,57,58,67,68,69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,130,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,170,178,179,180,181,182,183,184,185,186,194,195,196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,226,227,228,229,230,231,232,233,234,242,243,244,245,246,247,248,249,250,255,218,0,12,3,1,0,2,17,3,17,0,63,0,254,182,116,221,55,197,95,183,159,138,190,45,95,95,124,90,248,193,240,179,246,73,248,89,241,131,199,159,0,252,37,225,47,128,126,60,212,126,13,248,171,246,157,241,79,193,173,74,63,7,252,112,248,133,241,11,227,135,131,211,77,248,159,240,155,195,254,19,253,167,188,55,227,95,3,120,127,195,254,6,214,252,3,115,168,220,252,2,241,23,136,124,65,226,31,136,255,0,14,254,35,232,58,14,139,208,15,248,37,247,236,61,225,127,248,156,254,207,223,0,190,31,254,198,127,19,109,63,125,161,124,106,253,138,124,35,225,47,217,135,226,158,153,117,7,250,86,153,105,175,234,191,11,124,63,99,167,252,96,248,127,15,136,45,244,93,90,235,192,94,63,211,60,91,240,227,196,26,143,133,180,169,124,85,224,253,122,29,62,222,221,19,254,9,98,62,207,255,0,4,251,253,151,180,61,87,230,248,155,224,159,0,92,124,52,253,164,166,159,253,43,88,189,253,178,126,23,120,159,95,248,117,251,109,106,62,46,241,16,222,191,16,60,127,117,251,93,120,95,227,85,199,136,252,89,21,214,165,7,140,53,235,157,71,197,54,250,206,183,6,177,30,175,123,250,1,64,31,32,126,205,95,20,188,119,39,142,254,55,126,203,159,25,245,223,248,75,62,45,126,206,191,240,173,188,65,162,124,71,159,76,209,244,109,99,227,191,236,227,241,139,71,215,151,224,247,199,95,23,120,127,193,186,124,94,31,240,119,196,9,254,32,124,53,248,247,224,111,17,233,186,95,246,116,90,150,187,251,63,106,62,58,211,188,35,224,127,9,120,219,194,126,24,176,43,249,225,255,0,131,137,254,7,127,193,75,127,105,47,143,191,179,255,0,131,191,224,143,26,223,198,15,14,254,208,127,12,190,16,106,254,37,253,179,239,62,1,126,208,154,79,236,167,226,173,75,224,215,196,207,26,106,90,95,236,103,109,241,11,199,90,231,196,207,7,69,241,111,195,246,222,54,248,97,251,106,55,135,180,152,53,13,106,79,9,92,234,94,34,188,158,207,70,95,23,65,62,180,80,7,238,246,169,224,255,0,142,223,178,119,142,254,41,120,211,224,15,193,223,248,105,15,128,191,25,254,32,106,31,24,188,109,240,43,194,127,16,188,29,240,211,227,103,193,239,138,126,36,209,244,47,15,248,230,235,246,103,240,215,196,155,157,15,225,199,143,124,1,227,95,25,89,219,248,243,197,186,63,136,124,95,240,223,81,209,252,95,174,252,77,241,226,120,135,226,86,187,227,251,31,8,232,60,254,141,255,0,5,34,240,95,198,61,75,197,158,2,253,146,126,3,254,211,255,0,30,126,50,120,59,196,22,222,15,241,119,133,126,32,126,206,95,31,127,99,159,135,191,8,252,65,170,248,91,195,62,42,211,53,31,142,255,0,23,127,107,127,133,94,19,180,240,167,135,237,244,143,136,31,12,53,77,87,70,240,165,135,142,126,40,31,12,248,250,215,196,222,24,248,103,226,189,54,11,175,47,244,126,190,0,253,141,255,0,228,226,191,224,172,95,246,127,255,0,14,63,245,214,95,240,77,58,0,246,15,217,203,224,167,138,188,9,168,252,85,248,197,241,127,80,240,254,181,251,65,254,208,222,32,240,223,137,62,35,31,11,221,106,58,239,130,254,23,248,87,193,190,21,176,240,175,195,95,217,203,225,31,138,188,81,165,90,107,122,207,193,255,0,10,219,39,137,117,111,62,254,223,75,182,215,252,127,241,99,226,39,196,27,15,10,248,33,124,117,113,225,13,24,175,167,232,160,2,190,0,253,141,255,0,228,226,191,224,172,95,246,127,255,0,14,63,245,214,95,240,77,58,40,160,15,191,232,162,138,0,255,217
        };
    std::string strOsgData;
    for( size_t i = 0; i < 1470; ++i )
    {
        strOsgData.push_back( static_cast< char >( osgData[ i ] ) );
    }
    return strOsgData;
}
#endif

