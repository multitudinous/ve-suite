#ifndef GETVESUITE_Measurement_Measurement_TCONTLR_H
#define GETVESUITE_Measurement_Measurement_TCONTLR_H
//Usage of this file
//std::istringstream tempStreamI( GetVESuite_whatever() );
//osg::ref_ptr< osg::Node > tempNode = osgDB::Registry::instance()->
//    getReaderWriterForExtension( "ive" )->readNode( tempStreamI ).getNode();
//osg::ref_ptr< osg::Image > tempImage = osgDB::Registry::instance()->
//    getReaderWriterForExtension( "png" )->readNode( tempStreamI ).getImage();

#include <string>

std::string GetVESuite_Measurement_Measurement_TCONTLR( void )
{
    unsigned char osgData[ 1546 ] = { 
        255,216,255,224,0,16,74,70,73,70,0,1,1,1,0,72,0,72,0,0,255,219,0,67,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,2,1,1,1,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,255,219,0,67,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,255,192,0,17,8,0,35,0,21,3,1,34,0,2,17,1,3,17,1,255,196,0,31,0,0,1,5,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,255,196,0,181,16,0,2,1,3,3,2,4,3,5,5,4,4,0,0,1,125,1,2,3,0,4,17,5,18,33,49,65,6,19,81,97,7,34,113,20,50,129,145,161,8,35,66,177,193,21,82,209,240,36,51,98,114,130,9,10,22,23,24,25,26,37,38,39,40,41,42,52,53,54,55,56,57,58,67,68,69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,170,178,179,180,181,182,183,184,185,186,194,195,196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,225,226,227,228,229,230,231,232,233,234,241,242,243,244,245,246,247,248,249,250,255,196,0,31,1,0,3,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,255,196,0,181,17,0,2,1,2,4,4,3,4,7,5,4,4,0,1,2,119,0,1,2,3,17,4,5,33,49,6,18,65,81,7,97,113,19,34,50,129,8,20,66,145,161,177,193,9,35,51,82,240,21,98,114,209,10,22,36,52,225,37,241,23,24,25,26,38,39,40,41,42,53,54,55,56,57,58,67,68,69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,130,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,170,178,179,180,181,182,183,184,185,186,194,195,196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,226,227,228,229,230,231,232,233,234,242,243,244,245,246,247,248,249,250,255,218,0,12,3,1,0,2,17,3,17,0,63,0,254,180,237,116,149,253,188,124,71,241,123,94,241,175,143,254,44,252,61,253,148,254,10,252,94,241,231,193,31,132,250,111,192,191,142,255,0,24,127,102,175,17,252,103,248,151,240,127,83,139,225,239,199,143,140,223,17,190,44,124,18,241,239,132,252,111,166,248,123,195,31,28,244,191,139,159,11,188,61,224,86,186,210,252,61,117,115,240,183,196,63,16,245,86,241,245,143,138,62,24,93,248,7,104,127,193,51,127,96,255,0,12,181,150,175,251,61,252,15,248,105,251,26,124,80,154,54,187,240,151,198,143,216,163,195,94,12,253,152,190,42,199,45,164,75,169,105,240,234,90,167,194,221,14,203,79,248,213,240,238,223,89,139,67,214,111,60,7,227,205,51,197,255,0,13,245,251,255,0,12,233,51,120,175,193,250,245,189,133,180,11,241,135,236,85,251,117,255,0,193,63,62,16,254,194,95,6,255,0,99,95,218,3,246,233,253,146,254,11,252,96,253,151,190,18,93,126,193,159,27,60,33,227,207,218,99,224,127,195,255,0,24,233,95,18,191,100,159,237,127,217,47,226,79,137,244,31,13,248,239,197,144,106,54,190,10,214,124,81,240,183,90,215,252,29,119,172,233,54,55,186,151,134,60,69,162,234,154,142,139,167,79,119,54,155,111,245,210,255,0,193,79,191,224,148,241,120,133,188,71,7,252,20,211,246,11,130,230,77,47,77,209,231,177,143,246,200,253,154,91,78,158,215,72,151,91,155,77,111,42,111,29,52,182,183,17,63,136,117,49,186,9,98,222,178,34,74,29,16,40,0,246,31,217,167,226,151,142,228,241,223,198,239,217,119,227,62,187,255,0,9,103,197,175,217,215,254,21,175,136,52,79,136,243,233,154,62,139,172,252,119,253,156,126,49,104,218,242,252,30,248,235,226,239,15,248,55,79,139,195,254,14,248,129,63,196,15,134,191,30,252,13,226,61,55,76,254,206,139,82,215,191,103,237,71,199,90,119,132,124,15,225,47,27,120,79,195,22,5,127,52,63,240,92,95,216,95,197,95,240,113,71,138,191,103,109,31,254,9,185,241,235,246,95,241,191,130,127,99,31,15,252,71,212,190,36,252,118,214,254,40,234,62,37,248,5,226,191,21,126,210,218,151,132,45,116,159,132,159,13,62,39,252,7,240,135,141,237,53,223,140,30,19,210,63,103,150,214,60,113,160,223,166,149,115,161,104,191,27,190,30,106,17,181,252,94,37,197,145,64,31,210,247,197,47,217,235,226,157,183,142,245,223,139,223,178,79,197,191,135,255,0,1,62,38,252,67,254,204,181,248,211,167,252,82,248,51,226,47,143,63,4,254,46,127,96,232,250,126,133,225,159,136,58,239,194,223,7,252,111,248,117,168,104,223,31,244,159,15,232,90,23,135,237,124,99,167,120,158,223,251,91,194,22,118,254,27,241,142,143,226,184,60,49,240,214,235,192,31,47,252,52,248,217,255,0,5,11,253,169,124,105,251,66,252,25,62,16,253,151,255,0,99,11,111,217,219,227,6,137,240,91,226,191,198,63,0,124,93,241,247,237,151,241,11,87,212,188,73,240,11,224,127,199,171,139,15,129,30,8,248,137,251,53,124,44,240,239,129,252,64,191,15,63,104,239,10,220,233,94,57,241,120,241,190,149,163,120,155,192,215,90,102,171,240,127,198,58,37,250,234,16,254,175,215,192,31,177,191,252,156,87,252,21,139,254,207,255,0,225,207,254,186,203,254,9,167,64,31,79,252,20,248,41,225,95,129,190,21,212,52,45,11,80,241,7,138,188,73,226,175,16,93,120,231,226,159,197,63,28,221,105,218,167,196,207,140,223,19,53,77,59,74,210,117,175,137,63,18,117,173,39,74,176,180,188,241,4,218,70,131,160,105,182,54,58,109,134,153,225,239,12,248,123,195,26,39,131,252,31,162,120,123,193,190,30,240,255,0,135,244,178,189,130,138,0,43,224,15,216,223,254,78,43,254,10,197,255,0,103,255,0,240,227,255,0,93,101,255,0,4,211,162,138,0,251,254,138,40,160,15,255,217
        };
    std::string strOsgData;
    for( size_t i = 0; i < 1546; ++i )
    {
        strOsgData.push_back( static_cast< char >( osgData[ i ] ) );
    }
    return strOsgData;
}
#endif

