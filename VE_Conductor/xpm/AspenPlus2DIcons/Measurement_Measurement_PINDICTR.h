#ifndef GETVESUITE_Measurement_Measurement_PINDICTR_H
#define GETVESUITE_Measurement_Measurement_PINDICTR_H
//Usage of this file
//std::istringstream tempStreamI( GetVESuite_whatever() );
//osg::ref_ptr< osg::Node > tempNode = osgDB::Registry::instance()->
//    getReaderWriterForExtension( "ive" )->readNode( tempStreamI ).getNode();
//osg::ref_ptr< osg::Image > tempImage = osgDB::Registry::instance()->
//    getReaderWriterForExtension( "png" )->readNode( tempStreamI ).getImage();

#include <string>

std::string GetVESuite_Measurement_Measurement_PINDICTR( void )
{
    unsigned char osgData[ 1552 ] = { 
        255,216,255,224,0,16,74,70,73,70,0,1,1,1,0,72,0,72,0,0,255,219,0,67,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,2,1,1,1,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,255,219,0,67,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,255,192,0,17,8,0,35,0,21,3,1,34,0,2,17,1,3,17,1,255,196,0,31,0,0,1,5,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,255,196,0,181,16,0,2,1,3,3,2,4,3,5,5,4,4,0,0,1,125,1,2,3,0,4,17,5,18,33,49,65,6,19,81,97,7,34,113,20,50,129,145,161,8,35,66,177,193,21,82,209,240,36,51,98,114,130,9,10,22,23,24,25,26,37,38,39,40,41,42,52,53,54,55,56,57,58,67,68,69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,170,178,179,180,181,182,183,184,185,186,194,195,196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,225,226,227,228,229,230,231,232,233,234,241,242,243,244,245,246,247,248,249,250,255,196,0,31,1,0,3,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,255,196,0,181,17,0,2,1,2,4,4,3,4,7,5,4,4,0,1,2,119,0,1,2,3,17,4,5,33,49,6,18,65,81,7,97,113,19,34,50,129,8,20,66,145,161,177,193,9,35,51,82,240,21,98,114,209,10,22,36,52,225,37,241,23,24,25,26,38,39,40,41,42,53,54,55,56,57,58,67,68,69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,130,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,170,178,179,180,181,182,183,184,185,186,194,195,196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,226,227,228,229,230,231,232,233,234,242,243,244,245,246,247,248,249,250,255,218,0,12,3,1,0,2,17,3,17,0,63,0,254,180,173,116,149,253,188,124,71,241,123,94,241,175,143,254,44,252,62,253,148,254,10,252,95,241,231,193,31,132,250,111,192,191,142,255,0,24,127,102,175,17,252,103,248,151,240,127,83,139,225,231,199,143,140,255,0,17,190,44,124,18,241,239,132,252,111,166,248,123,195,31,28,244,191,139,159,11,188,61,224,86,186,210,252,61,117,115,240,183,196,63,16,245,86,241,253,143,138,62,24,93,248,7,164,31,240,76,47,216,107,195,18,54,169,251,62,124,5,248,123,251,26,124,82,177,84,186,209,126,51,254,197,62,19,240,143,236,195,241,95,73,153,26,75,141,30,223,196,58,151,194,221,2,202,195,226,255,0,195,216,188,69,101,165,106,183,62,3,248,129,166,120,179,225,191,136,117,47,9,105,146,120,171,193,250,252,58,116,22,233,241,47,236,79,251,116,127,193,62,126,15,254,196,127,179,199,236,141,251,65,126,221,31,178,111,193,175,140,191,177,215,133,188,37,251,33,124,98,240,87,142,255,0,105,239,130,223,13,252,91,105,241,115,246,14,241,124,95,179,255,0,141,117,173,47,64,241,135,140,108,245,139,47,135,62,32,241,207,192,253,67,89,240,197,222,161,167,233,58,190,165,225,15,20,105,58,156,250,126,137,127,120,214,150,127,91,233,63,240,83,111,248,36,230,133,170,92,106,90,103,252,20,167,246,4,180,73,124,53,225,127,9,195,165,197,251,100,126,205,201,165,216,105,62,17,184,241,20,250,82,89,64,158,62,18,69,38,223,18,93,71,38,233,94,63,46,210,1,28,113,178,200,210,128,123,55,236,213,241,75,199,114,120,239,227,119,236,187,241,159,93,255,0,132,179,226,215,236,235,255,0,10,219,95,209,62,35,205,166,104,218,54,179,241,219,246,113,248,197,163,107,203,240,123,227,175,139,188,63,224,221,62,47,15,248,59,226,4,255,0,16,62,27,124,123,240,55,136,244,221,51,251,58,45,75,93,253,159,181,31,29,105,222,17,240,63,132,188,109,225,63,12,88,21,252,208,255,0,193,113,127,97,127,20,255,0,193,197,30,42,253,157,180,127,248,38,239,199,175,217,135,198,222,9,253,140,60,63,241,31,82,248,147,241,223,90,248,163,168,248,151,224,23,139,60,85,251,75,106,62,15,181,210,126,18,252,52,248,159,240,31,194,94,55,180,215,62,48,120,79,73,253,158,91,88,241,198,131,126,154,85,206,133,162,252,110,248,123,168,68,215,241,120,147,22,69,0,127,75,223,20,191,103,175,138,118,222,59,215,126,47,126,201,63,22,254,31,252,4,248,155,241,15,251,50,215,227,78,159,241,75,224,207,136,190,60,252,19,248,185,253,131,163,233,250,23,134,126,32,235,191,11,124,31,241,191,225,214,161,163,124,127,210,124,63,161,104,94,31,181,241,142,157,226,123,127,237,111,8,89,219,248,111,198,58,63,138,224,240,199,195,91,175,0,124,191,240,211,227,103,252,20,47,246,165,241,167,237,11,240,100,248,71,246,96,253,140,45,191,103,95,140,26,47,193,111,138,255,0,24,252,1,241,119,199,223,182,95,196,45,95,81,241,47,192,47,129,255,0,30,110,44,62,4,120,35,226,39,236,213,240,179,195,190,7,241,2,252,59,253,163,188,43,115,165,120,231,197,227,198,250,86,141,226,111,3,93,105,154,175,193,255,0,24,232,151,235,168,67,250,191,95,0,126,198,255,0,242,113,95,240,86,47,251,63,255,0,135,63,250,235,47,248,38,157,0,125,65,240,83,224,167,133,126,7,120,86,255,0,66,208,181,15,16,120,171,196,158,42,241,5,223,142,126,41,252,83,241,205,222,157,170,124,76,248,203,241,51,84,211,180,173,39,90,248,147,241,39,90,210,116,171,11,75,207,16,77,164,232,90,6,155,99,99,166,216,105,158,30,240,207,135,188,49,162,120,63,193,250,39,135,188,27,225,239,15,248,127,75,43,215,232,160,2,190,0,253,141,255,0,228,226,191,224,172,95,246,127,255,0,14,63,245,214,95,240,77,58,40,160,15,191,232,162,138,0,255,217
        };
    std::string strOsgData;
    for( size_t i = 0; i < 1552; ++i )
    {
        strOsgData.push_back( static_cast< char >( osgData[ i ] ) );
    }
    return strOsgData;
}
#endif

