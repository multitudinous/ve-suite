<?xml version="1.0" encoding="ISO-8859-1" standalone="no" ?>
<!--Shader taken from 3Dlabs.com examples-->
<Program>
        <name>Toon Shading</name>
        <vertexShader>
          <type>Vertex</type>
          <shaderCode>
              varying vec3 Normal;
              varying vec4 vertColor;
              void main(void)
              {
	         Normal = normalize(gl_NormalMatrix * gl_Normal);
                 vertColor = gl_Color;
	         gl_Position = gl_ModelViewProjectionMatrix * gl_Vertex;
              }
           </shaderCode>
        </vertexShader>
        <fragmentShader>
          <type>Fragment</type>
          <uniform>
            <name>Edge</name>
            <type>Float</type>
            <size>1</size>
            <textureUnit>0</textureUnit>
            <value>0.5</value>
          </uniform>
          <uniform>
            <name>Phong</name>
            <type>Float</type>
            <size>1</size>
            <textureUnit>0</textureUnit>
            <value>0.8999999762</value>
          </uniform>
          <shaderCode>
                             uniform float Edge;
                             uniform float Phong;
                             varying vec3 Normal;
                             varying vec4 vertColor;

                             void main (void)
		             {
                                vec3 DiffuseColor = vertColor.xyz;
                                vec3 PhongColor = 1.25*DiffuseColor;
	                        vec3 color = DiffuseColor;
	                        float f = dot(vec3(0,0,1),Normal);
		                float edgeFactor = step(Edge,abs(f));
		                color = (edgeFactor == 0.0)?vec3(0):color;

		                float phongFactor = step(Phong,f);
		                color = (phongFactor == 1.0 )?PhongColor:color;

	                        gl_FragColor = vec4(color, 1);
                             }
	                 </shaderCode>
        </fragmentShader>
    </Program>
