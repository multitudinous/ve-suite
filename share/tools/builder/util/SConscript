##Builds a multitude of utilities
import os, sys, string
pj = os.path.join

Import('baseEnv ves_pkg LIBDIR GetPlatform buildDir vtk_options')

addNormals2Poly = Split("""
   addNormals2Poly.cxx
""")

appendVTK = Split("""
   appendVTK.cxx
""")

combineFluentParticleFile = Split("""
   CombinePartFiles.cxx
""")

compareScalars = Split("""
    compareScalars.cxx
""")

convertCellDataToPointData = Split("""
   convertCellDataToPointData.cxx
""")

convertSurfaceFileToStl = Split("""
   convertSurfaceFileToStl.cxx 
""")

convertVTK2Ascii = Split("""
   convertVTK2Ascii.cxx
""")

convertVTK2Binary = Split("""
   convertVTK2Binary.cxx
""")

createMiniFlowdata = Split("""
   createMiniFlowdata.cxx
""")

makeVtkSurface = Split("""
   makeVtkSurface.cxx
""")

mergeVertices = Split("""
   mergeVertices.cxx
""")

meshViewer = Split("""
   meshViewer.cxx
""")

moveFieldToPointData = Split("""
   moveFieldToPointData.cxx
""")

removeVtkCellsOutsideBox = Split("""
   removeVtkCellsOutsideBox.cxx
""")

removeVtkPointData = Split("""
   removeVtkPointData.cxx
""")

scaleVTK = Split("""
   scaleVTK.cxx
""")

transformVTK = Split("""
   transformVTK.cxx 
""")

whatIsScalarRange = Split("""
   whatIsScalarRange.cxx
""")

env = ves_pkg.getEnv().Copy()
env.Append(LIBPATH = [pj('#', buildDir, 'VE_Xplorer','Utilities')],
            LIBS = ['VE_UtilLib'])
vtk_options.apply( env )
env.ParseConfig('flagpoll Boost.Filesystem --atleast-version=%s --libs --cflags'%env['BoostVersion'])

norm2poly = ves_pkg.createProgram('addNormals2Poly.exe', env, 'bin')
norm2poly.addSources( addNormals2Poly )
norm2poly.build()

append = ves_pkg.createProgram('appendVTK', env, 'bin')
append.addSources( appendVTK )
append.build()

fluentPart = ves_pkg.createProgram('combineFluentParticleFile.exe', env, 'bin')
fluentPart.addSources( combineFluentParticleFile )
fluentPart.build()

comparScal = ves_pkg.createProgram('compareScalars.exe', env, 'bin')
comparScal.addSources( compareScalars )
comparScal.build()

cel2point = ves_pkg.createProgram('convertCellDataToPointData.exe', env, 'bin')
cel2point.addSources( convertCellDataToPointData )
cel2point.build()

surf2stl = ves_pkg.createProgram('convertSurfaceFileToStl.exe', env, 'bin')
surf2stl.addSources( convertSurfaceFileToStl )
surf2stl.build()

vtk2ascii = ves_pkg.createProgram('convertVTK2Ascii.exe', env, 'bin')
vtk2ascii.addSources( convertVTK2Ascii )
vtk2ascii.build()

vtk2bin = ves_pkg.createProgram('convertVTK2Binary.exe', env, 'bin')
vtk2bin.addSources( convertVTK2Binary )
vtk2bin.build()

mini = ves_pkg.createProgram('createMiniFlowdata.exe', env, 'bin')
mini.addSources( createMiniFlowdata )
mini.build()

vtkSurf = ves_pkg.createProgram('makeVtkSurface.exe', env, 'bin')
vtkSurf.addSources( makeVtkSurface )
vtkSurf.build()

merge = ves_pkg.createProgram('mergeVertices.exe', env, 'bin')
merge.addSources( mergeVertices )
merge.build()

mesh = ves_pkg.createProgram('meshViewer.exe', env, 'bin')
mesh.addSources( meshViewer )
mesh.build()

fieldData = ves_pkg.createProgram('moveFieldToPointData.exe', env, 'bin')
fieldData.addSources( moveFieldToPointData )
fieldData.build()

removeCells = ves_pkg.createProgram('removeVtkCellsOutsideBox.exe', env, 'bin')
removeCells.addSources( removeVtkCellsOutsideBox )
removeCells.build()

removePoint = ves_pkg.createProgram('removeVtkPointData.exe', env, 'bin')
removePoint.addSources( removeVtkPointData )
removePoint.build()

scale = ves_pkg.createProgram('scaleVTK.exe', env, 'bin')
scale.addSources( scaleVTK )
scale.build()

trans = ves_pkg.createProgram('transformVTK.exe', env, 'bin')
trans.addSources( transformVTK )
trans.build()

scaleRange = ves_pkg.createProgram('whatIsScalarRange.exe', env, 'bin')
scaleRange.addSources( whatIsScalarRange )
scaleRange.build()
