##Builds vtkTo3DTexture
import os, sys, string
pj = os.path.join

Import('baseEnv ves_pkg LIBDIR GetPlatform vtk_options buildDir wxwidgets_options boost_options PREFIX')

srcs = Split("""
   flowTexture.cxx 
   tcApp.cxx
   tcFrame.cxx 
   textureCreator.cxx
""")
headers = Split("""
   flowTexture.h 
   tcApp.h
   tcFrame.h 
   textureCreator.h
""")
##srcs = map(lambda s: pj('#', 'VE_Builder', 'vtkTo3DTexture', 'tcGUI', s), srcs)

programName = 'vtkTo3DTexture'

env = ves_pkg.getEnv().Copy()

if env[ 'UseMPI' ] == 'yes':
    baseEnv.Append( CPPDEFINES = ['USE_MPI'] )
    programName += 'MPI'

env.Append(LIBPATH = [pj('#', buildDir, 'src','ves','xplorer','util')],
            LIBS = ['ves_xplorer_util'])
boost_options.apply( env )
wxwidgets_options.apply( env )
vtk_options.apply( env )
prog = ves_pkg.createProgram( programName + env["PROGSUFFIX"], env, 'bin')
prog.addSources( srcs )
prog.addHeaders( headers )
prog.build()

if GetPlatform() == "darwin":
   idlCmd = '/Developer/Tools/Rez -d __DARWIN__ -t APPL Carbon.r -o ${SOURCE}'
   bld = Builder(action = idlCmd )
   env.Append(BUILDERS = {'apple_rez': bld})
   if 'install' in COMMAND_LINE_TARGETS:
      conductorTarget = pj(PREFIX,'bin','Texture' + env["PROGSUFFIX"])
      winTarget = pj(PREFIX,'bin','vtkTo3DTexture' + env["PROGSUFFIX"])
   else:
      conductorTarget = pj( '#', buildDir,'share','tools','builder','vtkto3dtexture','Texture' + env["PROGSUFFIX"])
      winTarget = pj( '#', buildDir,'share','tools','builder','vtkto3dtexture','vtkTo3DTexture' + env["PROGSUFFIX"])

   env.apple_rez( conductorTarget, winTarget)
   env.AddPostAction( conductorTarget,Copy('$TARGET','$SOURCE'))
