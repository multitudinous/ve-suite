##Builds WinClient program
import os, sys, string
import SConsAddons.Util as sca_util
pj = os.path.join

Import('baseEnv ves_pkg execOsgPatTag buildDir vtk_options osg_options xerces_options')
openDir = os.path.abspath(pj('/', 'home', 'users', 'jbkoch', 'TSVEG', 'netl', 'ConstructionBots', 'ConstructionBotsGP'))

sources = sca_util.getSourcesRecursive( openDir )
headers = sca_util.getHeadersRecursive( openDir )

lib_env = ves_pkg.getEnv().Copy()
lib_env.Append(LIBS = ['GraphicalPlugin%s' %(execOsgPatTag)])
lib_env.Append(LIBPATH = [pj(os.getenv('VE_SUITE_HOME'), buildDir, 'VE_Xplorer','GraphicalPlugin')])
lib_env.Append(CPPPATH = [pj(os.getenv('VE_SUITE_HOME'), 'external', 'osgOQ', 'include')])

lib_env.ParseConfig('flagpoll vrjuggler --libs --cflags')
lib_env.ParseConfig('flagpoll Boost.Filesystem --libs --cflags')
lib_env.ParseConfig('flagpoll bullet --libs --cflags')

vtk_options.apply( lib_env )
osg_options.apply( lib_env )
xerces_options.apply( lib_env )

if baseEnv['StaticOnly'] == "no":
   lib = ves_pkg.createStaticAndSharedLibrary('ConstructionBotsGP%s' %(execOsgPatTag), lib_env,
   	pj( '/', 'home', 'users', 'jbkoch', 'TSVEG', 'netl', 'ConstructionBots', 'Plugins', 'GE', 'linux-i686' ) )
else:
   lib = ves_pkg.createStaticLibrary('ConstructionBotsGP%s' %(execOsgPatTag), lib_env, 
		pj( '/', 'home', 'users', 'jbkoch', 'TSVEG', 'netl', 'ConstructionBots', 'Plugins', 'GE', 'linux-i686' ) )
   

lib.addSources(sources)
lib.addHeaders(headers,  pj( 'Plugins', 'GE'))
lib.build()
