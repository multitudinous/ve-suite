##Builds WinClient program
import os, sys, string
import SConsAddons.Util as sca_util
pj = os.path.join

Import('baseEnv ves_pkg execOsgPatTag buildDir wxwidgets_options osg_options xerces_options')
openDir = os.path.abspath(pj('/', 'home', 'users', 'jbkoch', 'TSVEG', 'netl', 'ConstructionBots', 'ConstructionBotsUI'))

sources = sca_util.getSourcesRecursive( openDir )
headers = sca_util.getHeadersRecursive( openDir )

lib_env = ves_pkg.getEnv().Copy()
lib_env.Append(LIBS = ['VE_ConductorLib', 'GUIPlugin'])
lib_env.Append(LIBPATH = [pj(os.getenv('VE_SUITE_HOME'), buildDir, 'VE_Conductor','Network'),
                          pj(os.getenv('VE_SUITE_HOME'), buildDir, 'VE_Conductor','GUIPlugin')])
lib_env.Append(CPPPATH = [pj(os.getenv('VE_SUITE_HOME'), 'VE_Conductor', 'Framework')])

lib_env.ParseConfig('flagpoll vrjuggler --libs --cflags')
lib_env.ParseConfig('flagpoll Boost.Filesystem --libs --cflags')

lib_env.ParseConfig('flagpoll TAO \
                          ACE TAO_IORInterceptor TAO_ObjRefTemplate TAO_Valuetype \
                          TAO_CosNaming TAO_Svc_Utils TAO_IORTable TAO_Messaging \
                          TAO_PortableServer TAO_BiDirGIOP TAO_AnyTypeCode \
                          --libs --cflags')

osg_options.apply( lib_env )
xerces_options.apply( lib_env )
wxwidgets_options.apply( lib_env )

if baseEnv['StaticOnly'] == "no":
   lib = ves_pkg.createStaticAndSharedLibrary('ConstructionBotsUI%s' %(execOsgPatTag), lib_env,
   	pj( '/', 'home', 'users', 'jbkoch', 'TSVEG', 'netl', 'ConstructionBots', 'Plugins', 'UI', 'linux-i686' ) )
else:
   lib = ves_pkg.createStaticLibrary('ConstructionBotsUI%s' %(execOsgPatTag), lib_env, 
		pj( '/', 'home', 'users', 'jbkoch', 'TSVEG', 'netl', 'ConstructionBots', 'Plugins', 'UI', 'linux-i686' ) )
   
lib.addSources(sources)
lib.addHeaders(headers,  pj( 'Plugins', 'UI'))
lib.build()
