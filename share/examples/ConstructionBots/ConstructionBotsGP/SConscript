##Builds ConstructionBots Graphical Plugin
import os, sys, string
import SConsAddons.Util as sca_util
import distutils.util
pj = os.path.join

host_type = distutils.util.get_platform()

Import( 'baseEnv ves_pkg buildDir RootDir gmtl_options' )
Import( 'vrjuggler_options osg_options osgal_options' )
Import( 'xerces_options vtk_options GetPlatform osgworks_options' )
Import('ApplyBulletVars bullet_options osgbullet_options')

openDir = os.path.abspath( pj( RootDir, 'share', 'examples', 'ConstructionBots', 'ConstructionBotsGP' ) )
sources = sca_util.getSourcesRecursive( openDir )
headers = sca_util.getHeadersRecursive( openDir )

lib_env = ves_pkg.getEnv().Clone()
lib_env.Append( LIBS = [ 'ves_open_xml',
                         'ves_xplorer',
                         'ves_xplorer_scenegraph' ] )
lib_env.Append( LIBPATH = [ pj( '#', buildDir, 'src', 'ves', 'open', 'xml' ),
                            pj( '#', buildDir, 'src', 'ves', 'xplorer' ),
                            pj( '#', buildDir, 'src', 'ves', 'xplorer', 'scenegraph' ) ] )

#lib_env.Append(LIBS = ['bullet'])
#lib_env.Append(LIBPATH = [pj('#',buildDir,'external',bulletBaseVar)])
lib_env.Append( CPPDEFINES = [ 'VE_USER_PLUGIN_LIBRARY' ] )
ApplyBulletVars(lib_env)

gmtl_options.apply( lib_env )
vrjuggler_options.apply( lib_env )
osg_options.apply( lib_env )
if osgal_options.isAvailable():
   osgal_options.apply( lib_env )
   lib_env.Append( CPPDEFINES = [ 'VE_SOUND' ] )

xerces_options.apply( lib_env )
vtk_options.apply( lib_env )
osgworks_options.apply( lib_env )
osgbullet_options.apply( lib_env )
bullet_options.apply( lib_env )

lib_env.Append( CPPDEFINES = [ ] )
if GetPlatform() == 'win32':
   lib_env['no_import_lib'] = 1
   lib_env['WINDOWS_INSERT_MANIFEST'] = False
   #LIBCPMT is being linked in via a third party library so there is
   # no need for us to link in the dynamic version of the library as well
   lib_env.AppendUnique( LINKFLAGS = ['/NODEFAULTLIB:LIBCMT'] )

lib = ves_pkg.createLoadableModule( 'ConstructionBotsGP', lib_env,
    installPrefix = pj( 'share', 'vesuite', 'examples', 'ConstructionBots', 'Plugins', 'GE', host_type ) )

lib.addSources( sources )
lib.build()
