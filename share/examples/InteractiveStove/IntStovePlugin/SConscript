##Builds WinClient program
import os, sys, string
import SConsAddons.Util as sca_util
import distutils.util
pj = os.path.join

host_type = distutils.util.get_platform()

Import('ves_pkg buildDir GetPlatform wxwidgets_options vpr_options tao_options  xerces_options osg_options')

srcs = Split("""
   IntStoves_UI_Dialog.cpp
   IntStoves.cpp
   GL_Engine.cpp
   GLCanvasWrapper.cxx
""")

headers = Split("""
   IntStoves_UI_Dialog.h
   IntStoves.h
   GL_Engine.h
   GLCanvasWrapper.h
""")

lib_env = ves_pkg.getEnv().Clone()

lib_env.AppendUnique( LIBS = ['ves_conductor_plugin',
                        'ves_open_xml' ] )
lib_env.AppendUnique( LIBPATH = [ pj('#', buildDir, 'src','ves','conductor' ),
                            pj('#', buildDir, 'src','ves','open', 'xml' ) ] )

if GetPlatform() != 'win32':
   lib_env.ParseConfig( 'wx-config --libs gl' )

vpr_options.apply( lib_env )
wxwidgets_options.apply( lib_env )
tao_options.apply( lib_env )
xerces_options.apply( lib_env )
osg_options.apply( lib_env )

#print osg_options.getSettings()
#self.flagpoll_parser = sca_util.FlagPollParser(self.moduleName, self.fpcFile)

if GetPlatform() == 'win32':
   lib_env['no_import_lib'] = 1
   lib_env['WINDOWS_INSERT_MANIFEST'] = False
   lib_env.AppendUnique( LIBS = ['glut32'])
elif GetPlatform() == 'darwin':
   lib_env.AppendUnique( LINKFLAGS = ['-framework','GLUT','-framework','OpenGL'])
else:
   lib_env.AppendUnique( LIBS = ['glut'])

lib = ves_pkg.createLoadableModule( 'InteractiveStoveUI', lib_env,
    installPrefix = pj( 'share', 'vesuite', 'examples', 'InteractiveStove', 'Plugins', 'UI', host_type ) ) 
   
lib.addSources(srcs)
lib.build()
