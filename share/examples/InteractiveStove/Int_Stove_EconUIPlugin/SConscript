##Builds stoves plugins
import os, sys, string
import SConsAddons.Util as sca_util
import distutils.util
pj = os.path.join

host_type = distutils.util.get_platform()

Import('RootDir ves_pkg buildDir GetPlatform wxwidgets_options vpr_options tao_options  xerces_options')

srcDir = os.path.abspath( pj(RootDir, 'share', 'examples', 'InteractiveStove','Int_Stove_EconUIPlugin') )
srcs = sca_util.getSourcesRecursive( srcDir )
headers = sca_util.getHeadersRecursive( srcDir )

lib_env = ves_pkg.getEnv().Clone()

lib_env.AppendUnique( LIBS = ['ves_conductor_plugin',
                        'ves_open_xml' ] )
lib_env.AppendUnique( LIBPATH = [ pj('#', buildDir, 'src','ves','conductor' ),
                            pj('#', buildDir, 'src','ves','open', 'xml' ) ] )

#if GetPlatform() != 'win32':
#   lib_env.ParseConfig( 'wx-config --libs gl' )

vpr_options.apply( lib_env )
wxwidgets_options.apply( lib_env )
tao_options.apply( lib_env )
xerces_options.apply( lib_env )

if GetPlatform() == 'win32':
   lib_env['no_import_lib'] = 1
   lib_env['WINDOWS_INSERT_MANIFEST'] = False
#   lib_env.AppendUnique( LIBS = ['glut32'])
#elif GetPlatform() == 'darwin':
#   lib_env.AppendUnique( LINKFLAGS = ['-framework','GLUT','-framework','OpenGL'])
#else:
#   lib_env.AppendUnique( LIBS = ['glut'])

lib = ves_pkg.createLoadableModule( 'InteractiveStoveEconUI', lib_env,
    installPrefix = pj( 'share', 'vesuite', 'examples', 'InteractiveStove', 'Plugins', 'UI', host_type ) ) 
   
lib.addSources(srcs)
lib.build()
