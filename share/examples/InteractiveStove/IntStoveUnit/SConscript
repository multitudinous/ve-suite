##Builds BaffleUnit program
import os, sys, string
import SConsAddons.Util as sca_util
import distutils.util
pj = os.path.join

host_type = distutils.util.get_platform()

Import('baseEnv ves_pkg LIBDIR buildDir vtk_options osg_options xerces_options')

srcs = Split("""
   IntStoveUnit_client.cpp
   IntStoveUnit_i.cpp
   baffle.cpp
   create_stove.cpp
   inlet.cpp
   stove.cpp
""")

headers = Split("""
   IntStoveUnit_i.h
   baffle.h
   create_stove.h
   inlet.h
   stove.h
""")

lib_env = ves_pkg.getEnv().Copy()
lib_env.Append(LIBS = ['ves_open_xml', 'ves_ce_unitwrapper', 'ves_open_module'])
lib_env.Append(LIBPATH = [pj(os.getenv('VE_SUITE_HOME'), buildDir, 'src', 'ves', 'open'),
			                 pj(os.getenv('VE_SUITE_HOME'), buildDir, 'src', 'ves', 'open', 'xml'),
			                 pj(os.getenv('VE_SUITE_HOME'), buildDir, 'src', 'ves', 'ce', 'unitwrapper'),
                          pj(os.getenv('VE_SUITE_HOME'), buildDir, 'external', 'loki-0.1.6')])

lib_env.Append(CPPPATH = [pj(os.getenv('VE_SUITE_HOME'), buildDir),
                          pj(os.getenv('VE_SUITE_HOME'), buildDir, 'src'),
	                       pj(os.getenv('VE_SUITE_HOME'), 'src'),
	                       pj(os.getenv('VE_SUITE_HOME'), buildDir, 'src', 'ves', 'open'),
                          pj(os.getenv('VE_SUITE_HOME'), 'external', 'loki-0.1.6', 'include')])

lib_env.ParseConfig('flagpoll vrjuggler --libs --cflags')
lib_env.ParseConfig('flagpoll Boost.Filesystem --libs --cflags')
lib_env.ParseConfig('flagpoll TAO --libs --cflags')

osg_options.apply( lib_env )
xerces_options.apply( lib_env )
vtk_options.apply( lib_env )

prog = ves_pkg.createProgram('IntStoveUnit', lib_env,
          installPrefix = pj( 'share', 'vesuite', 'examples', 'InteractiveStove', 'Plugins', 'Unit', host_type ))

prog.addSources(srcs)
prog.addHeaders(headers)
prog.build()
