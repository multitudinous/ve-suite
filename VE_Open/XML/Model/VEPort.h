/*************** <auto-copyright.pl BEGIN do not edit this line> **************
 *
 * VE-Suite is (C) Copyright 1998-2006 by Iowa State University
 *
 * Original Development Team:
 *   - ISU's Thermal Systems Virtual Engineering Group,
 *     Headed by Kenneth Mark Bryden, Ph.D., www.vrac.iastate.edu/~kmbryden
 *   - Reaction Engineering International, www.reaction-eng.com
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the
 * Free Software Foundation, Inc., 59 Temple Place - Suite 330,
 * Boston, MA 02111-1307, USA.
 *
 * -----------------------------------------------------------------
 * File:          $RCSfile: VEPort.h,v $
 * Date modified: $Date: 2006-01-14 18:41:24 -0600 (Sat, 14 Jan 2006) $
 * Version:       $Rev: 3503 $
 * -----------------------------------------------------------------
 *
 *************** <auto-copyright.pl END do not edit this line> ***************/

#ifndef _VE_PORT_H_
#define _VE_PORT_H_
/*!\file VEPort.h
  *Data ports API
  */

/*!\class VE_XML::VEPort
 *Class that manages the port data for a specific model.
 *These class holds the raw data and the necessary info to draw the port
 *as well as the port direction (input or output) data
 */
#include <string>
#include <vector>
#include "VE_Open/VE_XML/VEXMLObject.h"

#include <xercesc/dom/DOM.hpp>

namespace VE_XML
{
   class VEPoint;
   class VEDataValuePair;
}

namespace VE_XML
{
class VE_XML_EXPORTS VEPort : public VEXMLObject
{
public:
   ///Constructor
   ///\param rootDoc The owning DOMDocument
   VEPort( DOMDocument* rootDoc );
   ///Destructor
   virtual ~VEPort();
   ///Copy Constructor
   VEPort( const VEPort& );
   ///equal operator
   VEPort& operator= ( const VEPort& );
   
   /// Set the number 
   ///\param number The number of the port
   void SetPortNumber( unsigned int number );

   ///Set the string type
   ///\param name The name of the model that this port is tied to.
   void SetModelName( std::string name );

   ///Set the string data
   ///\param direction The data flow direction either input or output.
   void SetDataFlowDirection( std::string direction );
   
   ///Set the point data
   ///\param location The location of the port in wx terms.
   void SetPortLocation( VEPoint* location );
   
   ///Set the VEDataValuePair data
   ///\param data The VEDataValuePair vector of data.
   void SetPortData( std::vector< VE_XML::VEDataValuePair* > data );

   ///set the data from an string representing the xml
   ///\param xmlInput The input XML data.
   virtual void SetObjectFromXMLData(DOMNode* xmlInput);
   
   ///Get the port number.
   unsigned int GetPortNumber( void );
   ///Get the model name.
   std::string GetModelName( void );
   ///Get the data flow direction.
   std::string GetDataFlowDirection( void );
   ///Get the port location.
   VEPoint* GetPortLocation( void );
   ///Get the port data.
   std::vector< VE_XML::VEDataValuePair* > GetPortData( void );

protected:
   ///Internally update the data.
   ///\param tagName The tag name of this element.
   virtual void _updateVEElement( std::string tagName );

   ///raw datatypes of VEPort that are specified in the verg_model.xsd file
   std::vector< VE_XML::VEDataValuePair* > portData;///<Vector of VEDataValuePairs.
   unsigned int portNumber;///<Number of the port. Generated by wx.
   std::string modelName;///<Name of the model that the port belongs to.
   std::string dataFlow;///<Direction of the data flow, either input or output.
   VEPoint* portLocation;///<Physical location of the port on the wx design canvas.
};
}
#endif// _VE_PORT_H_
