##Builds VE_ShaderLib
import os, sys, string
pj = os.path.join

Import('baseEnv libPath ves_pkg LIBDIR')

sources = Split("""
   TextureImage.cxx
   Uniform.cxx
   Program.cxx
   Shader.cxx 
   ShaderCreator.cxx 
""")

headers = Split("""
   TextureImage.h
   Uniform.h
   Program.h
   Shader.h 
   ShaderCreator.h 
""")

##srcs = map(lambda s: pj('#', 'VE_Open', 'XML', 'Shader', s), shader_srcs)

lib_env = ves_pkg.getEnv().Copy()
lib_env.Append(LIBS = 'VE_XMLLib')
lib_env.ParseConfig('flagpoll xerces --libs --cflags')

if baseEnv['StaticOnly'] == "no":
   lib = ves_pkg.createStaticAndSharedLibrary('VE_ShaderLib',
                                                        lib_env,
                                                        installPrefix = LIBDIR)
else:
   lib = ves_pkg.createStaticLibrary('VE_ShaderLib', lib_env,
                                               installPrefix = LIBDIR)
   
lib.addSources(sources)
lib.addHeaders(headers,  pj( 'VE_Open', 'XML', 'Shader'))
lib.build()
