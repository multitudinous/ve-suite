##Builds idl skeleton files for veopen
import os, sys, string
pj = os.path.join

Import('baseEnv buildDir')

env = baseEnv.Copy()
##env.Append(CPPPATH = [os.getcwd()])
##env.Append(CPPPATH = ['idl'])

targetModule = [pj('#','VE_Open','skel','moduleS.h'), 
          pj('#','VE_Open','skel','moduleC.h')]
targetVjObs = [pj('#','VE_Open','skel','VjObsS.h'), 
               pj('#','VE_Open','skel','VjObsC.h')]

taoPrefix=os.popen('flagpoll TAO --variable=prefix').read().strip()
env.PrependENVPath( 'LD_LIBRARY_PATH',pj( taoPrefix,'lib'))
env.PrependENVPath( 'PATH',pj( taoPrefix,'bin'))
tao_idl ='tao_idl'
idlCmd = tao_idl + ' -o ./VE_Open/skel -in -GI  -I./VE_Open/idl -Wb,export_macro=VE_OPEN_MODULE_EXPORTS -Wb,export_include=VE_Installer/include/VEConfig.h ${SOURCES}'
srcs = [pj('#',buildDir,'VE_Open','idl','module.idl'), 
        pj('#',buildDir,'VE_Open','idl','VjObs.idl')]
bld = Builder(action = idlCmd)
env.Append(BUILDERS = {'tao_idl': bld})
env.tao_idl(targetModule, pj('#',buildDir,'VE_Open','idl','module.idl'))
env.tao_idl(targetVjObs, pj('#',buildDir,'VE_Open','idl','VjObs.idl'))
